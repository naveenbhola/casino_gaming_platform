import { Component, Input } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
export class ChipsetPanelComponent {
    constructor(translate) {
        this.translate = translate;
        this.panelOpenState = false;
        this.chipSetData = [];
        this.csPanelHeaderHeight = '48px';
        // this.translate.setDefaultLang('en_US');
    }
    ngOnInit() {
    }
    isFractionalChipDenom(denom) {
        if (typeof denom === 'number') {
            denom = denom.toString();
        }
        return (denom && denom.indexOf('.') > -1);
    }
}
ChipsetPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-chipset-panel',
                template: "<div class=\"chipsets__wrapper\">\n    <div class=\"chipset\" *ngFor=\"let chipSet of chipSetData\">\n\n        <mat-expansion-panel role=\"group\"\n                             (opened)=\"panelOpenState = true\"\n                             (closed)=\"panelOpenState = false\">\n\n            <mat-expansion-panel-header expandedHeight='{{csPanelHeaderHeight}}'>\n                <div [ngClass]=\"panelOpenState ? 'panel-header--expanded' : 'panel-header--collapsed'\"\n                     class=\"panel-header--collapsed\">\n                    <div *ngIf=\"!panelOpenState\" class=\"labels-row\">\n                        <span [translate]=\"'application.app.common.labels.CHIPSET'\"></span>\n                        <span [translate]=\"'application.app.common.labels.COUNT'\"></span>\n                        <span [translate]=\"'application.app.common.labels.VALUE'\"></span>\n                    </div>\n                    <div *ngIf=\"!panelOpenState\" class=\"values-row\">\n                        <span>{{chipSet.label}}</span>\n                        <span>{{chipSet.count }}</span>\n                        <span>{{chipSet.total | amountFormat }}</span>\n                    </div>\n\n                    <div *ngIf=\"panelOpenState\" class=\"labels-row\">\n                        <span [translate]=\"'application.app.common.labels.CHIPSET'\"></span>\n                    </div>\n                    <div *ngIf=\"panelOpenState\" class=\"values-row\">\n                        <span>{{chipSet.label}}</span>\n                    </div>\n                </div>\n            </mat-expansion-panel-header>\n\n            <div class=\"chipset__table\">\n                <div class=\"chipset__table__header\">\n                    <span [translate]=\"'application.app.common.labels.DENOMINATIONS'\"></span>\n                    <span [translate]=\"'application.app.common.labels.COUNT'\"></span>\n                    <span [translate]=\"'application.app.common.labels.VALUE'\"></span>\n                </div>\n                <div class=\"chipset__table__body\">\n                    <div *ngFor=\"let denom of chipSet.byDenom\" class=\"chipset__table__body--row\">\n                        <span *ngIf=\"!isFractionalChipDenom(denom.denom)\">{{denom.denom | number: '1.0-0'}}</span>\n                        <span *ngIf=\"isFractionalChipDenom(denom.denom)\">{{denom.denom | amountFormat}}</span>\n                        <span>{{denom.count}}</span>\n                        <span>{{denom.total | amountFormat}}</span>\n                    </div>\n                </div>\n                <div class=\"chipset__table__footer\">\n                    <span [translate]=\"'application.app.TABLE_DASH_LABELS.CHIPTRAY.FOOTER_LEFT_LABEL'\"></span>\n                    <span>{{chipSet.count}}</span>\n                    <span>{{chipSet.total | amountFormat}}</span>\n                </div>\n            </div>\n        </mat-expansion-panel>\n    </div>\n</div>\n",
                styles: [":root{--accent:#9c1c23;--accent-bright:#ff562d;--accent-dark:#7d161b;--black:#000;--blue:#00ceff;--blue-dark:#00a3cc;--cyan:#23a6ad;--danger:#dc3545;--dark:#333;--dark-light:grey;--gray30:#5a5858;--gray50:#817e7e;--gray80:#d9d8d8;--green-dark:#1c925d;--green-darker:#0a3321;--green-light:#b2f0d5;--info:#0facd2;--primary:#bb9156;--primary-beige:#f0edca;--primary-bg:#eee7dd;--primary-dark:#ab7348;--primary-light:#d9cb9e;--primary-lighten:#e0cdb2;--secondary:#ccc;--secondary-light:#e6e6e6;--success:#22b573;--success-bright:#24ff00;--warning:#fbb03b;--white:#fff;--white-text:#f5f5f5;--yellow:#ff0;--yellow-bright:#ffea00;--yellow-dark:#cc0}.chipsets__table__body--row,.chipsets__table__footer,.chipsets__table__header{align-items:center;display:grid;grid-template-columns:repeat(3,minmax(72px,1fr));padding:0 8px}.chipsets{background-color:#fff;border-radius:4px}.chipsets__table{-ms-grid-columns:1fr;display:-ms-grid;display:grid;font-size:24px;font-weight:600;grid-template-columns:1fr}.chipsets__table span:nth-child(2){text-align:center}.chipsets__table span:last-child{text-align:right}.chipsets__table__footer,.chipsets__table__header{background-color:#000;color:#f0edca;font-size:.85em;padding:4px 8px}.chipsets__table__body{-ms-grid-columns:1fr;-ms-grid-rows:auto;align-items:start;display:-ms-grid;display:grid;grid-gap:8px;grid-template-columns:1fr;grid-template-rows:auto;margin:8px 0;min-height:64px}.chipsets__table__body--row{background-color:#fff}.chipsets__wrapper{display:grid;font-size:24px;font-weight:600;grid-gap:8px;grid-template-columns:repeat(auto-fit,minmax(160px,432px))}::ng-deep .mat-expansion-panel{border:1px solid #bb9156}::ng-deep .mat-expansion-panel .mat-expansion-panel-header{color:inherit;font-size:.85em;font-weight:inherit;min-height:40px;padding:12px 8px}::ng-deep .mat-expansion-panel.mat-expanded{background-color:#d9d9d9}::ng-deep .mat-expansion-panel .mat-expansion-panel-body{background-color:#fff;padding:0}.panel-header--collapsed,.panel-header--expanded{-ms-grid-columns:1fr;-ms-grid-rows:1fr 1fr;display:-ms-grid;display:grid;grid-gap:8px;grid-template-columns:1fr;grid-template-rows:1fr 1fr;justify-items:center;width:100%}.labels-row,.values-row{-ms-grid-columns:4fr 1fr 1fr;color:inherit;display:-ms-grid;display:grid;grid-template-columns:4fr 1fr 1fr;padding-right:2%;width:100%}.labels-row{color:#999;font-size:.75em}:host{display:-ms-grid;display:grid;padding:.5% .5% 1%}"]
            },] }
];
ChipsetPanelComponent.ctorParameters = () => [
    { type: TranslateService }
];
ChipsetPanelComponent.propDecorators = {
    chipSetData: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHNldC1wYW5lbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb21tb24tdWktdjIvc3JjL2FwcC9jaGlwc2V0LXBhbmVsL2NoaXBzZXQtcGFuZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBRXZELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBTXJELE1BQU0sT0FBTyxxQkFBcUI7SUFNOUIsWUFBb0IsU0FBMkI7UUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFKL0MsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDZCxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUMxQix3QkFBbUIsR0FBVSxNQUFNLENBQUM7UUFHaEMsMENBQTBDO0lBQzlDLENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQztJQUNELHFCQUFxQixDQUFDLEtBQUs7UUFDdkIsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDM0IsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUM1QjtRQUNELE9BQU8sQ0FBRSxLQUFLLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBRyxDQUFDO0lBQ2pELENBQUM7OztZQXRCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsdTZGQUEyQzs7YUFFOUM7OztZQUxPLGdCQUFnQjs7OzBCQVNuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDaGlwU2V0VHlwZX0gZnJvbSAnLi4vaW50ZXJmYWNlL2NoaXBTZXQuaW50ZXJmYWNlJztcbmltcG9ydCB7VHJhbnNsYXRlU2VydmljZX0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FwcC1jaGlwc2V0LXBhbmVsJyxcbiAgICB0ZW1wbGF0ZVVybDogJ2NoaXBzZXQtcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWydjaGlwc2V0LXBhbmVsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ2hpcHNldFBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHBhbmVsT3BlblN0YXRlID0gZmFsc2U7XG4gICAgQElucHV0KCkgY2hpcFNldERhdGEgPSBbXTtcbiAgICBjc1BhbmVsSGVhZGVySGVpZ2h0OnN0cmluZyA9ICc0OHB4JztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlKSB7XG4gICAgICAgIC8vIHRoaXMudHJhbnNsYXRlLnNldERlZmF1bHRMYW5nKCdlbl9VUycpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgIH1cbiAgICBpc0ZyYWN0aW9uYWxDaGlwRGVub20oZGVub20pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkZW5vbSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGRlbm9tID0gZGVub20udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKCBkZW5vbSAmJiBkZW5vbS5pbmRleE9mKCcuJykgPiAtMSAgKTtcbiAgICB9XG59XG4iXX0=