{"version":3,"file":"common-ui.js","sources":["../../common-ui-v2/src/app/constants/url.common.constants.ts","../../common-ui-v2/src/app/constants/url-alert.constants.ts","../../common-ui-v2/src/app/constants/url-authentication.constants.ts","../../common-ui-v2/src/app/constants/url-configuration.constants.ts","../../common-ui-v2/src/app/constants/url-casinomanager.constants.ts","../../common-ui-v2/src/app/constants/url-user.constants.ts","../../common-ui-v2/src/app/constants/url-chipset.constants.ts","../../common-ui-v2/src/app/constants/url-roles.constants.ts","../../common-ui-v2/src/app/constants/url-topology.constants.ts","../../common-ui-v2/src/app/constants/url-cage.constants.ts","../../common-ui-v2/src/app/constants/url-topologytree.constants.ts","../../common-ui-v2/src/app/constants/url-promotion.constants.ts","../../common-ui-v2/src/app/constants/url-game.constants.ts","../../common-ui-v2/src/app/constants/url-device.constants.ts","../../common-ui-v2/src/app/constants/url-players.constant.ts","../../common-ui-v2/src/app/constants/url-table.constants.ts","../../common-ui-v2/src/app/constants/urls.ts","../../common-ui-v2/src/app/constants/constants.ts","../../common-ui-v2/src/app/services/topologytree.service.ts","../../common-ui-v2/src/app/services/topology.service.ts","../../common-ui-v2/src/app/filter/filter.component.ts","../../common-ui-v2/src/app/app-switcher/app-menu.component.ts","../../common-ui-v2/src/app/services/utility.service.ts","../../common-ui-v2/src/app/app-switcher/app-switcher.component.ts","../../common-ui-v2/src/app/services/Authentication/auth.service.ts","../../common-ui-v2/src/app/services/user.service.ts","../../common-ui-v2/src/app/services/Authentication/decoded-token.service.ts","../../common-ui-v2/src/app/services/configuration.service.ts","../../common-ui-v2/src/app/app-switcher/app-list.component.ts","../../common-ui-v2/src/app/breadcrumb/breadcrumb.component.ts","../../common-ui-v2/src/app/services/alert.service.ts","../../common-ui-v2/src/app/sorting/sorting.service.ts","../../common-ui-v2/src/app/services/cage.service.ts","../../common-ui-v2/src/app/services/logout-utility.service.ts","../../common-ui-v2/src/app/services/Authentication/token-handling.service.ts","../../common-ui-v2/src/app/services/top-nav-bar.service.ts","../../common-ui-v2/src/app/services/table-ui.service.ts","../../common-ui-v2/src/app/services/Authentication/auth.guard.ts","../../common-ui-v2/src/app/services/Authentication/jwt-interceptor.service.ts","../../common-ui-v2/src/app/directives/wdts-special-char.directive.ts","../../common-ui-v2/src/app/pipes/wdts-special-char.pipe.ts","../../common-ui-v2/src/app/pipes/amount-format.pipe.ts","../../common-ui-v2/src/app/pipes/round-up.pipe.ts","../../common-ui-v2/src/app/common-translation/common-translation.module.ts","../../common-ui-v2/src/app/common-translation/common-translation.service.ts","../../common-ui-v2/src/app/header/top-nav-bar/top-nav-bar.component.ts","../../common-ui-v2/src/app/services/casinomanager.service.ts","../../common-ui-v2/src/app/player-search/player-search.component.ts","../../common-ui-v2/src/app/header/subnav-bar/subnav-bar.component.ts","../../common-ui-v2/src/app/services/current-topology.service.ts","../../common-ui-v2/src/app/header/subnav-data-bar/subnav-data-bar.component.ts","../../common-ui-v2/src/app/material-component/material-component.module.ts","../../common-ui-v2/src/app/loader/loader.component.ts","../../common-ui-v2/src/app/web-sockets/ws-auth.config.ts","../../common-ui-v2/src/app/chip-icons/chip-icons.component.ts","../../common-ui-v2/src/app/services/promotion.service.ts","../../common-ui-v2/src/app/header/winner-eligible-sessions/winner-eligible-sessions.component.ts","../../common-ui-v2/src/app/action-menu/action-menu.component.ts","../../common-ui-v2/src/app/roll-time/roll-time-diaglog/roll-time-dialog.component.ts","../../common-ui-v2/src/app/roll-time/roll-time.component.ts","../../common-ui-v2/src/app/roll-time/app-roll-time.module.ts","../../common-ui-v2/src/app/access-denied/access-denied.component.ts","../../common-ui-v2/src/app/app-add-node-topology/app-add-node-topology.component.ts","../../common-ui-v2/src/app/app-tab-bar/app-tab-bar.component.ts","../../common-ui-v2/src/app/buy-ins/buy-ins.component.ts","../../common-ui-v2/src/app/opener-closer/opener-closer.component.ts","../../common-ui-v2/src/app/fill-credit/fill-credit.component.ts","../../common-ui-v2/src/app/game-history/game-history.component.ts","../../common-ui-v2/src/app/chipset-panel/chipset-panel.component.ts","../../common-ui-v2/src/app/common-ui-lib.module.ts","../../common-ui-v2/src/app/web-sockets/ws-alert.config.ts","../../common-ui-v2/src/app/services/chip.service.ts","../../common-ui-v2/src/app/utils.ts","../../common-ui-v2/src/app/utils/input-validation-utils.ts","../../common-ui-v2/src/app/app-tables/app-tables.component.ts","../../common-ui-v2/src/app/app-tables/app-tables.service.ts","../../common-ui-v2/src/app/pagination/pagination.component.ts","../../common-ui-v2/src/app/app-tables/app-tables.module.ts","../../common-ui-v2/src/app/topology-tree-drag-drop/topology-dragdrop-database.ts","../../common-ui-v2/src/app/topology-tree-drag-drop/confirm-delete/confirm-delete.component.ts","../../common-ui-v2/src/app/topology-tree-drag-drop/topology-tree-drag-drop.component.ts","../../common-ui-v2/src/app/topology-tree-drag-drop/topology-tree.module.ts","../../common-ui-v2/src/app/services/transactions.service.ts","../../common-ui-v2/src/app/footer/footer-nav.component.ts","../../common-ui-v2/src/app/pipes/minussigntoparenthesis.pipe.ts","../../common-ui-v2/src/app/footer/footer-nav.module.ts","../../common-ui-v2/src/app/services/table-dashboard.service.ts","../../common-ui-v2/src/app/public_api.ts","../../common-ui-v2/src/app/common-ui.ts"],"sourcesContent":["export const protocol = 'https://';\nexport const authenticationType = 'LDAP';\nexport const webServerDNS = 'wdts-gateway-qe6.wdtablesystems.com';\nexport const treasuryPort = '785';\nexport const webDashboardPort = '792';\nexport const webConfigurationTLSPort = '782';\nexport const webCasinoManagerTLSPort = '783';\nexport const webPlayerDashboardTLSPort = '789';\nexport const webAlertsTLSPort = '791';\nexport const webTableDashboardTLSPort = '#@webTableDashboardTLSPort@#';\nexport const webCamTLSPort = '781';\nexport const webCashierTLSPort = '786';\nexport const webLoginPort = '#@webLoginTLSPort@#';\nexport const tableUIProtocol = '#@webserverTableUIProtocol@#';\nexport const tableUIPort = '#@singleTablePort@#';\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlAlertConstantsInterface {\n    socketAlert: string;\n    alertsPath: string;\n    alertCountsPath: string;\n    alertConfigurationPath: string;\n    metricsPath: string;\n    filter: string;\n    tableAlerts: string;\n    alertCountsByCategoryPath: string;\n}\n\nconst basePath = '/api/alert';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const alert: UrlAlertConstantsInterface = {\n    socketAlert: 'wss://' + webServerDNS + '/alert/websocket',\n    alertsPath: baseUrl + 'alerts',\n    alertCountsPath: baseUrl + 'alertCounts',\n    tableAlerts: baseUrl + 'alertCounts/tables',\n    alertConfigurationPath: baseUrl + 'alertConfiguration',\n    metricsPath: baseUrl + 'metrics',\n    filter: baseUrl + 'filters',\n    alertCountsByCategoryPath: baseUrl + 'alertCountsByCategory'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlAuthenticationInterface {\n    login: string;\n    refresh: string;\n    logoutWS: string;\n    logout: string;\n}\n\nconst basePath = '/api/auth';\nconst oAuth = '/oauth/token';\nconst baseUrl = protocol + webServerDNS + basePath + oAuth;\n\nexport const auth: UrlAuthenticationInterface = {\n    login: baseUrl + '/login',\n    refresh: baseUrl + '/refresh',\n    logoutWS: 'wss://' + webServerDNS + basePath + '/logoutRequest/websocket',\n    logout: baseUrl + '/logout'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlConfigurationConstantsInterface {\n    categories: string;\n    configurations: string;\n    properties: string;\n    luckyChipEnabled: string;\n    globalAnonymousHostEnabled: string;\n    insuranceEnabled: string;\n}\n\nconst basePath = '/api/configuration';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const configuration: UrlConfigurationConstantsInterface = {\n    categories: baseUrl + 'categories/',\n    configurations: baseUrl + 'configurations/',\n    properties: baseUrl + 'properties/',\n    luckyChipEnabled: baseUrl +\n    'configurations/?propertyCodes=com.wdts.bonus.luckyChip.enabled&templateTypeCode=SYSTEM&type=TEMPLATE',\n    globalAnonymousHostEnabled: baseUrl +\n    'configurations/?propertyCodes=com.wdts.anonymous.session.alert.enabled&templateTypeCode=SYSTEM&type=TEMPLATE',\n    insuranceEnabled: baseUrl + 'configurations/insurance-bet-enabled/status'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlCasinoConstantsInterface {\n    topologyStatistics: string;\n    topologyStatisticsForVirtualGroup: String;\n    topologyStatisticsTabularView: string;\n    topologyStatisticsGridView: string;\n    topologyStatsByTableType: string;\n    playerStatistics: string;\n    topLosingCasino: string;\n    topWinningCasino: string;\n    topLosingPlayersVirtualGroup: string;\n    topWinningPlayersVirtualGroup: string;\n    tableFilter: string;\n    playerFilter: string;\n    updatePlayer: string;\n    activePlayer: string;\n    userSearch: string;\n    paginatedSearchManualRatings: string;\n    updateManualRating: string;\n    manualRatingNote: string;\n    topologyStatsTabularView: string;\n}\n\nconst basePath = '/api/casinomanager';\nconst version = '/v1/';\nconst authBasePath = '/api/auth';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const casinoMgr: UrlCasinoConstantsInterface = {\n    topologyStatistics: baseUrl + 'topologyStatistics',\n    topologyStatisticsForVirtualGroup: baseUrl + 'topologyStatisticsForVirtualGroup',\n    topologyStatisticsTabularView: baseUrl + 'topologyStatisticsTabularView',\n    topologyStatisticsGridView: baseUrl + 'topologyStatisticsWithCount',\n    topologyStatsByTableType: baseUrl + 'topologyStatsByTableType',\n    playerStatistics: baseUrl + 'playerStatistics',\n    topLosingCasino: baseUrl + 'playerStats/topLosingCasino',\n    topWinningCasino: baseUrl + 'playerStats/topWinningCasino',\n    topLosingPlayersVirtualGroup: baseUrl + 'playerStats/topLosingPlayersVirtualGroup',\n    topWinningPlayersVirtualGroup: baseUrl + 'playerStats/topWinningPlayersVirtualGroup',\n    tableFilter: baseUrl + 'filter',\n    playerFilter: baseUrl + 'playerFilter',\n    updatePlayer: baseUrl + 'updatePlayer',\n    activePlayer: baseUrl + 'activePlayer',\n    userSearch: protocol + webServerDNS + authBasePath + version + 'users/',\n    paginatedSearchManualRatings: baseUrl + 'paginatedSearchManualRatings',\n    updateManualRating: baseUrl + 'manualRatings/',\n    manualRatingNote: baseUrl + 'manualRatingNote/',\n    topologyStatsTabularView: baseUrl + 'topologyStatsTabularView'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlUserConstantsInterface {\n    usersPath: String;\n    users: String;\n    roles: string;\n    applications: string;\n}\n\nconst basePath = '/api/user';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const user: UrlUserConstantsInterface = {\n    usersPath: baseUrl + 'users/',\n    users: baseUrl + 'users/',\n    roles: baseUrl + 'roles/',\n    applications: baseUrl + 'applications/',\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlChipSetConstantsInterface {\n    chipSet: string;\n    currencyList: string;\n    companyList: string;\n    updateChipSet: string;\n    chipTrayScan_NEW: string;\n    missingChips: string;\n    missingChipScan: string;\n    getScanCompDetail: string;\n}\n\nconst basePath = '/api/chip';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const chipSet: UrlChipSetConstantsInterface = {\n    chipSet: baseUrl + 'chipsets/configurationChipsets',\n    currencyList: baseUrl + 'currency',\n    companyList: baseUrl + 'company',\n    updateChipSet: baseUrl + 'chipsets',\n    chipTrayScan_NEW: baseUrl + 'chipTrayScans',\n    missingChips: baseUrl + 'missingChipList',\n    missingChipScan: baseUrl + 'getScanDetail',\n    getScanCompDetail: baseUrl + 'getScanCompDetail'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlRolesConstantsInterface {\n    roleData: string;\n    permission: string;\n}\n\nconst basePath = '/api/user';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\nexport const roles: UrlRolesConstantsInterface = {\n    roleData: baseUrl + 'roles',\n    permission: baseUrl + 'permissions'\n};\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlTopologyConstantsInterface {\n    topologyGroups: string;\n    topologyTypes: string;\n    topologyNodes: string;\n    virtualGroupNodesUrl: string;\n}\n\nconst basePath = '/api/topology';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const topology: UrlTopologyConstantsInterface = {\n    topologyGroups: baseUrl + 'topologyGroups/',\n    topologyTypes: baseUrl + 'topologyTypes/',\n    topologyNodes: baseUrl + 'topologyNodes/',\n    virtualGroupNodesUrl: baseUrl + 'topologyGroups/?groupType=VIRTUAL&userId='\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlCageConstantsInterface {\n    chipsInventory: string;\n    localGamingDay: string;\n    nextRollDtm: string;\n    gamingDays: string;\n    buyInTransaction: string;\n    chipTrayScan: string;\n    paginatedOpenerCloser: string;\n    missingChips: string;\n    missingChipScan: string;\n    getScanCompDetail: string;\n    chipTrayOpenerCloser: string;\n    openerCloserReport: string;\n    printReport: string;\n    getfcTransactions: string;\n    gamingDay: string;\n}\n\nconst basePath = '/api/chip';\nconst cageBasePath = '/api/cage';\nconst printBasePath = '/api/print';\nconst casinoBasePath = '/api/casinomanager';\nconst version = '/v1/';\nconst transactions = 'transactions';\nconst baseUrl = protocol + webServerDNS + basePath + version;\nconst cageBaseUrl = protocol + webServerDNS + cageBasePath + version;\nconst casinoBaseUrl = protocol + webServerDNS + casinoBasePath + version;\nconst printBaseUrl = protocol + webServerDNS + printBasePath + version;\n\nexport const cage: UrlCageConstantsInterface = {\n    chipsInventory: baseUrl + 'chipTrayInventory/',\n    localGamingDay: casinoBaseUrl + 'localGamingDay',\n    nextRollDtm: casinoBaseUrl + 'nextRollDtm',\n    gamingDays: casinoBaseUrl + 'localGamingDaysInHierarchy',\n    buyInTransaction: baseUrl + transactions,\n    chipTrayScan: baseUrl + 'chipTrayScans/table/',\n    paginatedOpenerCloser: baseUrl + 'paginatedOpenerCloser',\n    missingChips: baseUrl + 'missingChipList',\n    missingChipScan: baseUrl + 'getScanDetail',\n    getScanCompDetail: baseUrl + 'getScanCompDetail',\n    chipTrayOpenerCloser: baseUrl + 'chipTrayOpenerCloser',\n    openerCloserReport: baseUrl + 'openerCloserReportData',\n    printReport: printBaseUrl + 'renderReport',\n    getfcTransactions: cageBaseUrl + 'fcTransactions',\n    gamingDay: '2019-03-28'\n};\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlTopologyTreeConstantsInterface {\n    topologyTreeNodesUrl: string;\n    unassignedNondeUrl: string;\n    topologyNodesUrls: string;\n    accessGroupNodesUrl: string;\n}\n\nconst basePath = '/api/topology';\nconst version = '/v1/';\nconst commonPath = 'topologyNodes/';\nconst topologyGroupPath = 'topologyGroups/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const topologyTree: UrlTopologyTreeConstantsInterface = {\n    topologyNodesUrls: baseUrl + commonPath,\n    topologyTreeNodesUrl: baseUrl + commonPath + 'hierarchy',\n    unassignedNondeUrl: baseUrl + commonPath + 'global/UNASSIGNED',\n    accessGroupNodesUrl: baseUrl + topologyGroupPath\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlPromotionConstantsInterface {\n    promotionPath: string;\n    promotionUpdatePath: string;\n    managePromotionEnabled: string;\n    winners: string;\n    promotionsEligibleDays: string;\n    promotionsWinnerVoucher: string;\n    promotionsCompApi: string;\n}\n\nconst basePath = '/api/promotion';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\nconst compApiBasePath = protocol + webServerDNS + '/api/integration' + version + 'integration/'\n\nexport const promotion: UrlPromotionConstantsInterface = {\n    promotionPath: baseUrl + 'promotions',\n    promotionUpdatePath: baseUrl,\n    managePromotionEnabled: baseUrl + 'promotion-management-enabled/status',\n    winners: baseUrl + 'winners',\n    promotionsEligibleDays: baseUrl + 'promotions-eligible-days',\n    promotionsWinnerVoucher: baseUrl,\n    promotionsCompApi: compApiBasePath\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlGameInterface {\n    paginatedSearchManualRatings: string;\n    paginatedSessions: string;\n    paginatedGames: string;\n    bets: string;\n    sessions: string;\n    sessionsByIds: string;\n    updateIrcNumber: string;\n    sessionNote: string;\n    manualRatings: string;\n}\n\nconst basePath = '/api/game';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const game: UrlGameInterface = {\n    paginatedSearchManualRatings: baseUrl + 'paginatedSearchManualRatings',\n    paginatedSessions: baseUrl + 'paginatedSessions',\n    paginatedGames: baseUrl + 'paginatedGames',\n    bets: baseUrl + 'bets',\n    sessions: baseUrl + 'sessions',\n    sessionsByIds: baseUrl + 'sessionsByIds',\n    updateIrcNumber: baseUrl + 'updateIrcNumber',\n    sessionNote: baseUrl + 'sessionNote',\n    manualRatings: baseUrl + 'manualRatings'\n};\n\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlDeviceConstantsInterface {\n    deviceBasePath: string;\n}\n\nconst basePath = '/device';\nconst baseUrl = protocol + webServerDNS + basePath;\n\nexport const device: UrlDeviceConstantsInterface = {\n    deviceBasePath: baseUrl + '/'\n};\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlPlayersInterface {\n    playersSearch: string;\n}\n\nconst basePath = '/api/player';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\n\nexport const player: UrlPlayersInterface = {\n    playersSearch: baseUrl + 'players/'\n};\n","import {protocol, webServerDNS} from './url.common.constants';\n\nexport interface UrlTableConstantsInterface {\n  playerSearch: string;\n}\n\nconst basePath = '/api/table';\nconst version = '/v1/';\nconst baseUrl = protocol + webServerDNS + basePath + version;\nexport const table: UrlTableConstantsInterface = {\n    playerSearch: baseUrl + 'players/'\n};\n","import {alert, UrlAlertConstantsInterface} from './url-alert.constants';\nimport {auth, UrlAuthenticationInterface} from './url-authentication.constants';\nimport {UrlUserConstantsInterface, user} from './url-user.constants';\nimport {configuration, UrlConfigurationConstantsInterface} from './url-configuration.constants';\nimport {chipSet, UrlChipSetConstantsInterface} from './url-chipset.constants';\nimport {roles, UrlRolesConstantsInterface} from './url-roles.constants';\nimport {topology, UrlTopologyConstantsInterface} from './url-topology.constants';\nimport {cage, UrlCageConstantsInterface} from './url-cage.constants';\nimport {UrlTopologyTreeConstantsInterface, topologyTree} from './url-topologytree.constants';\nimport {promotion, UrlPromotionConstantsInterface} from './url-promotion.constants';\nimport {casinoMgr, UrlCasinoConstantsInterface} from './url-casinomanager.constants';\nimport {game, UrlGameInterface} from './url-game.constants';\nimport {device, UrlDeviceConstantsInterface} from './url-device.constants';\nimport {player, UrlPlayersInterface} from './url-players.constant';\nimport {table, UrlTableConstantsInterface} from './url-table.constants';\n\nexport interface URLInterface {\n    alert: UrlAlertConstantsInterface;\n    auth: UrlAuthenticationInterface;\n    user: UrlUserConstantsInterface;\n    config: UrlConfigurationConstantsInterface;\n    chipSet: UrlChipSetConstantsInterface;\n    roles: UrlRolesConstantsInterface;\n    topology: UrlTopologyConstantsInterface;\n    cage: UrlCageConstantsInterface;\n    topologyTree: UrlTopologyTreeConstantsInterface;\n    promotion: UrlPromotionConstantsInterface;\n    casinoMgr: UrlCasinoConstantsInterface;\n    game: UrlGameInterface;\n    device: UrlDeviceConstantsInterface;\n    player: UrlPlayersInterface;\n    table: UrlTableConstantsInterface;\n}\n\nexport const urls: URLInterface = {\n    alert: alert,\n    auth: auth,\n    user: user,\n    config: configuration,\n    chipSet: chipSet,\n    roles: roles,\n    topology: topology,\n    cage: cage,\n    topologyTree: topologyTree,\n    promotion: promotion,\n    casinoMgr: casinoMgr,\n    game: game,\n    device: device,\n    player : player,\n    table: table\n};\n\n\n","/**\n * Created by akgupta on 11/19/18.\n */\nexport const dialogSize = {\n    xsmall: '30vw',\n    small: '50vw',\n    medium: '65vw',\n    large: '80vw',\n    xlarge: '90vw',\n    fullscreen: '98vw'\n};","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nexport interface ITopologyNodes {\n    meta: {\n        href: string,\n        mediaType: string\n    };\n    nodeId: string;\n    name: string;\n    shortName: string;\n    type: number;\n    description: string;\n    deleted: boolean;\n    retired: boolean;\n    parentNodeId: number;\n    parentNodeHref: string;\n    path: string;\n    childNodesHrefs: Array<any>;\n    createdDtm: string;\n    updatedDtm: string;\n    status: string;\n    children: Array<any>;\n}\n\n\n/**\n * AVG:(Access or Virtual Group) nodes, this interface has common properties for access and virtual group.\n */\nexport interface ITopologyAVGNodes {\n    createdDtm: string;\n    groupName: string;\n    groupType: string;\n    meta: {\n        href: string,\n        mediaType: string\n    };\n    topologyGroupId: number;\n    topologyId: number;\n    topologyNodeIds: Array<any>;\n    updatedDtm: string;\n    userId: number;\n}\n\n/**\n * if you need to provide it at global level do not specify the module here just write the 'root', this is restricted to module if you\n * want to use the service need to import TopologyTreeModule.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopologytreeService {\n  constructor(private _http: HttpClient) { }\n\n    getTopologyNodes(url) {\n        return this._http.get(url) as Observable<ITopologyNodes[]>;\n    }\n    getTopologyTypes(url) {\n        return this._http.get(url) as Observable<ITopologyNodes[]>;\n    }\n\n    getTopologyNodeByNodeId(url, params: HttpParams = null) {\n        return this._http.get(url, { params }) as Observable<ITopologyNodes[]>;\n    }\n    getAccessOrVirtualGroupNodes(url, params: HttpParams = null) {\n        return this._http.get(url, { params }) as Observable<ITopologyAVGNodes[]>;\n    }\n    getTopologyNodeUnassigned(url) {\n        return this._http.get(url) as Observable<ITopologyNodes[]>;\n    }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\nimport {urls} from '../constants/urls';\nimport {TopologyNodeInterface, TopologyTypesInterface} from '../interface/topology-types.interface';\nimport {TopologytreeService} from './topologytree.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TopologyService {\n    topologyTypes;\n    topologyNodes;\n    topologyNodeNames;\n    //companyNode;\n    siteChildren;\n    accessGroupNodes;\n    virtualGroupNodes;\n    unAssignedNodes;\n    unassignedNodesArr;\n    accessGroupParams = new HttpParams().set('groupType', 'ACCESS');\n    virtualGroupParams = new HttpParams().set('groupType', 'VIRTUAL');\n    initialized = new EventEmitter();\n    nodeClicked = new EventEmitter();\n    terminalClicked = new EventEmitter();\n    areasLabelClicked = new EventEmitter();\n    nodeUpdated = new EventEmitter();\n    nodeDragged = new EventEmitter();\n\n    constructor(private http: HttpClient,\n                private treeService: TopologytreeService) {\n            this.initTopology();\n\n    }\n\n    initTopology() {\n        //Need To Fix\n                    if (!this.topologyTypes && !this.topologyNodes && !this.accessGroupNodes) {\n                        //GR-3058 changes.authValues clientId\n                        const authValues = JSON.parse(localStorage.getItem('authValues'));\n                        if (!authValues) {\n                            this.fetchTopologyData();\n                        } else {\n                            if (authValues && authValues.clientId !== 'lgn') {\n                                this.fetchTopologyData();\n                            }\n                        }\n                    }\n\n        // if (!this.virtualGroupNodes) {\n        //     this.fetchTopologyDataWithVG();\n        // }\n    }\n\n    fetchTopologyData() {\n        forkJoin(\n            this.getTopologyType({}),\n            this.treeService.getTopologyNodes(urls.topologyTree.topologyTreeNodesUrl),\n            this.treeService.getAccessOrVirtualGroupNodes(urls.topologyTree.accessGroupNodesUrl, this.accessGroupParams))\n            .subscribe((result) => {\n                this.topologyTypes = this.simplifyTopologyTypes(result[0]);\n                this.topologyNodes = result[1];\n                this.topologyNodeNames = this.createNodeNamesObject(result[1]);\n                this.siteChildren = this.getSiteChildren(this.topologyNodeNames);\n                // this.getCompanyNodeId();\n                this.accessGroupNodes = result[2];\n                if (result.length > 0) {\n                    this.initialized.next('nodesInitialized');\n                }\n            });\n    }\n\n    // fetchTopologyDataWithVG() {\n    //     forkJoin(\n    //         this.getTopologyType({}),\n    //         this.treeService.getTopologyNodes(urls.topologyTree.topologyTreeNodesUrl),\n    //         this.treeService.getAccessOrVirtualGroupNodes(urls.topologyTree.accessGroupNodesUrl, this.virtualGroupParams))\n    //         .subscribe((result) => {\n    //             //console.log(' fetchTopologyDataWithVGfork join result', JSON.stringify(result));\n    //             this.topologyTypes = this.simplifyTopologyTypes(result[0]);\n    //             this.topologyNodes = result[1];\n    //             //console.log(\"this.topologyNodes\"+JSON.stringify(this.topologyNodes))\n    //             this.topologyNodeNames = this.createNodeNamesObject(result[1]);\n    //             //this.getCompanyNodeId();\n    //             this.siteChildren = this.getSiteChildren(this.topologyNodeNames);\n    //             this.virtualGroupNodes = result[2];\n    //             if (result.length > 0) {\n    //                 this.initialized.next('nodesInitializedWithVg');\n    //             }\n    //         });\n    // }\n\n    // getCompanyNodeId(){\n    //     for (const key in this.topologyNodeNames){\n    //         if (this.topologyNodeNames[key].type === 100){\n    //             this.companyNode = {\n    //                 \"nodeId\": this.topologyNodeNames[key].nodeId,\n    //                 \"name\": this.topologyNodeNames[key].name,\n    //                 \"shortName\": this.topologyNodeNames[key].shortName\n    //             }\n    //                 this.topologyNodeNames[key].nodeId;\n    //             console.log(\"this.companyNode \"+JSON.stringify(this.companyNode ))\n    //         }\n    //     }\n    // }\n\n    getAccessGroup(options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topology.topologyGroups}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getTopologyType(options: {}): Observable<TopologyTypesInterface[]> {\n        return this.http.get<TopologyTypesInterface[]>(urls.topology.topologyTypes, options);\n    }\n\n    getTopologyNodes(options: {}): Observable<TopologyNodeInterface[]> {\n        return this.http.get<TopologyNodeInterface[]>(urls.topology.topologyNodes, options);\n    }\n\n    getTopologyPits(options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topology.topologyNodes}?typeId=400`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getTablesByPitId(pitId, options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topology.topologyNodes}?parentId=${pitId}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    updateTopologyNode(nodeId, params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.topologyNodesUrls}${nodeId}`;\n        return this.http.post<HttpResponse<Object>>(url, params);\n    }\n\n    updateTopologyNodeStatus(nodeId, params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.topologyNodesUrls}${nodeId}`;\n        return this.http.put<HttpResponse<Object>>(url, params);\n    }\n\n    createNodeOnTree(params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.topologyNodesUrls}`;\n        return this.http.post<HttpResponse<Object>>(url, params);\n    }\n\n    createNodeAccessGroup(params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.accessGroupNodesUrl}`;\n        return this.http.post<HttpResponse<Object>>(url, params);\n    }\n\n    updateAccessGroupNode(groupId, params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.accessGroupNodesUrl}${groupId}`;\n        return this.http.put<HttpResponse<Object>>(url, params);\n    }\n\n    deleteAccessGroupNode(groupId, params: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.topologyTree.accessGroupNodesUrl}${groupId}`;\n        return this.http.delete<HttpResponse<Object>>(url, params);\n    }\n\n    getAccessGroupUsers(groupId, options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.user.usersPath}?topologyGroup=${groupId}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getTableProperties(topologyId, options: {}): Observable<HttpResponse<Object>> {\n        const tablePropertiesArr = ['com.wdts.table.num.player.positions', 'com.wdts.table.rfid.enabled', 'com.wdts.table.lucky6.enabled', 'com.wdts.table.lucky6.antenna'];\n        const url = `${urls.config.configurations}devices?topologyId=${topologyId}&propertyCodes=${tablePropertiesArr}&templateTypeCode=BACCARAT`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    // getCurrentGamingDay(topologyId): Observable<HttpResponse<Object>> {\n    //     const url = `${urls.cage.localGamingDay}?topologyId=${topologyId}`;\n    //     console.log(\"topology service\"+url)\n    //     return this.http.get<HttpResponse<Object>>(url);\n    // }\n    createNodeNamesObject(nodesData) {\n        const namesObj = {};\n        for (const obj in nodesData) {\n            if (nodesData.hasOwnProperty(obj) && nodesData[obj].length > 0) {\n                for (let i = 0, len = nodesData[obj].length; i < len; i++) {\n                    namesObj[nodesData[obj][i].nodeId] = nodesData[obj][i];\n                }\n            }\n        }\n        return namesObj;\n    }\n\n    simplifyTopologyTypes(typesArr) {\n        const typesMap = new Map<number, object>();\n        for (const obj in typesArr) {\n            if (typesArr.hasOwnProperty(obj)) {\n                typesMap.set(typesArr[obj].topologyTypeId, typesArr[obj]);\n            }\n        }\n        return typesMap;\n    }\n\n    getSiteChildren(nodeNames) {\n        const keysArr = Object.keys(nodeNames);\n        const allKeys = [];\n        for (let i = 0, iLen = keysArr.length; i < iLen; i++) {\n            allKeys.push(parseInt(keysArr[i], 10));\n        }\n        let sites;\n        sites = this.getSites(nodeNames);\n        const siteKeys = [];\n        for (const a in sites) {\n            if (sites.hasOwnProperty(a)) {\n                siteKeys.push(sites[a].id);\n            }\n        }\n        for (const obj in sites) {\n            if (sites.hasOwnProperty(obj)) {\n                sites[obj].children = this.getChildren(sites[obj], nodeNames);\n            }\n        }\n        return sites;\n    }\n\n    getSites(nodeNames) {\n        const nodes = nodeNames;\n        const sites = {};\n        for (const node in nodes) {\n            if (nodes.hasOwnProperty(node) && nodes[node].type === 150) {\n                const nodeObj = {id: 'number', children: []};\n                nodeObj.id = nodes[node].nodeId;\n                nodeObj.children = [];\n                sites[nodes[node].name] = nodeObj;\n            }\n        }\n        return sites;\n    }\n\n    getChildren(siteObj, nodeNames) {\n        let childrenArr = [];\n        for (const obj in nodeNames) {\n            if (siteObj.id === nodeNames[obj].parentNodeId) {\n                childrenArr.push(nodeNames[obj].nodeId);\n            }\n        }\n        childrenArr = this.getOtherChildren(childrenArr, nodeNames);\n        return childrenArr;\n    }\n\n    getOtherChildren(childrenArr, nodeNames) {\n        for (const obj in nodeNames) {\n            for (let i = 0, iLen = childrenArr.length; i < iLen; i++) {\n                if (childrenArr[i] === nodeNames[obj].parentNodeId) {\n                    if (!(childrenArr.indexOf(nodeNames[obj].nodeId) > -1)) {\n                        childrenArr.push(nodeNames[obj].nodeId);\n                    }\n                }\n            }\n        }\n        childrenArr = this.getAllChildren(childrenArr);\n        return childrenArr;\n    }\n\n    getAllChildren(childrenArr) {\n        const nodeKeys = Object.keys(this.topologyNodes);\n        const keysArr = [];\n        for (let i = 0, iLen = nodeKeys.length; i < iLen; i++) {\n            keysArr.push(parseInt(nodeKeys[i], 10));\n        }\n        for (const a in childrenArr) {\n            if (keysArr.indexOf(childrenArr[a]) > -1) {\n                const childrenOfNode = this.topologyNodes[childrenArr[a]];\n                for (let i = 0, iLen = childrenOfNode.length; i < iLen; i++) {\n                    if (childrenArr.indexOf(childrenOfNode[i].nodeId) === -1) {\n                        childrenArr.push(childrenOfNode[i].nodeId);\n                    }\n                }\n            }\n        }\n        for (const b in childrenArr) {\n            if (keysArr.indexOf(childrenArr[b]) > -1) {\n                const allChildren = this.topologyNodes[childrenArr[b]];\n                for (let i = 0, iLen = allChildren.length; i < iLen; i++) {\n                    if (childrenArr.indexOf(allChildren[i].nodeId) === -1) {\n                        childrenArr.push(allChildren[i].nodeId);\n                    }\n                }\n            }\n        }\n        return childrenArr;\n    }\n\n    createVirtualGroup(node) {\n        const url = `${urls.topology.topologyGroups}`;\n        return this.http.post<HttpResponse<Object>>(url, node);\n    }\n\n    updateVirtualGroup(groupId, object) {\n        const url = `${urls.topology.topologyGroups}${groupId}`;\n        return this.http.put<HttpResponse<Object>>(url, object);\n    }\n\n    deleteVirtualGroup(groupId, object) {\n        const url = `${urls.topology.topologyGroups}${groupId}`;\n        return this.http.delete<HttpResponse<Object>>(url, object);\n    }\n\n    getVirtualGroups(userId) {\n        const url = `${urls.topology.virtualGroupNodesUrl}${userId}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TopologyService} from '../services/topology.service';\nimport {DatePipe, DecimalPipe} from '@angular/common';\n\n@Component({\n    selector: 'app-filter',\n    templateUrl: './filter.component.html',\n    styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnChanges {\n    @Input() configOptions: Object;\n    @Input() isDisabled = false;\n    @Output() EMIT_FILTER = new EventEmitter<any>();\n    @Output() EMIT_FILTER_ALL = new EventEmitter<any>();\n    filterConfigOption: any = {\n        title: '',\n        column: '',\n        class: '',\n        options: [],\n        isTopology: false,\n        selectedOptions: [],\n        isPromotionPit: false,\n        type: ''\n    };\n    searchKey: string;\n    index: number;\n    filterNeedsTranslation = ['status', 'rolled', 'fStatus', 'missingEvent', 'scan1Filter', 'scan2Filter', 'transactionType'];\n    filterNeedsCapsUnderscore = ['missingEvent', 'scan1Filter', 'scan2Filter'];\n    options: Array<any> = [];\n    disableOption = false;\n\n    constructor(private translate: TranslateService,\n                private topologyService: TopologyService,\n                private decimalPipe: DecimalPipe,\n                private datePipe: DatePipe) {\n        this.searchKey = '';\n        this.index = -1;\n    }\n\n    ngOnChanges() {\n        this.disableOption = this.isDisabled;\n        this.filterConfigOption = this.configOptions;\n        for (let i = 0; i < this.filterConfigOption.selectedOptions.length; i++) {\n            if (this.options.indexOf(this.filterConfigOption.selectedOptions[i]) === -1) {\n                this.options.push(this.filterConfigOption.selectedOptions[i]);\n            }\n        }\n        if (!this.filterConfigOption.isPromotionPit) {\n            this.defaultSelectAll();\n        } else if (this.filterConfigOption.isPromotionPit &&\n            this.filterConfigOption.options.length === this.filterConfigOption.selectedOptions.length) {\n            this.defaultSelectAll();\n        } else if (this.filterConfigOption.isPromotionPit) {\n            if (this.filterConfigOption.selectedOptions.length === 0) {\n                this.selectDeselectAll(null, this.filterConfigOption.isPromotionPit);\n            } else {\n                const tmpOption = Array.from(this.filterConfigOption.selectedOptions);\n                this.options = tmpOption;\n                this.emitFilter(false);\n            }\n        }\n    }\n\n    defaultSelectAll(): void {\n        if (this.filterConfigOption.options.length === this.filterConfigOption.selectedOptions.length ||\n            !this.filterConfigOption.selectedOptions.length) {\n            this.options = ['All', ...this.filterConfigOption.options];\n        }\n    }\n\n    selectOption(params: boolean): void {\n        if (params) {\n            this.selectDeselectAll(params, false);\n        } else {\n            this.selectDeselectOtherOptions();\n        }\n    }\n\n    selectDeselectAll(params, isPromotionPit): void {\n        if (isPromotionPit && params === null) {\n            this.options = [];\n        } else if (this.options.indexOf('All') > -1) {\n            const tmpOption = ['All'];\n            for (let i = 0; i < this.filterConfigOption.options.length; i++) {\n                tmpOption.push(this.filterConfigOption.options[i]);\n            }\n            this.options = tmpOption;\n        } else {\n            this.options = [];\n        }\n        this.emitFilter(params);\n    }\n\n    selectDeselectOtherOptions(): void {\n        if (this.options.length === this.filterConfigOption.options.length && this.options.indexOf('All') < 0) {\n            const tmpOption = ['All'];\n            for (let i = 0; i < this.filterConfigOption.options.length; i++) {\n                tmpOption.push(this.filterConfigOption.options[i]);\n            }\n            this.options = tmpOption;\n            this.emitFilter(true);\n        } else if (this.options.length === this.filterConfigOption.options.length) {\n            const tmpOption = Array.from(this.options);\n            tmpOption.shift();\n            this.options = tmpOption;\n            this.emitFilter(false);\n        } else {\n            this.emitFilter(false);\n        }\n    }\n\n    emitFilter(params): void {\n        let selectedOptions = [];\n        if (this.filterConfigOption.isPromotionPit) {\n            selectedOptions = Array.from(this.options);\n            if (params) {\n                selectedOptions.shift();\n            }\n        } else {\n            selectedOptions = Array.from(this.options).indexOf('All') < 0 ? Array.from(this.options) : [];\n            if (params && selectedOptions) {\n                selectedOptions.shift();\n            }\n        }\n        if (Array.from(this.options).indexOf('All') > -1) {\n            this.EMIT_FILTER_ALL.emit({columnName: this.filterConfigOption.column, selectedOption: ['All']});\n        } else {\n            this.EMIT_FILTER_ALL.emit({columnName: this.filterConfigOption.column, selectedOption: selectedOptions});\n        }\n        this.EMIT_FILTER.emit({columnName: this.filterConfigOption.column, selectedOption: selectedOptions});\n    }\n\n    translateFilterOptions(option): string {\n        let translateStr = '';\n        if (option === '' && option === undefined) {\n            return translateStr;\n        }\n        if (this.filterConfigOption.translatePath && option !== 'All') {\n            translateStr = this.filterConfigOption.column === 'eventTypes' ? this.translate.instant(option + '.Alert_Type_Description') :\n                this.translate.instant(this.filterConfigOption.translatePath + '.' + option);\n        } else if (parseInt(option, 10) === -17 || option === '(Blanks)') {\n            translateStr = this.translate.instant('(Blanks)');\n        } else {\n            if (this.filterConfigOption.isTopology && this.topologyService.topologyNodeNames[option]) {\n                translateStr = this.topologyService.topologyNodeNames[option].name;\n            } else if (this.filterNeedsTranslation.indexOf(this.filterConfigOption.column) !== -1) {\n                if (option !== '' && option !== undefined) {\n                    if (this.filterNeedsCapsUnderscore.indexOf(this.filterConfigOption.column) !== -1) {\n                        translateStr = this.translate.instant(option.replace(/ /g, '_').toUpperCase());\n                    } else {\n                        translateStr = this.translate.instant(option);\n                    }\n\n                }\n\n            } else {\n                translateStr = option;\n            }\n\n        }\n        return translateStr;\n    }\n\n    getFormattedValue(option, columnName, columnType): string {\n        if (columnName === 'gamingDay') {\n            return this.datePipe.transform(option, 'dd-MMM-yyyy');\n        } else if (columnType === 'number' && option > 999) {\n            return this.decimalPipe.transform(option, '2.');\n        } else {\n            return option;\n        }\n    }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-menu',\n    template: '<app-list [currentAppCode]=\"currentAppCode\" *ngIf=\"currentAppCode\"></app-list>',\n    styleUrls: ['./app-switcher.component.scss']\n})\nexport class AppMenuComponent implements OnInit {\n    currentAppCode: any;\n\n    constructor(public dialogRef: MatDialogRef<AppMenuComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.currentAppCode = data.currentAppCode;\n    }\n\n    ngOnInit() {}\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n        providedIn: 'root'\n    })\nexport class UtilityService {\n    updateDimensions = new EventEmitter();\n    updatePageNumbers = new EventEmitter();\n    closeDialog = new EventEmitter();\n    broadcastGlobalCalendarGamingDay = new EventEmitter();\n    broadcastBreadCrumClick = new EventEmitter();\n    gamingDay;\n    isCBPT = true;\n\n    constructor() {\n        this.updateCurrentDimensions();\n    }\n\n    updateGlobalCalendarGamingDay(globalCalendarGamingDay) {\n        this.broadcastGlobalCalendarGamingDay.emit(globalCalendarGamingDay);\n    }\n\n    updateBreadCrumClick(breadcrum) {\n        this.broadcastBreadCrumClick.emit(breadcrum);\n    }\n\n    updateCurrentDimensions() {\n        window.addEventListener('resize', () => {\n            this.updateDimensions.next({\n                scrnWidth: window.innerWidth,\n                scrnHeight: window.innerHeight\n            });\n        });\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {AppMenuComponent} from './app-menu.component';\nimport {dialogSize} from '../constants/constants';\nimport {UtilityService} from '../services/utility.service';\n\n@Component({\n    selector: 'app-switcher',\n    templateUrl: './app-switcher.component.html',\n    styleUrls: ['./app-switcher.component.scss']\n})\nexport class AppSwitcherComponent implements OnInit {\n    isLoginApp: boolean;\n    isPPMaster: boolean;\n    @Input('currentAppCode') currentAppCode;\n\n    constructor(private snackBar: MatSnackBar, public dialog: MatDialog, public utilService: UtilityService) {\n        this.utilService.closeDialog.subscribe((res) => {\n            this.closeAppMenu();\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    ngOnInit() {\n        const authValues = JSON.parse(localStorage.getItem('authValues'));\n        this.isLoginApp = authValues.clientId === 'lgn';\n        location.href.includes('ppmaster') ? this.isPPMaster = true : this.isPPMaster = false;\n    }\n\n    openAppMenu(): void {\n        this.dialog.open(AppMenuComponent, {\n            width: dialogSize.medium,\n            panelClass: 'app-switcher__wrapper',\n            data: {currentAppCode: this.currentAppCode}\n        });\n    }\n    closeAppMenu(): void {\n        this.dialog.closeAll();\n    }\n}\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpBackend, HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../../constants/urls';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    constructor(httpBackend: HttpBackend) {\n        this.http = new HttpClient(httpBackend);\n    }\n\n    getRefreshToken(clientId): Observable<any> {\n        const authValues: any = JSON.parse(localStorage.getItem('authValues'));\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json', 'Authorization': 'Bearer ' +\n                    localStorage.getItem(authValues.jwtTokenKey)\n            }),\n            params: {\n                client_id: clientId\n            }\n        };\n        return this.http.post(urls.auth.refresh, null, httpOptions);\n    }\n\n    logout() {\n        const authValues: any = JSON.parse(localStorage.getItem('authValues'));\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json', 'Authorization': 'Bearer ' +\n                    localStorage.getItem(authValues.jwtTokenKey)\n            })\n        };\n        return this.http.post(urls.auth.logout, null, httpOptions);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\n\nexport interface UserSearchComplex {\n    authHistoryId: number;\n    creationDate: string;\n    employeeId: number;\n    firstName: string;\n    ip: string;\n    lastName: string;\n    location: string;\n    meta: string;\n    title: string;\n    type: string;\n    userId: number;\n    userName: string;\n    userType: string;\n}\n\nexport interface UserSearchNormal {\n    employeeNumber: number;\n    firstName: string;\n    isActive: number;\n    language: string;\n    lastName: string;\n    roles: Array<any>;\n    title: string;\n    userAccessGroups: Array<any>;\n    userId: number;\n    userName: string;\n}\n\n/**\n *  providedIn: 'root', }) export class UserService { } 'root' means that we want provide the service at the root level (AppModule)\n *  When you provide the service at the root level, Angular creates a single, shared instance of service and injects into any class\n *  that asks for it.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    userSearchComplexUrl = '';\n    userSearchNormalUrl = '';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getComplexSearchedUsers() {\n        return this.http.get(this.userSearchComplexUrl) as Observable<UserSearchComplex[]>;\n    }\n\n    getNormalSearchedUsers(options?: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.user.usersPath}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getUserById(userId, options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.user.usersPath}${userId}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    setFavoriteApp(paramObj, userId) {\n        const url = `${urls.user.users}` + userId;\n        return this.http.post(url, paramObj);\n    }\n\n    changeStatus(user, options = {}): Observable<HttpResponse<Object>> {\n        let url = `${urls.user.usersPath}${user.userId}/`;\n        url += user.isActive === 1 ? 'reActivate' : 'suspend';\n        return this.http.post<HttpResponse<Object>>(url, options);\n    }\n\n    getRoles(options: {}): Observable<HttpResponse<Object>> {\n        return this.http.get<HttpResponse<Object>>(urls.user.roles, options);\n    }\n\n    createUpdateUser(options = {userId: 0}): Observable<HttpResponse<Object>> {\n\n        if (options.userId) {\n            const url = `${urls.user.usersPath}${options.userId}`;\n            return this.http.put<HttpResponse<Object>>(url, options);\n        } else {\n            const url = `${urls.user.usersPath}`;\n            return this.http.post<HttpResponse<Object>>(url, options);\n        }\n\n    }\n\n    getAssignedRolesAppList(options: {}): Observable<HttpResponse<Object>> {\n        return this.http.get<HttpResponse<Object>>(urls.user.applications, options);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {AuthInterface} from './auth.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DecodedTokenService {\n    authValues: AuthInterface;\n    constructor(private jwtHelper: JwtHelperService) {\n        this.authValues = JSON.parse(localStorage.getItem('authValues'));\n    }\n    getDecodedJwtToken() {\n        this.authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (this.authValues) {\n            const token = localStorage.getItem(this.authValues.jwtTokenKey);\n            if (token) {\n                return this.jwtHelper.decodeToken(token);\n            }\n        }\n    }\n\n    setDecodedJwtToken(key, token) {\n        localStorage.setItem(key, token);\n    }\n\n    getJwtToken() {\n        this.authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (this.authValues) {\n            return localStorage.getItem(this.authValues.jwtTokenKey);\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\nimport {SystemProperty} from '../interface/configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigurationService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    getLimits(options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?templateTypeCode=TABLE_LIMITS&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getInActiveLimits(options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?templateTypeCode=TABLE_LIMITS&type=TEMPLATE&state=INACTIVE`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getConfigurationProperties(options: {}, type): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.properties}?topologyTypeId=${type}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getConfigurationPropertyValues(options: {}, topologyId): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?topologyId=${topologyId}`;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n\n    saveConfigurationproperties(options: {}): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}`;\n        return this.http.post<HttpResponse<Object>>(url, options);\n    }\n\n    getSystemData(): Observable<SystemProperty[]> {\n        return this.http.get<SystemProperty[]>(urls.config.configurations, {\n            params: {\n                templateTypeCode: 'SYSTEM',\n                type: 'TEMPLATE'\n            }\n        });\n    }\n\n    getConfigurations(topologyId): Observable<HttpResponse<Object>> {\n        const urlConfig = urls.config.configurations + '?topologyId=' + topologyId;\n        return this.http.get<HttpResponse<Object>>(urlConfig);\n    }\n\n    isGlobalAnonymousHostEnabled(): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?propertyCodes=com.wdts.anonymous.session.alert.enabled&templateTypeCode=SYSTEM&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    checkGlobalCbpt(): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?propertyCodes=com.wdts.cbpt.enabled&templateTypeCode=SYSTEM&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    checkFctxnEnabled(): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}?propertyCodes=com.wdts.fctxn.enabled&templateTypeCode=SYSTEM&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    getHostcallTemplate(): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}/?templateTypeCode=PLAY_CRITERIA&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    getHostcallDataOnTopology(topologyId): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}/?templateTypeCode=PLAY_CRITERIA&type=CURRENT&topologyId=${topologyId}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    postHostcallDataOnTopology(data): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}/?templateTypeCode=PLAY_CRITERIA&type=CURRENT`;\n        return this.http.post<HttpResponse<Object>>(url, data);\n    }\n\n    putHostcallData(data,id): Observable<HttpResponse<Object>> {\n        const url = `${urls.config.configurations}/${id}/?templateTypeCode=PLAY_CRITERIA&type=CURRENT`;\n        return this.http.put<HttpResponse<Object>>(url, data);\n    }\n\n    isPlayerAdustmentEnabled() {\n        const url = `${urls.config.configurations}/?propertyCodes=com.wdts.rating.adjustment.enabled&templateTypeCode=SYSTEM&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    getPlayerRankingList() {\n        const url = `${urls.config.configurations}/?propertyCodes=com.wdts.player.tier.types&templateTypeCode=SYSTEM&type=TEMPLATE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    getPlayerAdjustment(topologyId, propertyId) {\n        const url = `${urls.config.configurations}/?topologyId=${topologyId}&propertyId=${propertyId}&templateTypeCode=PLAYER_ADJUSTMENT&type=CURRENT&state=ACTIVE`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    postPlayerAdjustment(topologyId, propertyId, objData) {\n        const url = `${urls.config.configurations}/?fromTopologyId=${topologyId}&propertyId=${propertyId}&templateTypeCode=PLAYER_ADJUSTMENT&type=CURRENT&state=ACTIVE`;\n        return this.http.post<HttpResponse<Object>>(url, objData);\n    }\n\n    updatePlayerAdjustment(topologyId, propertyId, objData) {\n        const url = `${urls.config.configurations}/?topologyId=${topologyId}&propertyId=${propertyId}&templateTypeCode=PLAYER_ADJUSTMENT&type=CURRENT&state=ACTIVE`;\n        return this.http.post<HttpResponse<Object>>(url, objData);\n    }\n\n    putPlayerAdjustment(configId, propertyId, objData) {\n        const url = `${urls.config.configurations}/${configId}/?body=true`;\n        return this.http.put<HttpResponse<Object>>(url, objData);\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {AuthService} from '../services/Authentication/auth.service';\nimport {UserService} from '../services/user.service';\nimport {DecodedTokenService} from '../services/Authentication/decoded-token.service';\nimport {\n    protocol,\n    treasuryPort,\n    webAlertsTLSPort,\n    webCamTLSPort,\n    webCashierTLSPort,\n    webCasinoManagerTLSPort,\n    webConfigurationTLSPort,\n    webPlayerDashboardTLSPort,\n    webServerDNS,\n    webTableDashboardTLSPort\n} from '../constants/url.common.constants';\nimport {UtilityService} from '../services/utility.service';\nimport {ConfigurationService} from '../services/configuration.service';\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './app-list.component.html',\n    styleUrls: ['./app-switcher.component.scss']\n})\nexport class AppListComponent implements OnInit {\n    @Input('currentAppCode') currentAppCode;\n    appSwitcher: any;\n    applicationCodesFromJwt: Array<string>;\n    loading = false;\n    callInProg = false;\n\n    constructor(private authService: AuthService,\n                private userService: UserService,\n                private utilities: UtilityService,\n                private configurationService: ConfigurationService,\n                private decodedTokenService: DecodedTokenService, public utilService: UtilityService) {\n    }\n\n    ngOnInit() {\n        this.checkGlobalCbpt().subscribe(res => {\n            this.utilService.isCBPT = 'true' === res[0].propertyValues[0].propertyValue.toLowerCase();\n            this.initMenuItems();\n            this.loading = true;\n            this.appSwitcher.menuRows = [...this.appSwitcher.appMenuItems];\n            this.applicationCodesFromJwt = this.decodedTokenService.getDecodedJwtToken().applications;\n            this.appSwitcher.favoriteApp = this.decodedTokenService.getDecodedJwtToken().defaultApplication;\n            /*if (localStorage.getItem('favoriteApp') !== null && localStorage.getItem('favoriteApp') !== undefined) {\n                this.appSwitcher.favoriteApp = localStorage.getItem('favoriteApp');\n            }*/\n            this.divideMenuItems();\n        }, error => {\n            this.loading = true;\n            console.error(error);\n        });\n    }\n\n    initMenuItems() {\n        this.appSwitcher = {\n            appMenuItems: [\n                {\n                    applicationCode: 'ALERTS',\n                    key: 'alrt',\n                    storeKey: 'jwt_alert',\n                    name: 'Alerts',\n                    permission: 'ACCESS_ALERTS_APP',\n                    iconClass: 'app-icon__alerts',\n                    translateLabel: 'application.app.common.labels.apps.ALERTS',\n                    openUrl: webAlertsTLSPort,\n                    isVisible: true\n                },\n                {\n                    applicationCode: 'CAM',\n                    key: 'cam',\n                    storeKey: 'jwt_cam',\n                    name: 'CAM',\n                    permission: 'ACCESS_CAM_APP',\n                    iconClass: 'app-icon__cam',\n                    translateLabel: 'application.app.common.labels.apps.CAM',\n                    openUrl: webCamTLSPort,\n                    isVisible: false\n                },\n                {\n                    applicationCode: 'CASHIER',\n                    key: 'cash',\n                    storeKey: 'jwt_cash',\n                    name: 'Cashier',\n                    permission: 'ACCESS_CASHIER_APP',\n                    iconClass: 'app-icon__cashier',\n                    translateLabel: 'application.app.common.labels.apps.CASHIER',\n                    openUrl: webCashierTLSPort,\n                    isVisible: false\n                },\n                {\n                    applicationCode: 'CONFIGURATION',\n                    key: 'conf',\n                    storeKey: 'jwt_config',\n                    name: 'Configuration',\n                    permission: 'ACCESS_CONFIG_APP',\n                    iconClass: 'app-icon__configuration',\n                    translateLabel: 'application.app.common.labels.apps.CONFIG',\n                    openUrl: webConfigurationTLSPort,\n                    isVisible: true\n                },\n                {\n                    applicationCode: 'CASINO_MGR',\n                    key: 'cmr',\n                    storeKey: 'jwt_cmr',\n                    name: 'Casino Manager',\n                    permission: 'ACCESS_CASINO_MGR_APP',\n                    iconClass: 'app-icon__casino-manager',\n                    translateLabel: 'application.app.common.labels.apps.CMGR',\n                    openUrl: webCasinoManagerTLSPort,\n                    isVisible: true\n                },\n                {\n                    applicationCode: 'TREASURY_MGR',\n                    key: 'trs',\n                    storeKey: 'jwt_trs',\n                    name: 'Treasury',\n                    permission: 'ACCESS_TREASURY_MGR_APP',\n                    iconClass: 'app-icon__treasury',\n                    translateLabel: 'application.app.common.labels.apps.TRSMGR',\n                    openUrl: treasuryPort,\n                    isVisible: true\n                },\n                {\n                    applicationCode: 'PLAYER_DASH',\n                    key: 'plr',\n                    storeKey: 'jwt_plr',\n                    name: 'Player Dashboard',\n                    permission: 'ACCESS_PLAYER_DASH',\n                    iconClass: 'app-icon__player-dashboard',\n                    translateLabel: 'application.app.common.labels.apps.PLRDB',\n                    openUrl: webPlayerDashboardTLSPort,\n                    isVisible: this.utilService.isCBPT\n                },\n                {\n                    applicationCode: 'TABLE_DASH',\n                    key: 'tbldash',\n                    storeKey: 'jwt_tbldash',\n                    name: 'Table Dashboard',\n                    permission: 'ACCESS_TABLE_DASH',\n                    iconClass: 'app-icon__table-dash',\n                    translateLabel: 'application.app.common.labels.apps.TBLDB',\n                    openUrl: webTableDashboardTLSPort,\n                    isVisible: false\n                },\n                {\n                    applicationCode: 'REPORTS',\n                    key: 'rpt',\n                    storeKey: 'jwt_rpt',\n                    name: 'BI Application',\n                    permission: 'ACCESS_REPORTS_APP',\n                    iconClass: 'app-icon__reports',\n                    translateLabel: 'application.app.common.labels.apps.BI',\n                    openUrl: 784,\n                    isVisible: true\n                }\n            ],\n            menuRows: []\n        };\n    }\n\n    divideMenuItems() {\n        this.appSwitcher.menuRows = [];\n        this.appSwitcher.appMenuItems.forEach(menuItem => {\n            if (menuItem.applicationCode !== this.currentAppCode && menuItem.isVisible) {\n                this.appSwitcher.menuRows.push(menuItem);\n            }\n        });\n    }\n\n    checkGlobalCbpt() {\n        return this.configurationService.checkGlobalCbpt();\n    }\n\n    setFavoriteApp(event, appCode) {\n        if (appCode === this.appSwitcher.favoriteApp) {\n            return;\n        } else {\n            this.callInProg = true;\n            event.preventDefault();\n            event.stopPropagation();\n            const decodedToken = this.decodedTokenService.getDecodedJwtToken();\n            const userId = decodedToken.userId;\n            const obj = {\n                userId: (userId || 1),\n                defaultApplication: {\n                    applicationCode: appCode\n                }\n            };\n\n            this.userService.setFavoriteApp(obj, userId)\n                .subscribe(response => {\n                    this.appSwitcher.favoriteApp = ( response['defaultApplication']['applicationCode'] || appCode );\n                    // localStorage.setItem('favoriteApp', ( response['defaultApplication']['applicationCode'] || appCode));\n                    this.callInProg = false;\n                });\n        }\n    }\n\n    openApp(clientID) {\n        this.authService.getRefreshToken(clientID).subscribe(tokenData => {\n            this.currentApp(clientID, tokenData);\n            this.utilService.closeDialog.next('close');\n        });\n    }\n\n    currentApp(clientID, tokenData) {\n        let accessToken = '';\n        const url = protocol + webServerDNS;\n        if (clientID && tokenData && tokenData.access_token) {\n            accessToken = '#/access_token=' + tokenData.access_token + '&token_type=' + tokenData.token_type + '&expires_in='\n                + tokenData.expires_in + '&scope=' + tokenData.scope;\n        }\n        const authValues = JSON.parse(localStorage.getItem('authValues'));\n        let target: string;\n        if (authValues) {\n            if (authValues.clientId === 'lgn') {\n                sessionStorage.clear();\n                localStorage.clear();\n                target = authValues.clientId = '_self';\n            } else {\n                target = authValues.clientId = '_blank';\n            }\n        }\n\n        switch (clientID) {\n            case 'alrt':\n                window.open(`${url}:${webAlertsTLSPort}/${accessToken}`, target);\n                break;\n            case 'conf':\n                window.open(`${url}:${webConfigurationTLSPort}/${accessToken}`, target);\n                break;\n            case 'cmr':\n                window.open(`${url}:${webCasinoManagerTLSPort}/${accessToken}`, target);\n                break;\n            case 'trs':\n                window.open(`${url}:${treasuryPort}/${accessToken}`, target);\n                break;\n            case 'plr':\n                window.open(`${url}:${webPlayerDashboardTLSPort}/${accessToken}`, target);\n                break;\n            case 'rpt':\n                window.open(`${url}/jasperserver-pro/login.html`, target);\n                break;\n        }\n\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {UtilityService} from '../services/utility.service';\nimport {TopologyService} from '../services/topology.service'\n// import {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  //breadCrumbs = [{value:{test1: 'test1'}},{value:{test: 'test'}}];\n  @Input() breadCrumbArray;\n  @Output() clickOnBreadCrumb = new EventEmitter();\n  homeUrl;\n  constructor(\n      private translate: TranslateService,\n      private utilityService: UtilityService,\n      private topologyService: TopologyService\n  ) {\n    this.translate.setDefaultLang('en_US');\n  }\n\n  ngOnInit() {\n    this.homeUrl = {\"labelName\":\"\",\"labelShortName\":\"\",\"params\":\"\",\"url\":\"/overview\"};\n\n    this.topologyService.areasLabelClicked.subscribe( (obj) =>{\n      this.clickEvnt(this.homeUrl,-1)\n    });\n  }\n  clickEvnt(itemObj, index) {\n    if (this.breadCrumbArray.length - 1 > index) {\n        this.utilityService.updateBreadCrumClick(itemObj);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\n\n@Injectable()\nexport class AlertService {\n    constructor(private _http: HttpClient) {\n    }\n\n    getAlertsData(url, options: {}): Observable<HttpResponse<Object>> {\n        return this._http.get<HttpResponse<Object>>(url, options);\n    }\n\n    getEventData(): void {\n\n    }\n\n    getAlertCounts(topologyId): Observable<[]> {\n        const url = `${urls.alert.alertCountsPath}?topologyId=${topologyId}`;\n        return this._http.get<[]>(url);\n    }\n    getAlertCountsByCategory(alertStatus, topologyId, category): Observable<[]> {\n        const url = `${urls.alert.alertCountsByCategoryPath}?alertStatus=${alertStatus}&topologyIds=${topologyId}&category=${category}`;\n        return this._http.get<[]>(url);\n    }\n\n    getAlertCountsByCategoryVG(alertStatus, topologyId, category): Observable<[]> {\n        const url = `${urls.alert.alertCountsByCategoryPath}?alertStatus=${alertStatus}&topologyGroupId=${topologyId}&category=${category}`;\n        return this._http.get<[]>(url);\n    }\n\n    changeStatus(statusUrl, statusObj): Observable<HttpResponse<Object>> {\n        return this._http.post<HttpResponse<Object>>(statusUrl, statusObj);\n    }\n\n    changeSeverity(): void {\n\n    }\n\n    addNote(noteUrl, noteObj): Observable<HttpResponse<Object>> {\n        return this._http.post<HttpResponse<Object>>(noteUrl, noteObj);\n    }\n\n    saveCustomerKnowledgeBase(baseUrl, baseObj): Observable<HttpResponse<Object>> {\n        return this._http.post<HttpResponse<Object>>(baseUrl, baseObj);\n    }\n\n    saveTableCustomerKnowledgeBase(baseUrl, baseObj): Observable<HttpResponse<Object>> {\n        return this._http.put<HttpResponse<Object>>(baseUrl, baseObj);\n    }\n\n    getAlertConfiguration(options = {}) {\n        return this._http.get(urls.alert.alertConfigurationPath, options);\n    }\n\n    updateAlertConfiguration(data = {}, params = {}) {\n        return this._http.post(urls.alert.alertConfigurationPath, data, params);\n    }\n\n    getTableAlertsCount(options: {}) {\n        return this._http.get(urls.alert.tableAlerts, options);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SortingService {\n    sortObj: object;\n\n    constructor() {\n    }\n\n    getSortObject(sort): object {\n        this.sortObj = {sortOrder: sort.direction.toUpperCase(), sortField: sort.active};\n        return this.sortObj;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpBackend, HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {urls} from '../constants/urls';\nimport {\n    ChipsInventoryInterface,\n    LocalGamingDayInterface,\n    LocalGamingDaysInHeirarchyInterface,\n    RollTimeInterface,\n    RollTimePayloadInterface,\n    ChipTrayOpenerCloser,\n    OpenerCloserReportData,\n    FcTxnsInterface\n} from '../interface/cage.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CageService {\n    constructor(private http: HttpClient) {\n\n    }\n\n    getInventoryData(id, options: {}): Observable<ChipsInventoryInterface[]> {\n        return this.http.get<ChipsInventoryInterface[]>\n        (urls.cage.chipsInventory + id, options);\n    }\n\n    getCurrentGamingDay(topologyId): Observable<HttpResponse<Object>> {\n        const url = `${urls.cage.localGamingDay}?topologyId=${topologyId}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n\n    getLocalGamingDay(id): Observable<LocalGamingDayInterface> {\n        return this.http.get<LocalGamingDayInterface>(urls.cage.localGamingDay,\n            {\n                params: {\n                    topologyId: id\n                }\n            });\n    }\n\n    getRollTimeData(options: {}): Observable<RollTimeInterface[]> {\n        const url = urls.cage.nextRollDtm;\n        return this.http.get<RollTimeInterface[]>(url, options);\n    }\n\n    getRollDTM(topologyId): Observable<any> {\n        const url = `${urls.cage.nextRollDtm}?topologyId=${topologyId}`;\n        return this.http.get<any>(url);\n    }\n\n    localGamingDaysInHierarchy(topologyId): Observable<LocalGamingDaysInHeirarchyInterface> {\n        const url = `${urls.cage.gamingDays}?topologyId=${topologyId}`;\n        return this.http.get<LocalGamingDaysInHeirarchyInterface>(url);\n    }\n\n    postRollTimeData(payLoad: {}, userId = '', employeeId = ''): Observable<HttpResponse<RollTimePayloadInterface>> {\n        let url = urls.cage.nextRollDtm;\n        if (userId && employeeId) {\n            url += `?userId=${userId}&employeeId=${employeeId}`;\n        }\n        return this.http.post<HttpResponse<RollTimePayloadInterface>>(url, payLoad);\n    }\n\n    getChipTrayOpenerCloser(options: {}): Observable<ChipTrayOpenerCloser> {\n        const url = urls.cage.chipTrayOpenerCloser;\n        return this.http.get<ChipTrayOpenerCloser>(url, options);\n    }\n\n    getOpenerCloserReportData(options: {}): Observable<OpenerCloserReportData> {\n        const url = urls.cage.openerCloserReport;\n        return this.http.get<OpenerCloserReportData>(url, options);\n    }\n\n    getReportUrl(data) {\n        const url = `${urls.cage.printReport}?print=true&format=PDF&reportName=OpenerCloserForm&reportData=${data}`;\n        return url;\n    }\n\n    getReportData(data): Observable<HttpResponse<any>> {\n        const url = urls.cage.printReport;\n        const payLoad = {print: true, format: 'PDF', reportName: 'OpenerCloserForm', reportData: JSON.stringify(data)};\n        const httpOptions = {\n            'responseType': 'arraybuffer' as 'json'\n        }\n        return this.http.post<HttpResponse<any>>(url, payLoad, httpOptions);\n    }\n\n    getfcTransactions(options: {}): Observable<FcTxnsInterface> {\n        console.log('common options', options)\n        const url = urls.cage.getfcTransactions;\n        return this.http.get<FcTxnsInterface>(url, options);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Idle} from 'idlejs/dist';\nimport {protocol, webDashboardPort, webServerDNS} from '../constants/url.common.constants';\nimport {AuthService} from './Authentication/auth.service';\nimport {DecodedTokenService} from './Authentication/decoded-token.service';\nimport {ConfigurationService} from './configuration.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogoutUtilityService {\n    logOutClicked: boolean;\n\n    constructor(\n        private authService: AuthService,\n        private decodedTokenService: DecodedTokenService,\n        private configurationService: ConfigurationService\n    ) {\n    }\n\n    logOutInactiveUser(): void {\n        let logoOutTime: number;\n        if (!this.logOutClicked) {\n            this.configurationService.getSystemData().subscribe(data => {\n                logoOutTime = parseInt(data[0].propertyValues.filter(val => val.propertyId === 1001)[0].propertyValue, 10);\n                new Idle().whenNotInteractive().within(logoOutTime, 1000).do(() => {\n                    this.logout();\n                }).start();\n            });\n        }\n\n    }\n\n    logout(): void {\n        this.logOutClicked = true;\n        const authValues: any = JSON.parse(localStorage.getItem('authValues'));\n        if (authValues) {\n            this.authService.logout()\n                .subscribe(() => {\n                    this.removeAndRedirect();\n                }, () => {\n                    this.removeAndRedirect();\n                });\n        } else {\n            this.removeAndRedirect();\n        }\n    }\n\n    removeAndRedirect(): void {\n        const loginUrl = protocol + webServerDNS + ':' + webDashboardPort;\n        const ppMasterUrl = loginUrl + '/ppmaster';\n        const isPP = localStorage.getItem('pp');\n        const authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (authValues) {\n            localStorage.removeItem(authValues.jwtTokenKey);\n        }\n        sessionStorage.removeItem('language');\n        localStorage.removeItem('authValues');\n        //We need to check both GR-2777 and GR-2903\n        localStorage.removeItem('lastRefresh');\n\n        if (isPP === 'yes') {\n            this.redirectAfterLogout(ppMasterUrl);\n        } else {\n            this.redirectAfterLogout(loginUrl);\n        }\n    }\n    redirectAfterLogout (url) {\n        location.href = url;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {AuthService} from './auth.service';\nimport {AuthInterface} from './auth.interface';\nimport {\n    protocol,\n    webCamTLSPort,\n    webCashierTLSPort,\n    webServerDNS,\n    webDashboardPort,\n    webTableDashboardTLSPort\n} from '../../constants/url.common.constants';\nimport {CageService} from '../cage.service';\nimport {DecodedTokenService} from './decoded-token.service';\nimport {LogoutUtilityService} from '../logout-utility.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenHandlingService {\n    authValues: AuthInterface;\n\n    constructor(private jwtHelper: JwtHelperService,\n                private authService: AuthService,\n                private cageService: CageService,\n                private decodedTokenService: DecodedTokenService,\n                private logoutUtilityService: LogoutUtilityService) {\n        this.authValues = JSON.parse(localStorage.getItem('authValues'));\n    }\n\n    redirectURI(jwtToken): void {\n        let CLIENT_ID = 'lgn';\n        if (this.authValues && this.authValues.clientId) {\n            CLIENT_ID = this.authValues.clientId;\n        }\n        let decodedToken;\n        if (jwtToken) {\n            decodedToken = this.jwtHelper.decodeToken(jwtToken);\n        }\n        if (decodedToken && decodedToken.defaultApplication !== null\n            && decodedToken.defaultApplication !== undefined && decodedToken.defaultApplication !== '') {\n            CLIENT_ID = 'lgn';\n        }\n\n        location.href = `${protocol}${webServerDNS}` + ':' + webDashboardPort + '/login' +\n            '?client_id=' + CLIENT_ID + '&redirect_uri=' + location.href;\n    }\n\n    isTokenValid(jwtToken): boolean {\n        if (jwtToken) {\n            return this.hasPermission(jwtToken) && !this.jwtHelper.isTokenExpired(jwtToken);\n        } else {\n            return false;\n        }\n\n    }\n\n    hasPermission(jwtToken): boolean {\n        const decodedToken = this.jwtHelper.decodeToken(jwtToken);\n        if (decodedToken) {\n            if (decodedToken.authorities && ((this.authValues.applicationCode === decodedToken.authorities[0].applicationCode &&\n                    decodedToken.authorities[0].permissions.includes(this.authValues.accessCode)) || decodedToken.superuser)) {\n                return true;\n            } else {\n                return !!(this.authValues.clientId === 'lgn' && decodedToken.applications);\n            }\n        } else {\n            return false;\n        }\n    }\n\n    terminalRedirection(app: string): void {\n        const baseUrl = protocol + webServerDNS;\n        let appPort = '';\n        let clientId = '';\n        switch (app) {\n            case 'CAM':\n                appPort = webCamTLSPort;\n                clientId = 'cam';\n                break;\n            case 'CASHIER':\n                appPort = webCashierTLSPort;\n                clientId = 'cash';\n                break;\n            case 'TABLE_DASH':\n                appPort = webTableDashboardTLSPort;\n                clientId = 'tab';\n                break;\n        }\n        if (app !== 'TABLE_DASH') {\n            this.openApp(clientId, baseUrl, appPort);\n        }\n\n    }\n\n    openApp(clientID, baseUrl, appPort) {\n        this.authService.getRefreshToken(clientID).subscribe(tokenData => {\n            const accessToken = 'access_token=' + tokenData.access_token + '&token_type=' + tokenData.token_type + '&expires_in=' +\n                tokenData.expires_in + '&scope=' + tokenData.scope;\n            if (clientID === 'tab') {\n                const tableToken = this.jwtHelper.decodeToken(tokenData.access_token);\n                const tableId = tableToken.authorities[0].topologyIds[0];\n                this.cageService.getLocalGamingDay(tableId).subscribe(res => {\n                    if (this.authValues.clientId === 'lgn') {\n                        sessionStorage.clear();\n                        localStorage.clear();\n                    }\n                    window.open(`${baseUrl}:${appPort}/#/tabledashboard/${tableId}/${res.successObj}?${accessToken}`, '_self');\n                });\n            } else {\n                if (this.authValues.clientId === 'lgn') {\n                    sessionStorage.clear();\n                    localStorage.clear();\n                }\n                window.open(`${baseUrl}:${appPort}/#/${accessToken}`, '_self');\n            }\n        });\n    }\n\n    HandleTokenExpiration() {\n        setInterval(() => {\n            const token = this.decodedTokenService.getJwtToken();\n            const tokenExpirationTime = this.jwtHelper.getTokenExpirationDate(token).getTime();\n            const currentTime = new Date().getTime();\n            if (currentTime > tokenExpirationTime - 200000) {\n                this.authValues = JSON.parse(localStorage.getItem('authValues'));\n                this.authService.getRefreshToken(this.authValues.clientId).subscribe(tokenData => {\n                        const accessToken = tokenData.access_token;\n                        this.decodedTokenService.setDecodedJwtToken(JSON.parse(localStorage.getItem('authValues'))\n                            .jwtTokenKey, accessToken);\n                    },\n                    (err) => {\n                        this.logoutUtilityService.logout();\n                        throw err;\n                    }\n                );\n            }\n\n        }, 60000);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {UserDetailInterface} from '../interface/user-detail.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopNavBarService {\n  private userDetails: UserDetailInterface;\n  public userDetailsSubject = new BehaviorSubject<UserDetailInterface>(this.userDetails);\n  public userDetailsObservable =  this.userDetailsSubject.asObservable();\n  constructor() { }\n  updateUserDetails(userDetails: UserDetailInterface) {\n    this.userDetailsSubject.next(userDetails);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {tableUIProtocol} from '../constants/url.common.constants';\nimport {tableUIPort} from '../constants/url.common.constants';\n\nconst URL = tableUIProtocol + 'tableui:' + tableUIPort;\nconst API_SUB_PATH = '/api/table/v1/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableUIService {\n\n  constructor(private http: HttpClient) { }\n  isLoggedIn(clientId) {\n    const url = `${URL}${API_SUB_PATH}login?clientId=${clientId}`;\n    return this.http.get<any>(url);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {TokenHandlingService} from './token-handling.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {DecodedTokenService} from './decoded-token.service';\nimport {AuthInterface} from './auth.interface';\nimport {LogoutUtilityService} from '../logout-utility.service';\nimport {TopNavBarService} from '../top-nav-bar.service';\nimport {TableUIService} from '../table-ui.service';\nimport {tableUIProtocol} from '../../constants/url.common.constants';\nimport {tableUIPort} from '../../constants/url.common.constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    jwtToken: string;\n    isTokenValid;\n    authValues: AuthInterface;\n    firstLoad: Boolean;\n\n    constructor(private tokenHandlingService: TokenHandlingService,\n                private jwtHelper: JwtHelperService,\n                private decodedTokenService: DecodedTokenService,\n                private logoutUtilityService: LogoutUtilityService,\n                private topNavBarService: TopNavBarService,\n                private router: Router,\n                private tableUIService: TableUIService) {\n        this.jwtToken = location.href.split('access_token=')[1];\n        this.authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (this.jwtToken) {\n            this.jwtToken = this.jwtToken.split('&')[0];\n            this.decodedTokenService.setDecodedJwtToken(this.authValues.jwtTokenKey, this.jwtToken);\n            const decodedToken = this.decodedTokenService.getDecodedJwtToken();\n            const uerDetails = {\n                'firstName': decodedToken.firstName,\n                'lastName': decodedToken.lastName,\n                'userId': decodedToken.userId\n            };\n            topNavBarService.updateUserDetails(uerDetails);\n        }\n        if (this.jwtToken || this.decodedTokenService.getDecodedJwtToken()) {\n            this.firstLoad = true;\n            if (this.decodedTokenService.getDecodedJwtToken().firstName === 'PP') {\n                localStorage.setItem('pp', 'yes');\n                // console.log(\"auth gaurd pp\");\n            } else {\n                localStorage.setItem('pp', 'no');\n                // console.log(\"auth gaurd non pp\");\n            }\n            logoutUtilityService.logOutInactiveUser();\n        }\n\n    }\n\n    canActivate(next: ActivatedRouteSnapshot,\n                state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        this.isTokenValid = this.tokenHandlingService.isTokenValid(this.jwtToken);\n        const decodedToken = this.decodedTokenService.getDecodedJwtToken();\n        if (decodedToken && (!decodedToken.authorities || decodedToken.authorities && decodedToken.applications.length === 1 &&\n                ['CAM', 'CASHIER'].indexOf(decodedToken.applications[0]) >= 0) && ((decodedToken.applications.length === 1 &&\n                ['CAM', 'CASHIER', 'TABLE_DASH'].indexOf(decodedToken.applications[0]) >= 0) ||\n                (decodedToken.applications.length === 3 && ['TABLE_DASH', 'ALERTS', 'PLAYER_DASH']\n                    .every((val, i) => val === decodedToken.applications[i])))) {\n            if (decodedToken.applications[0] === 'TABLE_DASH' && !state.url.includes('unauthorized-access')) {\n                // console.log('tableUIProtocol', tableUIProtocol);\n                if (tableUIProtocol !== undefined && tableUIProtocol !== null) {\n                    window.open(`${tableUIProtocol}tableui:${tableUIPort}/single-table-view`, '_self');\n                } else {\n                    if (location.href.includes('ppmaster') || location.href.includes('login')) {\n                        const token = localStorage.getItem(this.authValues.jwtTokenKey);\n                        if (token !== null) {\n                            this.tokenHandlingService.HandleTokenExpiration();\n                        }\n                        return true;\n                    }\n                }\n            } else if (decodedToken.applications[0] !== 'TABLE_DASH' && !state.url.includes('unauthorized-access')) {\n                this.tokenHandlingService.terminalRedirection(decodedToken.applications[0]);\n                return false;\n            }\n        } else if (state.url.includes('unauthorized-access')) {\n            return true;\n        } else if ((this.jwtToken && this.isTokenValid) ||\n            (this.decodedTokenService.getJwtToken() && this.tokenHandlingService.isTokenValid(this.decodedTokenService.getJwtToken())) ||\n            location.href.includes('ppmaster') || location.href.includes('login')) {\n            if (this.firstLoad) {\n            }\n            this.firstLoad = false;\n            let token;\n            if (this.authValues && this.authValues.jwtTokenKey) {\n                token = localStorage.getItem(this.authValues.jwtTokenKey);\n            }\n            if (token !== null && token !== undefined) {\n                this.tokenHandlingService.HandleTokenExpiration();\n            }\n            return true;\n        } else {\n            let token;\n            if (this.authValues && this.authValues.jwtTokenKey) {\n                token = localStorage.getItem(this.authValues.jwtTokenKey);\n            }\n            this.tokenHandlingService.redirectURI(token);\n            sessionStorage.clear();\n            localStorage.clear();\n            return false;\n        }\n\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {DecodedTokenService} from './decoded-token.service';\nimport {AuthService} from './auth.service';\nimport {LogoutUtilityService} from '../logout-utility.service';\nimport {catchError} from 'rxjs/operators';\nimport {NGXLogger} from 'ngx-logger';\n\n\n/**\n * This service performs the following tasks:\n * 1> Add jwt Token to every call\n * 2> refreshes token if it's about to expire\n */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n\n    jwtTokenFromUrl: string;\n\n    constructor(private jwtHelper: JwtHelperService, private decodedTokenService: DecodedTokenService,\n                private authService: AuthService,\n                private logoutUtilityService: LogoutUtilityService,\n                private logger: NGXLogger) {\n        if (location.href.includes('access_token')) {\n            this.jwtTokenFromUrl = location.href.split('access_token=')[1];\n        }\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let jwtToken: string;\n        if (location.href.includes('access_token')) {\n            this.jwtTokenFromUrl = location.href.split('access_token=')[1];\n        } else {\n            this.jwtTokenFromUrl = '';\n        }\n        if (this.jwtTokenFromUrl && this.jwtTokenFromUrl !== '') {\n            jwtToken = this.jwtTokenFromUrl.split('&')[0];\n            if (localStorage.getItem('authValues')) {\n                this.decodedTokenService.setDecodedJwtToken(JSON.parse(localStorage.getItem('authValues')).jwtTokenKey, jwtToken);\n            }\n        } else if (this.decodedTokenService.getJwtToken()) {\n            jwtToken = this.decodedTokenService.getJwtToken();\n        }\n        return this.interceptHeader(req, next, jwtToken).pipe(catchError(err => {\n            if (!req.url.includes('table/v1/log?appname')) {\n                this.logger.error(err, req.url);\n            }\n            return throwError(err);\n        }));\n    }\n\n    interceptHeader(req, next, jwtToken) {\n        req = req.clone({\n            setHeaders: {\n                Authorization: `Bearer ${jwtToken}`\n            }\n        });\n        return next.handle(req);\n    }\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output, Input} from '@angular/core';\n\n@Directive({\n  selector: '[appWdtsSpecialChar]'\n})\nexport class WdtsSpecialCharDirective {\n// SPECIAL CHAR allowed alphanumeric characters with hyphen, underscore, space, ampersand and dot (- , _ , . , &)\n    @Output() valChangeEvent = new EventEmitter();\n    @Input() onlyAlphaNumaric = false;\n    @Input() isLimitTabSpecialChar = false;\n    constructor(private _el: ElementRef) {\n    }\n    @HostListener('input', ['$event'])\n    onInputChange(event) {\n        let SPLCHARSREJX;\n        if (this.onlyAlphaNumaric) {\n            SPLCHARSREJX = new RegExp('[^A-Za-z0-9]', 'gi');\n        } else if (this.isLimitTabSpecialChar) {\n            // Stroy GR-3445: removing '&' character.\n            SPLCHARSREJX = new RegExp('[^A-Za-z0-9-_.,$ ]', 'gi');\n        } else {\n            // Stroy GR-3092: removing '&' character.\n            SPLCHARSREJX = new RegExp('[^A-Za-z0-9-_. ]', 'gi');\n        }\n        this._el.nativeElement.value = this._el.nativeElement.value.replace(SPLCHARSREJX, '');\n        this.valChangeEvent.emit(this._el.nativeElement.value);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'wdtsSpecialChar'\n})\nexport class WdtsSpecialCharPipe implements PipeTransform {\n// SPECIAL CHAR allowed alphanumeric characters with hyphen, underscore, space, ampersand and dot (- , _ , . , &)\n  transform(value: string, args?: any): any {\n      const SPLCHARSREJX = new RegExp('[^A-Za-z0-9-_. ]', 'gi');\n      return value.replace(SPLCHARSREJX, '');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n  Pipe that converts value to either whole number or to 2 decimal places\n*/\n\n\n@Pipe({\n  name: 'amountFormat'\n})\nexport class AmountFormatPipe implements PipeTransform {\n  transform(value): string {\n    if (!value){\n      return value;\n    }\n    value = Number(value);\n    if (Math.round(value) === value) {\n      value = Math.round(value);\n    } else if (value) {\n      value = value.toFixed(2).replace(/\\.0+$/,'');\n    }\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'roundUp'\n})\nexport class RoundUpPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (!value) {\n            return value;\n        }\n        value = Math.ceil(value);\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {HttpClient} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {WdtsSpecialCharDirective} from '../directives/wdts-special-char.directive';\nimport {WdtsSpecialCharPipe} from '../pipes/wdts-special-char.pipe';\nimport {AmountFormatPipe} from '../pipes/amount-format.pipe';\nimport {RoundUpPipe} from \"../pipes/round-up.pipe\";\n\n@NgModule({\n    imports: [\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: TranslationFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    providers: [WdtsSpecialCharPipe, AmountFormatPipe, RoundUpPipe],\n    declarations: [WdtsSpecialCharDirective, WdtsSpecialCharPipe, AmountFormatPipe, RoundUpPipe],\n    exports: [TranslateModule, WdtsSpecialCharDirective, WdtsSpecialCharPipe, AmountFormatPipe, RoundUpPipe]\n})\nexport class CommonTranslationModule {\n}\n\nexport function TranslationFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {DecodedTokenService} from '../services/Authentication/decoded-token.service';\n\n@Injectable()\nexport class CommonTranslationService {\n    languageChanged = new EventEmitter();\n\n    constructor(private translate: TranslateService, private tokenService: DecodedTokenService) {\n        let language;\n        const tokenData = this.tokenService.getDecodedJwtToken();\n        let configIndex;\n        if (tokenData && tokenData.authorities) {\n            if (tokenData.authorities != null) {\n                configIndex = tokenData.authorities.findIndex(app => app.applicationCode === 'CONFIGURATION');\n            }else{\n                configIndex = -1;\n            }\n            if (configIndex > -1) {\n                language = 'en_US';\n                sessionStorage.setItem('language', language);\n            } else {\n                language = sessionStorage.getItem('language');\n            }\n        }\n        if (language !== null) {\n            this.translate.setDefaultLang(language);\n        } else {\n            setTimeout( () => {\n                if (tokenData && configIndex > -1) {\n                    sessionStorage.setItem('language', 'en_US');\n                    this.translate.setDefaultLang('en_US');\n                } else {\n                    const newLang = this.tokenService && this.tokenService.getDecodedJwtToken() ?\n                        this.tokenService.getDecodedJwtToken().language : '';\n                    const lang = newLang === 'CHINESE' ? 'zh_Hant' : 'en_US';\n                    sessionStorage.setItem('language', lang);\n                    this.translate.setDefaultLang(lang);\n               }\n            }, 100);\n        }\n\n        this.handleSubscription();\n    }\n\n    handleSubscription() {\n            this.languageChanged\n            .subscribe((language) => {\n                sessionStorage.setItem('language', language);\n                this.translate.setDefaultLang(language);\n            });\n    }\n}\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {NavigationEnd, Router, ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {RxStompService} from '@stomp/ng2-stompjs';\nimport {CommonTranslationService} from '../../common-translation/common-translation.service';\nimport {UtilityService} from '../../services/utility.service';\nimport {AuthService} from '../../services/Authentication/auth.service';\nimport {DecodedTokenService} from '../../services/Authentication/decoded-token.service';\nimport {LogoutUtilityService} from '../../services/logout-utility.service';\nimport {TopNavBarService} from '../../services/top-nav-bar.service';\nimport {TopologyService} from '../../services/topology.service';\nimport {TokenHandlingService} from '../../services/Authentication/token-handling.service';\n\n@Component({\n    selector: 'app-top-nav-bar',\n    templateUrl: './top-nav-bar.component.html',\n    styleUrls: ['./top-nav-bar.component.scss']\n})\nexport class TopNavBarComponent implements OnInit, OnChanges {\n    lastRefresh: string;\n    userFirstName: string;\n    userLastName: string;\n    topologyData;\n    companyName;\n    //gamingDaysArr: Array<string>;\n    calendarDate;\n    //selectedCalendarDate;\n    hideLanguage: Boolean;\n    isConfigApp: Boolean;\n    showMenu: Boolean;\n    hideAppSwitcher: boolean;\n    loginPagesFlag: boolean;\n    @Input() appName: string;\n    @Input() showGamingDay: boolean;\n    @Input() gamingDay: string;\n    @Input() nextRollTIme;\n    @Input() gamingDaysArr;\n    @Input() breadcrumbList;\n    @Input() selectedGamingDay;\n\n    constructor(private _router: Router,\n                private _route: ActivatedRoute,\n                public translate: TranslateService,\n                private rxStompService: RxStompService,\n                private commonTranslationService: CommonTranslationService,\n                private utilityService: UtilityService,\n                private authService: AuthService,\n                private decodedTokenService: DecodedTokenService,\n                private logoutService: LogoutUtilityService,\n                private topNavBarService: TopNavBarService,\n                private topologyService: TopologyService,\n                private tokenHandlingService: TokenHandlingService) {\n        this.getCurrentCalendarDate();\n    }\n\n    ngOnInit() {\n        this._router.events.subscribe((e) => {\n            if (e instanceof NavigationEnd) {\n                if (this._router.url.includes('unauthorized-access')) {\n                    this.hideAppSwitcher = true;\n                }\n                if(this._router.url.includes('/ppmaster') || this._router.url.includes('/login')){\n                    this.loginPagesFlag = true;\n                }else{\n                    this.loginPagesFlag = false;\n                }\n            }\n        });\n\n        this.getLastRefresh();\n        this.getUserName();\n        this.rxStompService.watch('/logout/logout-request')\n            .subscribe((message) => {\n                const decodedToken = this.decodedTokenService.getDecodedJwtToken();\n                const messageData = message.body.substring(1);\n                if (decodedToken && messageData.split(';')[0] === decodedToken.name) {\n                    this.logoutService.removeAndRedirect();\n                } else if (!decodedToken) {\n                    this.logoutService.removeAndRedirect();\n                }\n            });\n\n        this.hideLanguageMenu();\n        this.checkIfConfigApp();\n        this.getTopologyData();\n    }\n\n    ngOnChanges(changes): void {\n        if (changes.selectedGamingDay && changes.selectedGamingDay.currentValue !== undefined) {\n            this.calendarDate = changes.selectedGamingDay.currentValue;\n        }\n    }\n\n    getCurrentCalendarDate() {\n        if (!this.calendarDate) {\n            this.calendarDate = this.gamingDay;\n        }\n    }\n\n    setCalendarGamingDay(index, gday) {\n        this.calendarDate = gday;\n        this.utilityService.updateGlobalCalendarGamingDay(gday);\n        // this.selectedCalendarDate = index;\n        // this.refresh();\n    }\n\n    getLastRefresh(): void {\n        this.lastRefresh = localStorage.getItem('lastRefresh');\n    }\n\n    hideLanguageMenu() {\n        const authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (authValues.clientId === 'lgn') {\n            this.hideLanguage = true;\n        }\n    }\n\n    checkIfConfigApp() {\n        const authValues = JSON.parse(localStorage.getItem('authValues'));\n        if (authValues.clientId === 'conf') {\n            this.isConfigApp = true;\n        }\n    }\n\n    getUserName(): void {\n        const decodedToken = this.decodedTokenService.getDecodedJwtToken();\n        if (!decodedToken) {\n            this.topNavBarService.userDetailsObservable.subscribe(userDetails => {\n                if (userDetails) {\n                    this.showMenu = true;\n                    this.userFirstName = userDetails.firstName;\n                    this.userLastName = userDetails.lastName;\n                } else {\n                    this.showMenu = false;\n                }\n            });\n        } else {\n            if (this.tokenHandlingService.isTokenValid(this.decodedTokenService.getJwtToken())) {\n                this.showMenu = true;\n                this.userFirstName = decodedToken.firstName;\n                this.userLastName = decodedToken.lastName;\n            } else {\n                this.showMenu = false;\n            }\n\n        }\n    }\n\n    logout(): void {\n        sessionStorage.clear();\n        /**\n         * localStorage.clear();//GR-2903 comes due to GR-2777: it stop redirection because\n         removeAndRedirect function does not have value of localstorage, so instead\n         we can clear 'lastRefresh' in the removeAndRedirect in LogoutUtilityService.\n         */\n        this.logoutService.logout();\n    }\n\n    toggleTranslation(): void {\n        const currentLanguage = this.translate.getDefaultLang() === 'en_US' ? 'zh_Hant' : 'en_US';\n        sessionStorage.setItem('language', currentLanguage);\n        this.commonTranslationService.languageChanged.next(currentLanguage);\n        this.translate.setDefaultLang(currentLanguage);\n    }\n\n    refresh(): void {\n        this._router.routeReuseStrategy.shouldReuseRoute = function () {\n            return false;\n        };\n        const currentUrl = this._router.url + '?';\n        this._router.navigateByUrl(currentUrl)\n            .then(() => {\n                const currentTime = new Date();\n                localStorage.setItem('lastRefresh', currentTime.toString());\n                this.getLastRefresh();\n                this._router.navigated = false;\n                if(this._router.url.includes('access_token')){\n                    if(this._router.url.includes('/configuration/areas')){\n                        this._router.navigate(['/configuration/areas']);\n                    }\n                    if(this._router.url.includes('/overview')){\n                        this._router.navigate(['/overview']);\n                    }\n                }else {\n                    this._router.navigate([this._router.url]);\n                }\n            });\n    }\n\n    getTopologyData() {\n        if (!this.topologyService.topologyNodes) {\n            this.topologyService.initialized.subscribe((value) => {\n                if (value === 'nodesInitialized') {\n                    this.initTopologyData();\n                }\n            });\n        } else {\n            this.initTopologyData();\n        }\n    }\n\n    initTopologyData() {\n        this.topologyData = this.topologyService.topologyNodes;\n        this.companyName = this.topologyData[0][0].shortName;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {TopologyStatisticsTabularView, TopologyStatistics, TopologyStatisticsGridView} from '../interface/topology-types.interface';\nimport {urls} from '../constants/urls';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {OpenerCloserInterface} from '../interface/casino-manager.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CasinomanagerService {\n\n  constructor( private http: HttpClient) { }\n    getTopologyStatisticsTabularView(options: {}): Observable<TopologyStatisticsTabularView> {\n        const url = urls.casinoMgr.topologyStatisticsTabularView;\n        return this.http.get<TopologyStatisticsTabularView>(url, options);\n    }\n    getTopologyStatsTabularView(options: {}): Observable<TopologyStatisticsTabularView> {\n        const url = urls.casinoMgr.topologyStatsTabularView;\n        return this.http.get<TopologyStatisticsTabularView>(url, options);\n    }\n    getTopologyStatisticsGridView(options: {}): Observable<TopologyStatisticsGridView> {\n      const url = urls.casinoMgr.topologyStatisticsGridView;\n      return this.http.get<TopologyStatisticsGridView>(url, options);\n    }\n    getTopologyStatsByTableType(options: {}, url): Observable<TopologyStatisticsTabularView> {\n        const finalUrl = urls.casinoMgr.topologyStatsByTableType + url;\n        return this.http.get<TopologyStatisticsTabularView>(finalUrl, options);\n    }\n    getTopologyStatistics(gamingDay, topologyIds, viewId, options: {}): Observable<TopologyStatistics> {\n      const url = `${urls.casinoMgr.topologyStatistics}?gamingDay=${gamingDay}&topologyIds=${topologyIds}&viewId=${viewId}`;\n      return this.http.get<TopologyStatistics>(url, options);\n    }\n    getTopologyStatisticsForVirtualGroup(gamingDay, topologyGroupId, viewId, options: {}): Observable<TopologyStatistics> {\n        const url = `${urls.casinoMgr.topologyStatisticsForVirtualGroup}?gamingDay=${gamingDay}&topologyGroupId=${topologyGroupId}&viewId=${viewId}`;\n        return this.http.get<TopologyStatistics>(url, options);\n    }\n    getTopLosingCasino(gamingDay, topologyId): Observable<HttpResponse<Object>> { \n      const url = `${urls.casinoMgr.topLosingCasino}?gamingDay=${gamingDay}&topologyId=${topologyId}`; \n      return this.http.get<HttpResponse<Object>>(url); \n    }\n     getTopWinningCasino(gamingDay, topologyId): Observable<HttpResponse<Object>> { \n      const url = `${urls.casinoMgr.topWinningCasino}?gamingDay=${gamingDay}&topologyId=${topologyId}`; \n      return this.http.get<HttpResponse<Object>>(url); \n    }\n    getTopLosingPlayersVirtualGroup(gamingDay, topologyId): Observable<HttpResponse<Object>> {\n        const url = `${urls.casinoMgr.topLosingPlayersVirtualGroup}?gamingDay=${gamingDay}&topologyGroupId=${topologyId}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    getTopWinningPlayersVirtualGroup(gamingDay, topologyId): Observable<HttpResponse<Object>> {\n        const url = `${urls.casinoMgr.topWinningPlayersVirtualGroup}?gamingDay=${gamingDay}&topologyGroupId=${topologyId}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    getPlayerStatistics(options: {}): Observable<TopologyStatisticsTabularView> {\n        const url = urls.casinoMgr.playerStatistics;\n        return this.http.get<TopologyStatisticsTabularView>(url, options);\n    }\n    getPaginatedOpenerCloser(options: {}): Observable<OpenerCloserInterface> {\n        const finalUrl = urls.cage.paginatedOpenerCloser;\n        return this.http.get<OpenerCloserInterface>(finalUrl, options);\n    }\n    getPaginatedSearchManualRatings(url, options: {}): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.paginatedSearchManualRatings + url;\n        return this.http.post<HttpResponse<Object>>(finalUrl, options);\n    }\n    getpaginatedSessions(payload , options: {}): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.paginatedSessions;\n        return this.http.post<HttpResponse<Object>>(finalUrl, payload, options);\n    }\n    getpaginatedGames(options: {}): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.paginatedGames;\n        return this.http.get<HttpResponse<Object>>(finalUrl, options);\n    }\n    getFilterForTable(options: {}): Observable<HttpResponse<Object>> {\n      const url = urls.casinoMgr.tableFilter;\n      return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getFilterForPlayer(options: {}): Observable<HttpResponse<Object>> {\n        const url = urls.casinoMgr.playerFilter;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getActivePlayer(options: {}): Observable<HttpResponse<Object>> {\n        const url = urls.casinoMgr.activePlayer;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getUserSearch(options: {}): Observable<HttpResponse<Object>> {\n        const url = urls.casinoMgr.userSearch;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    // getpaginatedSessions(payload , options: {}): Observable<HttpResponse<Object>> {\n    //     const finalUrl = 'http://172.31.2.92:8080/api/game/v1/paginatedSessions';\n    //     return this.http.post<HttpResponse<Object>>(finalUrl, payload, options);\n    // }\n    // getpaginatedGames(options: {}): Observable<HttpResponse<Object>> {\n    //     const finalUrl = 'http://172.31.2.92:8080/api/game/v1/paginatedGames';\n    //     //const finalUrl = urls.game.paginatedGames;\n    //     return this.http.get<HttpResponse<Object>>(finalUrl, options);\n    // }\n}\n","import {Component, EventEmitter, HostListener, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CasinomanagerService} from '../services/casinomanager.service';\nexport interface PlayerParam {\n  params: any;\n}\n@Component({\n  selector: 'app-player-search',\n  templateUrl: './player-search.component.html',\n  styleUrls: ['./player-search.component.scss']\n})\nexport class PlayerSearchComponent implements OnInit, OnChanges {\n  searchOption = [\n    {value: 'casinoPlayerId', viewValue: 'application.app.common.labels.PLAYERID'},\n    {value: 'firstName', viewValue: 'application.app.common.labels.FIRST_NAME'},\n    {value: 'lastName', viewValue: 'application.app.common.labels.LAST_NAME'}\n\n  ];\n  prevKeyCode;\n  reqObj: PlayerParam = { params: {} };\n  selectedOption = 'casinoPlayerId';\n  searchText;\n  @Output() searchObj = new EventEmitter<any>();\n  @Input() updateNameAfterSearch;\n  @Input() isDisabled = false;\n  @Input() activePlayerApi = false;\n  @Input() gamingDay;\n  isCMSUp = true;\n  isInvalidPlayerId = false;\n  isInvalidCardId = false;\n\n  constructor(private casinoManagerService: CasinomanagerService,\n              private snackBar: MatSnackBar,\n              private translate: TranslateService\n  ) {\n   // this.translate.setDefaultLang('en_US');\n  }\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.checkEvent();\n    } else {\n      this.prevKeyCode = event.keyCode;\n    }\n  }\n  ngOnInit() {\n  }\n  ngOnChanges() {\n    this.searchText = this.updateNameAfterSearch;\n  }\n  searchPlayer(searchText) {\n    this.reqObj.params = {};\n    switch (this.selectedOption) {\n      case 'casinoPlayerId': {\n        if (this.isValidPlayerId(searchText)) {\n          this.isInvalidPlayerId = false;\n          this.isInvalidCardId = false;\n          this.reqObj.params.casinoPlayerId = searchText;\n        } else {\n          this.isInvalidPlayerId = true;\n          this.isInvalidCardId = false;\n          const invalidMsg = this.translate.instant('application.app.CAM_CASHIER_LABELS.COMMON_LOGGERMESSAGES.INVALID_PLAYER_ID');\n          this.snackBar.open(invalidMsg, '', {\n            duration: 3000,\n            horizontalPosition: 'right',\n            panelClass: 'snack__warn'\n          });\n        }\n        break;\n      }\n      case 'lastName' : {\n        this.isInvalidCardId = false;\n        this.isInvalidPlayerId = false;\n        if (this.activePlayerApi) {\n          this.reqObj.params.playerLastName = searchText;\n        } else {\n          this.reqObj.params.lastName = searchText;\n        }\n\n        break;\n      }\n      case 'firstName' : {\n        this.isInvalidCardId = false;\n        this.isInvalidPlayerId = false;\n        if (this.activePlayerApi) {\n          this.reqObj.params.playerFirstName = searchText;\n        } else {\n          this.reqObj.params.firstName = searchText;\n        }\n        break;\n      }\n      case 'casinoCardData' : {\n        this.searchText = '';\n        if (this.isValidCardId(searchText)) {\n          this.isInvalidCardId = false;\n          this.isInvalidPlayerId = false;\n          this.reqObj.params.casinoCardData = searchText;\n        } else {\n          this.isInvalidCardId = true;\n          this.isInvalidPlayerId = false;\n        }\n        break;\n      }\n    }\n    if (this.selectedOption === 'firstName' || this.selectedOption === 'lastName') {\n      if (searchText.trim().length < 3) {\n        this.snackBar.open(this.translate.instant('application.app.common.labels.MIN_LENGTH_VALIDITY'), '', {\n          duration: 3000,\n          horizontalPosition: 'right',\n          panelClass: 'snack__warn'\n        });\n        return;\n      }\n    }\n    this.reqObj.params.fetch = false;\n    if (!this.isInvalidPlayerId && !this.isInvalidCardId) {\n      if (this.activePlayerApi) {\n        this.getActivePlayers();\n      } else {\n        this.getRequestedPlayers();\n      }\n    }\n  }\n  getActivePlayers() {\n    this.reqObj.params.gamingDay = this.gamingDay;\n    this.casinoManagerService.getActivePlayer(this.reqObj).subscribe(res => {\n      this.searchObj.emit(res);\n    }, err => {\n      console.log(err);\n    });\n  }\n  getRequestedPlayers() {\n    this.casinoManagerService.getActivePlayer(this.reqObj).subscribe( (res) => {\n      if ((this.selectedOption === 'casinoPlayerId' || this.selectedOption === 'casinoCardData') && res['successObj'].players.banned) {\n        this.selectedOption = 'casinoPlayerId';\n        const bannedMsg = this.translate.instant('application.app.CAM_CASHIER_LABELS.COMMON_LOGGERMESSAGES.BANNEDPLAYER');\n        this.snackBar.open(bannedMsg, '', {\n          duration: 3000,\n          horizontalPosition: 'right',\n          panelClass: 'snack__warn'\n        });\n        return false;\n      }\n        if (this.selectedOption === 'casinoCardData' && res['successObj'].players.length > 0\n          && res['successObj'].players[0].playerId === null) {\n          res['successObj'].players[0].playerId = this.getLastSixDigits(res['successObj'].players[0].cardId);\n          res['successObj'].players[0].cardId = res['successObj'].players[0].cardId;\n          this.selectedOption = 'casinoPlayerId';\n        }\n      this.isCMSUp = res['successObj'].isCMSUp;\n      if (this.selectedOption === 'firstName' || this.selectedOption === 'lastName') {\n        if (!this.isCMSUp) {\n          this.snackBar.open(this.translate.instant('application.app.common.labels.SEARCH_PLAYER_BY_ID_CARD'), '', {\n            duration: 4000,\n            horizontalPosition: 'right',\n            panelClass: 'snack__info'\n          });\n          return;\n        }\n      }\n       if (res['successObj'].players.length < 1) {\n          this.snackBar.open(this.translate.instant('application.app.common.labels.PLAYERNOTFOUND'), '', {\n            duration: 3000,\n            horizontalPosition: 'right',\n            panelClass: 'snack__warn'\n          });\n         return;\n        }\n        this.searchObj.emit(res);\n    }, (err) => {\n      this.snackBar.open(this.translate.instant('application.app.common.labels.PLAYERNOTFOUND'), '', {\n        duration: 3000,\n        horizontalPosition: 'right',\n        panelClass: 'snack__warn'\n      });\n      console.log(err);\n    });\n  }\n  getLastSixDigits(val) {\n    val = val.replace(';', '').replace('?', '');\n    return val.substr(-6);\n  }\n  checkEvent() {\n    if (this.prevKeyCode > 57) {\n      this.selectedOption = 'casinoCardData';\n      if (this.searchText) {\n        this.searchPlayer(this.searchText);\n      }\n    } else {\n      // this.doSearch();\n    }\n  }\n  isValidPlayerId(playerId) {\n    return playerId.length > 0 && playerId.length <= 9 && !isNaN(playerId) && parseInt(playerId, 10) > 0\n      && Number.isInteger(parseInt(playerId, 10));\n  }\n  isValidCardId(cardValue) {\n    let isValidCard;\n    if (cardValue.match(/[a-z]/i)) {\n      isValidCard = false;\n    } else {\n      const strLen = cardValue.length;\n      if (cardValue[0] === ';' && cardValue[strLen - 1] === '?') {\n        let cardVal = cardValue.replace(';', '').replace('?', '');\n        cardVal = cardVal.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}=]/g, '');\n        if (!isNaN(cardVal)) {\n          isValidCard = true;\n        } else {\n          isValidCard = false;\n        }\n      } else {\n        isValidCard = false;\n      }\n    }\n    return isValidCard;\n  }\n  onKeyPressSearchText(event: any) {\n    if (event.target.value.length>8){\n      event.preventDefault();\n    }\n  };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subnav-bar',\n  templateUrl: './subnav-bar.component.html',\n  styleUrls: ['./subnav-bar.component.scss']\n})\nexport class SubnavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentTopologyService {\n  private defaultTopologyID = 3;\n  private defaultGamingDay: Date;\n  public topology = new BehaviorSubject<number>(this.defaultTopologyID);\n  public currentTopology =  this.topology.asObservable();\n  public gamingDay = new BehaviorSubject<Date>(this.defaultGamingDay);\n  public currentGamingDay =  this.gamingDay.asObservable();\n  constructor() { }\n  updateTopology(topologyID: number, gamingDay: Date) {\n    this.topology.next(topologyID);\n    this.gamingDay.next(gamingDay);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {CurrentTopologyService} from '../../services/current-topology.service';\nimport {AlertCount} from '../../interface/alert.interface';\nimport {TopologyStatistics} from '../../interface/topology-types.interface';\n\n@Component({\n    selector: 'app-subnav-data-bar',\n    templateUrl: './subnav-data-bar.component.html',\n    styleUrls: ['./subnav-data-bar.component.scss']\n})\nexport class SubnavDataBarComponent {\n    @Input() alertsCount: AlertCount;\n    @Input() topologyStatistics: TopologyStatistics;\n    private currentToplogyId: number;\n    private currentGamingDay: Date;\n    constructor(private currentTopology: CurrentTopologyService) {\n        this.updateTopology(); // just for testing purpose\n    }\n    updateTopology () {\n        // this has to be assigned from the route\n        this.currentToplogyId = 3; // temporary value\n        this.currentGamingDay = new Date('2019-01-10');\n        this.currentTopology.updateTopology(this.currentToplogyId, this.currentGamingDay);\n    }\n\n    convertToNumber(value): number {\n        return parseFloat(value);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    exports: [\n        MatButtonModule,\n        MatCardModule,\n        MatGridListModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatListModule,\n        MatIconModule,\n        MatButtonToggleModule,\n        MatTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        MatSnackBarModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatStepperModule,\n        MatTreeModule,\n        MatSidenavModule,\n        MatDividerModule,\n        MatSlideToggleModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatAutocompleteModule\n    ]\n})\nexport class MaterialComponentModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-loader',\n    templateUrl: './loader.component.html',\n    styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n    constructor() {\n    }\n\n    generateFake(count: number): Array<number> {\n        const indexes = [];\n        for (let i = 0; i < count; i++) {\n            indexes.push(i);\n        }\n        return indexes;\n    }\n}\n","import {InjectableRxStompConfig} from '@stomp/ng2-stompjs';\nimport {urls} from '../constants/urls';\n\nexport const configRxLogoutStompConfig: InjectableRxStompConfig = {\n    brokerURL: urls.auth.logoutWS,\n    heartbeatIncoming: 0,\n    heartbeatOutgoing: 20000,\n    reconnectDelay: 200,\n    debug: (msg: string): void => {\n        console.log(new Date(), msg);\n    }\n};\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DecimalPipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-chip-icons',\n    templateUrl: './chip-icons.component.html',\n    styleUrls: ['./chip-icons.component.scss']\n})\nexport class ChipIconsComponent implements OnInit {\n\n    @Input() chipIconKey: string;\n    strCss: string;\n    strKey: string;\n    chipLabel: string;\n\n    /*chipsIcon = {\n        '50000000': 'icon-chip-color chip-50-million',\n        '10000000': 'icon-chip-color chip-10-million',\n        '500000': 'icon-chip-color chip-500-thousand',\n        '100000': 'icon-chip-color chip-100-thousand',\n        '50000': 'icon-chip-color chip-50-thousand',\n        '25000': 'icon-chip-color chip-25-thousand',\n        '10000': 'icon-chip-color chip-10-thousand',\n        '5000': 'icon-chip-color chip-5-thousand',\n        '1000': 'icon-chip-color chip-1-thousand',\n        '500': 'icon-chip-color chip-500',\n        '100': 'icon-chip-color chip-100',\n        '50': 'icon-chip-color chip-50',\n        '25': 'icon-chip-color chip-25',\n        '5': 'icon-chip-color chip-5',\n        '3': 'icon-chip-color chip-3',\n        '1': 'icon-chip-color chip-1'\n    };*/\n    constructor(private decimalPipe: DecimalPipe) {\n    }\n\n    ngOnInit() {\n        this.getChipIcon();\n    }\n\n    getChipIcon(): string {\n        if (typeof this.chipIconKey !== 'undefined') {\n            this.strKey = this.chipIconKey.replace('.00', '');\n        }\n        this.chipLabel = this.getChipLabel(this.strKey);\n        // this.strCss = this.chipsIcon[this.strKey] ? this.chipsIcon[this.strKey] : 'icon-chip-color default-chip-color';\n        this.strCss = 'icon-chip-color chip-grey';\n        return this.strCss;\n    }\n\n    getChipLabel(chipKey): string {\n        if (chipKey === undefined) {\n            return;\n        }\n        if (this.isFractionalChipDenom(chipKey.toString())) {\n            return this.decimalPipe.transform(chipKey.toString(), '1.2-2')/*.replace('.00', '')*/;\n        } else {\n            switch (chipKey) {\n                case '1000' :\n                case '1000.0' :\n                case '1000.00' : {\n                    return '1K';\n                }\n                case '5000' :\n                case '5000.0' :\n                case '5000.00' : {\n                    return '5K';\n                }\n                case '10000' :\n                case '10000.0' :\n                case '10000.00' : {\n                    return '10K';\n                }\n                case '25000' :\n                case '25000.0' :\n                case '25000.00' : {\n                    return '25K';\n                }\n                case '50000':\n                case '50000.0':\n                case '50000.00': {\n                    return '50K';\n                }\n                case '100000':\n                case '100000.0':\n                case '100000.00': {\n                    return '100K';\n                }\n                case '500000':\n                case '500000.0':\n                case '500000.00': {\n                    return '500K';\n                }\n                case '1000000':\n                case '1000000.0':\n                case '1000000.00': {\n                    return '1M';\n                }\n                case '5000000':\n                case '5000000.0':\n                case '5000000.00': {\n                    return '5M';\n                }\n                case '10000000':\n                case '10000000.0':\n                case '10000000.00': {\n                    return '10M';\n                }\n                case '50000000':\n                case '50000000.0':\n                case '50000000.00': {\n                    return '50M';\n                }\n                default:\n                    return chipKey;\n            }\n        }\n    }\n\n    isFractionalChipDenom(denom) {\n        if (typeof denom === 'number') {\n            denom = denom.toString();\n        }\n        return ( denom && denom.indexOf('.') > -1  );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PromotionService {\n\n  constructor(private http: HttpClient) { }\n\n  getPromotions(options: {}): Observable<HttpResponse<Object>> {\n    const url = `${urls.promotion.promotionPath}`;\n    return this.http.get<HttpResponse<Object>>(url, options);\n  }\n\n  changeStatus(promotionId, options: {}): Observable<HttpResponse<Object>> {\n    const url = `${urls.promotion.promotionUpdatePath}${promotionId}`;\n    return this.http.put<HttpResponse<Object>>(url, options);\n  }\n\n  createPromotion(body: {}, options?: {}): Observable<HttpResponse<Object>> {\n    const url = `${urls.promotion.promotionPath}`;\n    return this.http.post<HttpResponse<Object>>(url, body, options);\n  }\n\n  managePromotionEnabled(): Observable<HttpResponse<Object>> {\n    const url = `${urls.promotion.managePromotionEnabled}`;\n    return this.http.get<HttpResponse<Object>>(url);\n  }\n\n  getWinners(options: {}): Observable<HttpResponse<Object>> {\n    const url = `${urls.promotion.winners}`;\n    return this.http.get<HttpResponse<Object>>(url, options);\n  }\n  getEligibleDays(options: {}) {\n      const url = `${urls.promotion.promotionsEligibleDays}`;\n      return this.http.get<HttpResponse<Object>>(url, options);\n  }\n\n  /**\n     * this function get the comp api data and path is end point of api like Properties,CompType etc..\n     * @param path\n     * @param options\n  */\n  getCompApi(path, options: {}) {\n     const url = `${urls.promotion.promotionsCompApi}${path}`;\n     return this.http.get<HttpResponse<Object>>(url, options);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {PromotionService} from '../../services/promotion.service';\nimport {TopologyService} from \"../../services/topology.service\";\n\nconst ELEMENT_DATA_W = [\n  {promotionId: 1001, name: 'Promotion1', creationTime: '11:22', prizeName: 'Iphone', totalamount: 30000,\n    pitName: 'PIT1', tableName: 'TAB1', seat: 4, player: 'Pandey, Rakesh (1002)', sessionId: 1223},\n  {promotionId: 1002, name: 'Promotion2', creationTime: '13:32', prizeName: 'Ipad', totalamount: 50000,\n    pitName: 'PIT2', tableName: 'TAB2', seat: 3, player: 'Kumar, Ankur (1006)', sessionId: 1345},\n];\n\nconst ELEMENT_DATA_ES = [\n  {promotionId: 1001, name: 'Promotion1', pitName: 'PIT1', tableName: 'TAB1', seat: 4, player: 'Pandey, Rakesh (1002)', sessionId: 1223},\n  {promotionId: 1002, name: 'Promotion2', pitName: 'PIT2', tableName: 'TAB2', seat: 3, player: 'Kumar, Ankur (1006)', sessionId: 1345},\n];\n\n@Component({\n  selector: 'app-winner-eligible-sessions',\n  templateUrl: './winner-eligible-sessions.component.html',\n  styleUrls: ['./winner-eligible-sessions.component.scss']\n})\n\n\n\nexport class WinnerEligibleSessionsComponent implements OnInit {\n  command: any;\n  perPageOption: Array<number> = [10, 20, 30, 50, 100];\n  totalRecord = 19;\n  displayedColumns_W: string[] = ['promotionId', 'promotionName', 'timeOfWin', 'prizeName', 'prizeValue', 'pit', 'tableId',\n    'seat', 'player', 'sessionId'];\n  winners = [];\n\n  displayedColumns_ES: string[] = ['promotionId', 'name', 'pitName', 'tableName', 'seat', 'player', 'sessionId'];\n  dataSource_ES = ELEMENT_DATA_W;\n\n  constructor(public dialogRef: MatDialogRef<WinnerEligibleSessionsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private promotionService: PromotionService,\n              public topologyService: TopologyService\n  ) {\n    this.init(data);\n  }\n\n  init(data): void {\n    this.command = data;\n    if (this.command.cmd === 'WINNER') {\n      this.getWinners();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  getWinners(): void {\n    const requestObj = {\n      observe: 'response',\n      params: {}\n    };\n    this.promotionService.getWinners(requestObj)\n        .subscribe( response => {\n          this.winners = response.body['winners'];\n        });\n  }\n\n  getTopologyNameById(topologyId): string {\n    if (this.topologyService.topologyNodeNames[topologyId]) {\n      return this.topologyService.topologyNodeNames[topologyId].name;\n    }\n\n  }\n\n  updatePagination(event): void {\n\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {dialogSize} from './../constants/constants';\nimport { MatDialog } from '@angular/material/dialog';\nimport {WinnerEligibleSessionsComponent} from '../header/winner-eligible-sessions/winner-eligible-sessions.component';\nimport {PlayerSearchComponent} from '../player-search/player-search.component';\n\n\n@Component({\n  selector: 'app-action-menu',\n  templateUrl: './action-menu.component.html',\n  styleUrls: ['./action-menu.component.scss']\n})\nexport class ActionMenuComponent {\n  @Input() appName: string;\n\n  constructor(\n      public dialog: MatDialog) {\n  }\n  winnerEligibleSessions(cmd): void {\n    const dialogRef = this.dialog.open(WinnerEligibleSessionsComponent, {\n      width: dialogSize.large,\n      height: '45vw',\n      data: {cmd: cmd}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n    openPlayerSearch() {\n        const dialogRef = this.dialog.open(PlayerSearchComponent, {\n            width: dialogSize.large,\n            height: '45vw',\n            data: {cmd: ''}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {CageService} from '../../services/cage.service';\nimport {CurrentTopologyService} from '../../services/current-topology.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {GamingDayDDInterface, RollTimeInterface, RollTimePayloadInterface, TopologyObjectInterface} from '../../interface/cage.interface';\n\n@Component({\n    selector: 'app-roll-time-dialog',\n    templateUrl: './roll-time-dialog.component.html',\n    styleUrls: ['./roll-time-dialog.component.scss']\n})\nexport class RollTimeDialogComponent implements OnInit {\n\n    private dateTime: Date;\n    public startAt: Date;\n    public minStartTime: Date;\n    public maxDateTime: Date;\n    private requestObject: Object;\n    private rollTimeData: Array<RollTimeInterface>;\n    public renderedRollTimeData: Array<RollTimeInterface>;\n    public displayedColumns: Array<string> = ['topologyNode', 'nextRollDtm'];\n    public currentGamingDays: Array<GamingDayDDInterface> = [];\n    public selectedGamingDay: Date;\n    private currentGamingDay: Date;\n    public disableRollTimeSelection: Boolean;\n    private rollTimeTopologyMap = {};\n    public selectedNodeIds: Array<number> = [];\n    private rollTimePayloadData: Array<RollTimePayloadInterface> = [];\n\n    constructor(\n        private dialog: MatDialog,\n        private dialogRef: MatDialogRef<any>,\n        private cageService: CageService,\n        private currentTopologyService: CurrentTopologyService,\n        private snackBar: MatSnackBar,\n        private translate: TranslateService\n    ) {\n        this.setCurrentData();\n        this.getRollTimeData();\n    }\n    setCurrentData (): void {\n        this.currentTopologyService.currentTopology.subscribe(topologyID => {\n            this.requestObject = {\n                params: {\n                    topologyId: topologyID\n                }\n            };\n        });\n        this.currentTopologyService.currentGamingDay.subscribe(gamingDay => {\n            this.currentGamingDay = gamingDay;\n        });\n    }\n\n    ngOnInit() {\n        this.dateTime = new Date(); // setting default date\n    }\n\n    getRollTimeData() {\n        this.cageService.getRollTimeData(this.requestObject).subscribe(data => {\n            this.rollTimeData = data;\n            this.processTopology(this.rollTimeData);\n            this.selectedGamingDay = this.currentGamingDays[0].value;\n            this.userConditions();\n            this.renderView();\n        });\n    }\n\n    userConditions() {\n        this.disableRollTimeSelection = new Date(this.selectedGamingDay).getTime() > this.currentGamingDay.getTime();\n    }\n\n    setTimeOnCalender(selectedRollTime: Date) {\n        const maxDate = new Date();\n        this.startAt = selectedRollTime;\n        this.minStartTime = new Date();\n        maxDate.setDate(maxDate.getDate() + 1);\n        this.maxDateTime = maxDate;\n    }\n\n    selectedRollTime(rollTime: string) {\n        this.rollTimePayloadData = [];\n        for (let i = 0; i < this.selectedNodeIds.length; i++) {\n            this.rollTimePayloadData.push({'nextRollDtm': new Date(rollTime).toISOString(), 'nodeId': this.selectedNodeIds[i]});\n        }\n        this.cageService.postRollTimeData(this.rollTimePayloadData);\n    }\n\n    selectLocation(location: RollTimeInterface) {\n        const childrenNodeMap = {};\n        this.childrenNodes(childrenNodeMap);\n        for (const key in childrenNodeMap) {\n            if (childrenNodeMap.hasOwnProperty(key)) {\n                if (childrenNodeMap[key].length > 0) {\n                    const allChildrenNodes = [];\n                    this.callRecursively(childrenNodeMap, childrenNodeMap[key], allChildrenNodes);\n                    this.rollTimeTopologyMap[key] = allChildrenNodes;\n                } else {\n                    this.rollTimeTopologyMap[key] = [];\n                }\n            }\n        }\n        this.locationSelection(location);\n\n    }\n    locationSelection(location: RollTimeInterface) {\n        location.isChecked = !location.isChecked;\n        if (location.isChecked) {\n            if (this.selectedNodeIds.indexOf(location.topologyNode.nodeId) === -1) {\n                this.selectedNodeIds.push(location.topologyNode.nodeId);\n            }\n        } else {\n            this.selectedNodeIds = this.selectedNodeIds.filter(e => e !== location.topologyNode.nodeId);\n        }\n        this.renderedRollTimeData.map(node => {\n            if (this.rollTimeTopologyMap[location.topologyNode.nodeId].indexOf(node.topologyNode.nodeId.toString()) > -1) {\n                node.isChecked = location.isChecked;\n                if (node.isChecked) {\n                    if (this.selectedNodeIds.indexOf(node.topologyNode.nodeId) === -1) {\n                        this.selectedNodeIds.push(node.topologyNode.nodeId);\n                    }\n                } else {\n                    this.selectedNodeIds = this.selectedNodeIds.filter(e => e !== node.topologyNode.nodeId);\n                }\n            }\n        });\n    }\n\n    childrenNodes(childrenNodeMap: Object) {\n        let topologyNode: TopologyObjectInterface;\n        let childrenIds: number[];\n        for (let i = 0; i < this.rollTimeData.length; i++) {\n            topologyNode = this.rollTimeData[i].topologyNode;\n            childrenIds = this.extractNodeIdFromHref(topologyNode.childNodesHrefs);\n            childrenNodeMap[topologyNode.nodeId] = childrenIds;\n        }\n    }\n\n    callRecursively(childrenNodeMap: Object, currentChildrenNodes, allChildrenNodes: string[]) {\n        for (let i = 0; i < currentChildrenNodes.length; i++) {\n            allChildrenNodes.push(currentChildrenNodes[i]);\n            for (const key in childrenNodeMap) {\n                if (childrenNodeMap.hasOwnProperty(key) &&\n                    (key === currentChildrenNodes [i] && childrenNodeMap[key].length > 0)) {\n                    this.callRecursively(childrenNodeMap, childrenNodeMap[key], allChildrenNodes);\n                }\n            }\n        }\n    }\n\n    extractNodeIdFromHref(hrefArray: string) {\n        const idArr: number[] = [];\n        let ids = [];\n        for (let i = 0; i < hrefArray.length; i++) {\n            ids = hrefArray[i].split('/');\n            idArr.push(ids[ids.length - 1]);\n        }\n        return idArr;\n    }\n\n    processTopology(topologyObj: Array<RollTimeInterface>): void {\n        const allGamingDays = [];\n\n        for (let i = 0; i < topologyObj.length; i++) {\n            topologyObj[i].topologyNode.location = this.locationPath(topologyObj[i].topologyNode.name, topologyObj[i].topologyNode.path);\n            topologyObj[i].currentGamingDayViewValue = new Date(topologyObj[i].currentGamingDay);\n            topologyObj[i].nextRollDtmViewValue = new Date(topologyObj[i].nextRollDtm);\n            topologyObj[i].isChecked = false;\n            allGamingDays.push(topologyObj[i].currentGamingDay);\n        }\n\n        const uniqueGamingDays = (Array.from(new Set(allGamingDays))).sort();\n\n        for (let i = 0; i < uniqueGamingDays.length; i++) {\n            this.currentGamingDays.push(\n                {\n                    value: uniqueGamingDays[i],\n                    viewValue: new Date(uniqueGamingDays[i])\n                }\n            );\n        }\n    }\n\n    locationPath(currentTopologyName, path): Array<string> {\n        let formattedPath: Array<string> = [];\n        if (path.length <= 2) {\n            formattedPath = currentTopologyName.split();\n        } else {\n            path = currentTopologyName + ',' + path.slice(1, -1);\n            formattedPath = path.split(',').reverse();\n        }\n        return formattedPath;\n    }\n\n    onClose(): void {\n        this.dialogRef.close();\n    }\n\n    onGamingDaySelection() {\n        this.selectedNodeIds = [];\n        this.renderView();\n    }\n\n    renderView(): void {\n        this.renderedRollTimeData = this.sortDataObj(\n            this.rollTimeData.filter(data =>\n                data.currentGamingDay === this.selectedGamingDay.toString()\n            ));\n    }\n\n    sortDataObj(obj): Array<RollTimeInterface> {\n        return obj.sort((a, b) =>\n            (a.topologyNode.parentNodeId > b.topologyNode.parentNodeId) ? 1 :\n                ((b.topologyNode.parentNodeId > a.topologyNode.parentNodeId) ? -1 : 0));\n    }\n\n    submitRollTime() {\n        this.cageService.postRollTimeData(this.rollTimePayloadData).subscribe(res => {\n            const key = 'application.app.common.labels.TOPSUBNAV.ROLL_TIME_UPDATED';\n            this.snackBar.open(this.translate.instant(key), '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__success'\n            });\n            this.dialogRef.close();\n        });\n    }\n}\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {RollTimeDialogComponent} from './roll-time-diaglog/roll-time-dialog.component';\nimport {dialogSize} from '../constants/constants';\n\n@Component({\n    selector: 'app-roll-time',\n    templateUrl: './roll-time.component.html',\n    styleUrls: ['./roll-time.component.scss']\n})\nexport class RollTimeComponent implements OnInit {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n    }\n\n    openDialog(): void {\n        this.dialog.open(RollTimeDialogComponent, {\n            width: dialogSize.medium,\n            height: '600px'\n        });\n    }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {RollTimeComponent} from './roll-time.component';\nimport {RollTimeDialogComponent} from './roll-time-diaglog/roll-time-dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from 'ng-pick-datetime';\nimport {CommonModule} from '@angular/common';\nimport {CommonTranslationModule} from '../common-translation/common-translation.module';\n\n@NgModule({\n    imports: [\n        MatSelectModule,\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule,\n        CommonModule,\n        MatTableModule,\n        MatCheckboxModule,\n        CommonTranslationModule,\n        MatInputModule,\n        MatButtonModule,\n        MatMenuModule\n    ],\n    declarations: [\n        RollTimeComponent,\n        RollTimeDialogComponent\n    ],\n    exports: [\n        RollTimeComponent,\n        RollTimeDialogComponent\n    ]\n})\nexport class AppRollTimeModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TopologyService} from '../services/topology.service';\n\n@Component({\n  selector: 'app-app-add-node-topology',\n  templateUrl: './app-add-node-topology.component.html',\n  styleUrls: ['./app-add-node-topology.component.scss']\n})\n\nexport class AppAddNodeTopologyComponent implements OnInit {\n    public optionArr = [];\n    public typeVal;\n    public longName;\n    public shortName;\n    public description;\n    public host;\n    public min = 1;\n    public max = 10;\n    public isHost = false;\n    public loader = false;\n    @Output() addedNodeEvent = new EventEmitter();\n    public siteTopologyCode;\n    public sitesFromTopology = [];\n    public companyLevelCode;\n    public isAccessGroup = false;\n    public isAGNameInvalid = false;\n    public isShortNameInvalid = false;\n    public isLongNameInvalid = false;\n    public savedAccessGroup: string;\n    public savedLocation: any;\n\n    constructor(public dialogRef: MatDialog,\n                @Inject(MAT_DIALOG_DATA) public data, public _topologyService: TopologyService,\n                public fb: FormBuilder, public snackBar: MatSnackBar, public translate: TranslateService) {\n        this.isAccessGroup = this.data.called === 'accessgroup';\n        this.addValidations();\n    }\n\n    public limitForm = this.fb.group({\n        description: ['']\n    });\n\n    validateShortName: ErrorStateMatcher = {\n        isErrorState: (control: FormControl) => {\n            this.isShortNameInvalid = this.isDuplicate('shortName', this.limitForm.value['shortName']);\n            return this.isShortNameInvalid;\n        }\n    };\n    validateName: ErrorStateMatcher = {\n        isErrorState: (control: FormControl) => {\n            this.isLongNameInvalid = this.isDuplicate('name', this.limitForm.value['longName']);\n            return this.isLongNameInvalid;\n        }\n    };\n    validateAccessGroupName: ErrorStateMatcher = {\n        isErrorState: (control: FormControl) => {\n            this.isAGNameInvalid = this.isDuplicate('groupName', this.limitForm.value['accessGroupName']);\n            return this.isAGNameInvalid;\n        }\n    };\n    valChangeFunction(evt, fName) {\n        const valObj = {};\n        valObj[fName] = evt;\n        this.limitForm.patchValue(valObj, {onlySelf: true});\n    }\n    addValidations() {\n        if (this.isAccessGroup) {\n            this.limitForm.addControl('typeValAGroup', new FormControl('', Validators.required));\n            this.limitForm.addControl('accessGroupName', new FormControl('', Validators.required));\n        } else {\n            this.limitForm.addControl('typeVal', new FormControl('', Validators.required));\n            this.limitForm.addControl('longName', new FormControl('',\n                Validators.compose([Validators.required, this.noWhitespace])));\n            this.limitForm.addControl('shortName', new FormControl('',\n                Validators.compose([Validators.required, Validators.maxLength(this.max), this.noWhitespace])));\n            this.limitForm.addControl('host', new FormControl('', Validators.required));\n\n        }\n    }\n    public noWhitespace(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n    showHost(opt) {\n        if (opt.value === 1000) {\n            this.isHost = true;\n            this.limitForm.addControl('host', new FormControl('', Validators.required));\n        } else {\n            this.isHost = false;\n            this.limitForm.removeControl('host');\n        }\n\n    }\n\n    ngOnInit() {\n                    if (this.data.called === 'accessgroup') {\n                        this.createDataForDropdownForAccessGroup(this._topologyService.topologyTypes);\n                    }\n                    if (this.data.called === 'assignednode') {\n                        this.createDataForDropdownForAssingedNode(this.data.typeMap);\n                    }\n                }\n    createDataForDropdownForAccessGroup(topologyTypes) {\n        topologyTypes.forEach((value, key) => {\n            if (value.topologyType === 'SITE') {\n                this.siteTopologyCode = value.topologyTypeId;\n            }\n            if (value.topologyType === 'COMPANY_NAME') {\n                this.companyLevelCode = value.topologyTypeId;\n            }\n        });\n        const keyOfSits = Object.keys(this._topologyService.topologyNodeNames).\n        filter(key => this._topologyService.topologyNodeNames[key].type\n            === this.siteTopologyCode);\n        for (let i of keyOfSits) {\n            this.sitesFromTopology.push(this._topologyService.topologyNodeNames[i]);\n            this.optionArr.push({id: this._topologyService.topologyNodeNames[i].nodeId,\n                type: this._topologyService.topologyNodeNames[i].name});\n        }\n    }\n    createDataForDropdownForAssingedNode(types) {\n        if (types.get(this.data.clickedNode.type).childTypeIds.length > 0) {\n            const temp = types.get(this.data.clickedNode.type).childTypeIds;\n            for (const tp of temp) {\n                this.optionArr.push({value: types.get(tp).labelCode, id: types.get(tp).topologyTypeId, type: types.get(tp).topologyType});\n            }\n        }\n    }\n    createAccessGroup() {\n        const groupName = this.limitForm.value.accessGroupName;\n        this.loader = true;\n        // {\"topologyId\":2805,\"groupName\":\"asdasdasaaaa\",\"groupType\":\"ACCESS\"}\n        const param = {\n            topologyId: this.limitForm.value.typeValAGroup,\n            groupName: groupName.trim(),\n            groupType: 'ACCESS'\n        };\n        this._topologyService.createNodeAccessGroup(param).subscribe( (res) => {\n            if (res[0] && res[0].code === 20001) {\n                this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                    duration: 3000,\n                    horizontalPosition: 'right',\n                    panelClass: 'snack__error'\n                });\n                return;\n            }\n            this.savedAccessGroup = groupName.trim();\n            this.loader = false;\n            this.closeDialogBox();\n            const temp = {res: res,  msg: 'createAccessGroup'};\n            this._topologyService.nodeUpdated.next(temp);\n            this.snackBar.open(this.translate.instant('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.AG_ADDED'), '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__success'\n            });\n        }, (err) => {\n            this.loader = false;\n            this.snackBar.open(err.error[0].message, '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__warn'\n            });\n        });\n    }\n    createAssingedNode() {\n        this.loader = true;\n        const longName = this.limitForm.value.longName;\n        const shortName = this.limitForm.value.shortName;\n        let param;\n        if (this.limitForm.value.typeVal === 1000) {\n            param = {\n                name: longName.trim(),\n                shortName: shortName.trim(),\n                type: this.limitForm.value.typeVal,\n                host: this.limitForm.value.host,\n                parentNodeId: this.data.clickedNode.nodeId,\n                description: this.limitForm.value.description\n            };\n        } else {\n            param = {\n                name: longName.trim(),\n                shortName: shortName.trim(),\n                type: this.limitForm.value.typeVal,\n                parentNodeId: this.data.clickedNode.nodeId,\n                description: this.limitForm.value.description\n            };\n        }\n        this._topologyService.createNodeOnTree(param).subscribe((res) => {\n            if (res[0] && res[0].code === 20001) {\n                this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                    duration: 3000,\n                    horizontalPosition: 'right',\n                    panelClass: 'snack__error'\n                });\n                return;\n            }\n            this.savedLocation = res[0];\n            res[0].typeName = this._topologyService.topologyTypes.get(res[0].type).topologyType;\n            const temp = {res: res, clickNode: this.data.clickedNode, msg: 'createNode'};\n            this._topologyService.nodeUpdated.next(temp);\n            this.loader = false;\n            this.closeDialogBox();\n            this.snackBar.open(this.translate.instant('application.app.CONFIGURATION_LABELS.AREAS.SUCCESS_ADDED'), '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__success'\n            });\n        }, (err) => {\n            this.loader = false;\n            this.snackBar.open(err, '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__warn'\n            });\n        });\n    }\n    createNode() {\n        if (this.isAccessGroup) {\n            this.createAccessGroup();\n        } else {\n            this.createAssingedNode();\n        }\n    }\n\n    closeDialogBox(): void {\n        this.dialogRef.closeAll();\n    }\n    isDuplicate(field, value): boolean {\n        let isRedundant = false;\n        if (field === 'groupName' && value !== '') {\n            const accessGroups = this._topologyService.accessGroupNodes;\n            for (let i = 0, iLen = accessGroups.length; i < iLen; i++) {\n                if (accessGroups[i].groupName === value.trim() && value.trim() !== this.savedAccessGroup) {\n                    isRedundant = true;\n                }\n            }\n        } else if (field === 'name' && value !== '') {\n            const allNodes = this._topologyService.topologyNodeNames;\n            for (const obj in allNodes) {\n                if (allNodes.hasOwnProperty(obj)) {\n                    if (allNodes[obj].name.toUpperCase() === value.trim().toUpperCase()) {\n                        if (this.savedLocation && value.trim().toUpperCase() !== this.savedLocation.name.toUpperCase()) {\n                            isRedundant = true;\n                        } else if (this.savedLocation === undefined) {\n                            isRedundant = true;\n                        }\n                    }\n                }\n            }\n        } else if (field === 'shortName' && value !== '') {\n            const allNodes = this._topologyService.topologyNodeNames;\n            for (const obj in allNodes) {\n                if (allNodes.hasOwnProperty(obj)) {\n                    if (allNodes[obj].shortName.toUpperCase() === value.trim().toUpperCase()) {\n                        if (this.savedLocation && value.trim().toUpperCase() !== this.savedLocation.shortName.toUpperCase()) {\n                            isRedundant = true;\n                        } else if (this.savedLocation === undefined) {\n                            isRedundant = true;\n                        }\n                    }\n                }\n            }\n        }\n       return isRedundant;\n    }\n    isSaveDisabled(): boolean {\n        return this.limitForm.invalid || this.isAGNameInvalid || this.isLongNameInvalid || this.isShortNameInvalid;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nexport interface PlayersList {\n  playername:string;\n  playerwinloss:number;\n}\n\nconst PLAYERS_DATA: PlayersList[] = [\n  {playername: 'Name1', playerwinloss: 9002000 },\n  {playername: 'Name1', playerwinloss: 1800 },\n  {playername: 'Name1', playerwinloss: 1750 },\n  {playername: 'Name1', playerwinloss: 1640 },\n  {playername: 'Name1', playerwinloss: 1510 },\n  {playername: 'Name1', playerwinloss: 1380 },\n  {playername: 'Name1', playerwinloss: 1000 },\n  {playername: 'Name1', playerwinloss: 960 },\n  {playername: 'Name1', playerwinloss: 815 },\n  {playername: 'Name1', playerwinloss: 520 },\n];\n\n@Component({\n  selector: 'app-app-tab-bar',\n  templateUrl: './app-tab-bar.component.html',\n  styleUrls: ['./app-tab-bar.component.scss']\n})\nexport class AppTabBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  playersListColumns: string[] = ['playername', 'playerwinloss'];\n  winningPlayersList = PLAYERS_DATA;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buy-ins',\n  templateUrl: './buy-ins.component.html',\n  styleUrls: ['./buy-ins.component.scss']\n})\nexport class BuyInsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opener-closer',\n  templateUrl: './opener-closer.component.html',\n  styleUrls: ['./opener-closer.component.scss']\n})\nexport class OpenerCloserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fill-credit',\n  templateUrl: './fill-credit.component.html',\n  styleUrls: ['./fill-credit.component.scss']\n})\nexport class FillCreditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];\n\n@Component({\n  selector: 'app-game-history',\n  templateUrl: './game-history.component.html',\n  styleUrls: ['./game-history.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class GameHistoryComponent implements OnInit {\n\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement | null;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","import {Component, Input, OnInit} from '@angular/core';\nimport {ChipSetType} from '../interface/chipSet.interface';\nimport {TranslateService} from '@ngx-translate/core';\n@Component({\n    selector: 'app-chipset-panel',\n    templateUrl: 'chipset-panel.component.html',\n    styleUrls: ['chipset-panel.component.scss']\n})\nexport class ChipsetPanelComponent implements OnInit {\n\n    panelOpenState = false;\n    @Input() chipSetData = [];\n    csPanelHeaderHeight:string = '48px';\n\n    constructor(private translate: TranslateService) {\n        // this.translate.setDefaultLang('en_US');\n    }\n\n    ngOnInit() {\n    }\n    isFractionalChipDenom(denom) {\n        if (typeof denom === 'number') {\n            denom = denom.toString();\n        }\n        return ( denom && denom.indexOf('.') > -1  );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MaterialComponentModule} from './material-component/material-component.module';\nimport {AppSwitcherComponent} from './app-switcher/app-switcher.component';\nimport {AppMenuComponent} from './app-switcher/app-menu.component';\nimport {AppListComponent} from './app-switcher/app-list.component';\nimport {AlertService} from './services/alert.service';\nimport {UserService} from './services/user.service';\nimport {CageService} from './services/cage.service';\nimport {CasinomanagerService} from './services/casinomanager.service';\nimport {SortingService} from './sorting/sorting.service';\nimport {CommonTranslationModule} from './common-translation/common-translation.module';\nimport {LoaderComponent} from './loader/loader.component';\nimport {TopNavBarComponent} from './header/top-nav-bar/top-nav-bar.component';\nimport {InjectableRxStompConfig, RxStompService, rxStompServiceFactory} from '@stomp/ng2-stompjs';\nimport {configRxLogoutStompConfig} from './web-sockets/ws-auth.config';\nimport {ChipIconsComponent} from './chip-icons/chip-icons.component';\nimport {UtilityService} from './services/utility.service';\nimport {TopologyService} from './services/topology.service';\nimport {SubnavBarComponent} from './header/subnav-bar/subnav-bar.component';\nimport {PromotionService} from './services/promotion.service';\nimport {SubnavDataBarComponent} from './header/subnav-data-bar/subnav-data-bar.component';\nimport {CommonTranslationService} from './common-translation/common-translation.service';\nimport {ActionMenuComponent} from './action-menu/action-menu.component';\nimport {AppRollTimeModule} from './roll-time/app-roll-time.module';\nimport {WinnerEligibleSessionsComponent} from './header/winner-eligible-sessions/winner-eligible-sessions.component';\nimport {AccessDeniedComponent} from './access-denied/access-denied.component';\nimport {AppAddNodeTopologyComponent} from './app-add-node-topology/app-add-node-topology.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {AppTabBarComponent} from './app-tab-bar/app-tab-bar.component';\nimport {BuyInsComponent} from './buy-ins/buy-ins.component';\nimport {OpenerCloserComponent} from './opener-closer/opener-closer.component';\nimport {FillCreditComponent} from './fill-credit/fill-credit.component';\nimport {GameHistoryComponent} from './game-history/game-history.component';\nimport {BreadcrumbComponent} from './breadcrumb/breadcrumb.component';\nimport {ChipsetPanelComponent} from './chipset-panel/chipset-panel.component';\nimport { PlayerSearchComponent } from './player-search/player-search.component';\nimport {LoggerModule, NgxLoggerLevel} from 'ngx-logger';\nimport {DatePipe, DecimalPipe} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {JwtInterceptorService} from \"./services/Authentication/jwt-interceptor.service\";\n\n@NgModule({\n    declarations: [\n        AppSwitcherComponent,\n        AppMenuComponent,\n        AppListComponent,\n        LoaderComponent,\n        TopNavBarComponent,\n        ChipIconsComponent,\n        SubnavBarComponent,\n        SubnavDataBarComponent,\n        ActionMenuComponent,\n        WinnerEligibleSessionsComponent,\n        AccessDeniedComponent,\n        AppAddNodeTopologyComponent,\n        AppTabBarComponent,\n        BuyInsComponent,\n        OpenerCloserComponent,\n        FillCreditComponent,\n        GameHistoryComponent,\n        BreadcrumbComponent,\n        ChipsetPanelComponent,\n        PlayerSearchComponent\n    ],\n    imports: [\n        CommonModule,\n        MaterialComponentModule,\n        CommonTranslationModule,\n        AppRollTimeModule,\n        MatProgressBarModule,\n        LoggerModule.forRoot({\n            serverLoggingUrl: '',\n            level: NgxLoggerLevel.OFF,\n            serverLogLevel: NgxLoggerLevel.OFF,\n            disableConsoleLogging: false\n        }),\n    ],\n    providers: [\n        AlertService,\n        UserService,\n        DatePipe,\n        DecimalPipe,\n        CageService,\n        CasinomanagerService,\n        TopologyService,\n        SortingService,\n        UtilityService,\n        PromotionService,\n        CommonTranslationService,\n        {\n            provide: InjectableRxStompConfig,\n            useValue: configRxLogoutStompConfig\n        },\n        {\n            provide: RxStompService,\n            useFactory: rxStompServiceFactory,\n            deps: [InjectableRxStompConfig]\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: JwtInterceptorService,\n            multi: true\n        }\n    ],\n    entryComponents: [],\n    exports: [\n        MaterialComponentModule,\n        CommonTranslationModule,\n        HttpClientModule,\n        AppSwitcherComponent,\n        AppMenuComponent,\n        AppListComponent,\n        LoaderComponent,\n        TopNavBarComponent,\n        ChipIconsComponent,\n        SubnavBarComponent,\n        SubnavDataBarComponent,\n        WinnerEligibleSessionsComponent,\n        AccessDeniedComponent,\n        AppTabBarComponent,\n        BuyInsComponent,\n        OpenerCloserComponent,\n        FillCreditComponent,\n        GameHistoryComponent,\n        BreadcrumbComponent,\n        ChipsetPanelComponent\n    ]\n})\nexport class CommonUiLibModule {\n}\n","import {InjectableRxStompConfig} from '@stomp/ng2-stompjs';\nimport {urls} from '../constants/urls';\n\nexport const configRxAlertStompConfig: InjectableRxStompConfig = {\n    brokerURL: urls.alert.socketAlert,\n    heartbeatIncoming: 0,\n    heartbeatOutgoing: 10000,\n    reconnectDelay: 200,\n    debug: (msg: string): void => {\n        console.log('Alert Socket: ' + new Date(), msg);\n    }\n};\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChipService {\n\n  constructor(private http: HttpClient) { }\n\n  getChipset(options: {}): Observable<HttpResponse<Object>> {\n    const url = `${urls.chipSet.updateChipSet}`;\n    return this.http.get<HttpResponse<Object>>(url, options);\n  }\n}\n","export function tokenGetter() {\n  const authValues: any = JSON.parse(localStorage.getItem('authValues'));\n  if (authValues) {\n    return localStorage.getItem(authValues.jwtTokenKey);\n  }\n}\nexport function equalIgnoreCase(string1, string2, ignoreCase, useLocale) {\n    if (ignoreCase) {\n        if (useLocale) {\n            string1 = string1.toLocaleLowerCase();\n            string2 = string2.toLocaleLowerCase();\n        }\n        else {\n            string1 = string1.toLowerCase();\n            string2 = string2.toLowerCase();\n        }\n    }\n    return string1 === string2;\n}\n","export function tokenGetter() {\n  const authValues: any = JSON.parse(localStorage.getItem('authValues'));\n  if (authValues) {\n    return localStorage.getItem(authValues.jwtTokenKey);\n  }\n}\n\nexport class WDTSUtility {\n\n  static validateNumberField(_event, maxLength?, value?) {\n    let valLen;\n    if (_event) {\n      if (_event.currentTarget) {\n        valLen = _event.currentTarget.value.length;\n      } else if (_event.target) {\n        valLen = _event.target.value.length;\n      }\n    } else {\n      valLen = (value && value.length);\n    }\n    if (valLen === undefined || maxLength === undefined) {\n      return (_event.keyCode >= 48 && _event.keyCode <= 57 );\n    }\n    return ( valLen < maxLength && _event.keyCode >= 48 && _event.keyCode <= 57 );\n  }\n\n  static numberWithDecimal(event): boolean {\n    let dotCount = 0;\n    const charCode = (event.which) ? event.which : event.keyCode;\n    const checkNumberOnly = (event.target.value);\n    if (charCode === 46) {\n      dotCount += 1;\n      const numericCheck = (event.target.value).toString();\n      if (numericCheck.includes('.')) {\n        dotCount += 1;\n      }\n      if (dotCount > 1) {\n        dotCount = 0;\n        return false;\n      }\n    }\n    if (charCode > 31 && (charCode < 45 || charCode > 57 || charCode === 47)) {\n      return false;\n    }\n    if (checkNumberOnly != null) {\n      const numeric = (event.target.value).toString();\n      if (numeric.includes('.')) {\n        const checkNumeric = numeric.split('.');\n        if (checkNumeric.length > 2) {\n          return false;\n        }\n        const checkString = checkNumeric[1].split('');\n        if (checkString.length > 1) {\n          const cursorPosition = event.target.selectionStart;\n          const dotPosition = event.target.value.indexOf('.')\n          if (cursorPosition > dotPosition) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  static equalIgnoreCase(string1, string2, ignoreCase, useLocale) {\n    if (ignoreCase) {\n      if (useLocale) {\n        string1 = string1.toLocaleLowerCase();\n        string2 = string2.toLocaleLowerCase();\n      } else {\n        string1 = string1.toLowerCase();\n        string2 = string2.toLowerCase();\n      }\n    }\n    return string1 === string2;\n  }\n\n  static isNonZeroRegex(evt, maxlen) {\n    let isNonZeroValue = false;\n    if (evt.length && maxlen) {\n      if (evt.length <= maxlen && /^\\d+$/.test(evt)) {\n        const regEx = /^0+$/;\n        isNonZeroValue = regEx.test(evt);\n      }\n    } else {\n      if (/^\\d+$/.test(evt)) {\n        const regEx = /^0+$/;\n        isNonZeroValue = regEx.test(evt);\n      }\n    }\n    return isNonZeroValue;\n  }\n}\n\n/**\n * @description: this function flat the nested object and return\n * Array containg object: Leve1 object.\n * @param obj\n * @param arr\n */\nexport function flatObject(obj, arr) {\n  for (let item in obj) {\n    if (typeof obj[item] === 'object' && obj[item].length > 0) {\n      flatObject(obj[item], arr);\n    } else {\n      if (!Array.isArray(obj[item])) {\n        arr.push(obj[item]);\n      }\n    }\n  }\n  return arr;\n}\n\n/**\n * check if object properties is equal\n */\n\nexport function isEquivalent(a, b) {\n  // Create arrays of property names\n  const aProps = Object.getOwnPropertyNames(a);\n  const bProps = Object.getOwnPropertyNames(b);\n\n  // If number of properties is different,\n  // objects are not equivalent\n  if (aProps.length !== bProps.length) {\n    return false;\n  }\n\n  for (let i = 0; i < aProps.length; i++) {\n    const propName = aProps[i];\n\n    // If values of same property are not equal,\n    // objects are not equivalent\n    if (a[propName] !== b[propName]) {\n      return false;\n    }\n  }\n\n  // If we made it this far, objects\n  // are considered equivalent\n  return true;\n}\n","/**\n * Created by akgupta on 12/14/18.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChildren,\n    SimpleChange,\n    ElementRef,\n    ViewChild,\n    AfterViewChecked\n} from '@angular/core';\nimport {FilterComponent} from '../filter/filter.component';\nimport {OWL_DATE_TIME_FORMATS} from 'ng-pick-datetime';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {equalIgnoreCase} from '../utils';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport {WDTSUtility} from '../utils/input-validation-utils';\n\nexport const MY_CUSTOM_FORMATS = {\n    fullPickerInput: {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n    },\n    datePickerInput: {year: 'numeric', month: 'short', day: 'numeric', hour12: false},\n    timePickerInput: {hour: 'numeric', minute: 'numeric', hour12: false},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n};\n\n@Component({\n    selector: 'app-tables',\n    templateUrl: './app-tables.component.html',\n    styleUrls: ['./app-tables.component.scss'],\n    providers: [\n        {provide: OWL_DATE_TIME_FORMATS, useValue: MY_CUSTOM_FORMATS}\n    ],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ]\n})\n\nexport class AppTablesComponent implements OnInit, OnChanges, AfterViewChecked {\n    @ViewChild('input01') input01: ElementRef;\n    @ViewChild('input02') input02: ElementRef;\n    @ViewChild('input03') input03: ElementRef;\n    @ViewChild('input04') input04: ElementRef;\n    @ViewChild('domdateTime4') domdateTime4;\n    rowHeader = [];\n    isCheckedAll = false;\n    sortObj = {\n        active: '',\n        sortField: '',\n        sortOrder: ''\n    };\n    selectedFilter = {};\n    perPageOption = [10, 20, 30, 50, 100];\n    perPageLimit;\n    isFilterOpen = false;\n    loading = false;\n    noDataAvailable = false;\n    bulkUpdateActive = false;\n    fromTime: Date;\n    toTime: Date;\n    toMinTime: Date;\n    toMaxTime: Date;\n    fromToFilter = [];\n    fromTimeArr = [];\n    toTimeArr = [];\n    promoFromDate: Date;\n    promoToDate: Date;\n    minStartTime: Date;\n    valueTextAutofill;\n    isDblClicked = false;\n    indexDblClicked: number;\n    changedLabel: string;\n    editedCol: string;\n    editableColumnWidth = false;\n    disableFilterButton = true;\n    headerSelected: string;\n    expandedElement;\n    clearFilterFlag;\n\n    @ViewChildren(FilterComponent) filterComponents: QueryList<FilterComponent>;\n\n    @Input() tableRows = [];\n    @Input() tableHeaders = [];\n    @Input() totalRecords = -1;\n    @Input() filterOptions = [];\n    @Input() editableTable = false;\n    @Input() tableTitle = 'application.app.ALERTS_LABELS.ALERTS';\n    @Input() isPitClicked = false;\n    @Input() alternateTitle ?;\n    @Input() tableTitleNotRequired ?;\n    @Input() gamingDay ?;\n    @Input() nodeType: string;\n    @Input() tabName: string;\n    @Input() description: string;\n    @Input() playerPositions: string;\n    @Input() hidePagination: boolean;\n    @Input() tableExpandableRows = [];\n    @Input() hideFilters: boolean;\n    @Input() showFilters: boolean;\n    @Input() inputStart: number;\n    @Input() inputCurrentPage: number;\n    @Input() inputLimit: number;\n    @Output() checkAll = new EventEmitter();\n    @Output() checkBoxEvent = new EventEmitter();\n    @Output() checkBoxAllEvent = new EventEmitter();\n    @Output() node = new EventEmitter();\n    @Output() filter = new EventEmitter();\n    @Output() filterChange = new EventEmitter();\n    @Output() pagination = new EventEmitter();\n    @Output() sort = new EventEmitter();\n    math = Math;\n    deletePPId;\n    textAutofillControl = new FormControl();\n    options: string[];\n    filteredOptionsAutofillControl: Observable<string[]>;\n\n    constructor(public snackBar: MatSnackBar, public translate: TranslateService) {\n        // this.perPageLimit = this.perPageOption[0];\n    }\n\n    ngOnInit() {\n        if (this.tableHeaders) {\n            this.setRowHeaders();\n        }\n        if (this.filterOptions) {\n            this.setSelectedFilters();\n        }\n        this.filteredOptionsAutofillControl = this.textAutofillControl.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value))\n            );\n    }\n\n    ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n        this.isCheckedAll = false;\n        // If condition is for GR-2846: which shows the loader while API request, once we get response loader will be hidden.\n        if (changes && changes.tableRows && (changes.tableRows.currentValue !== changes.tableRows.previousValue)) {\n            this.isCheckedAll = false;\n            if (typeof this.totalRecords === 'undefined') {\n                this.loading = true;\n            } else if (this.totalRecords === 0) {\n                this.noDataAvailable = true;\n                this.loading = false;\n            } else {\n                this.noDataAvailable = this.totalRecords === 0;\n                this.loading = this.tableRows && this.tableRows.length === 0 && !this.noDataAvailable;\n\n                if (this.tableHeaders && (!this.rowHeader || this.rowHeader.length === 0 || this.rowHeader.length !== this.tableHeaders.length)) {\n                    this.tableHeaders.map((item) => {\n                        if (this.rowHeader.indexOf(item.title) === -1) {\n                            this.rowHeader.push(item.title);\n                        }\n                    });\n                }\n                this.updateRowStatus();\n                this.setSelectedFilters();\n            }\n        }\n    }\n\n    private _filter(value: string): string[] {\n        const filterValue = value.toString().toLowerCase();\n        if (this.options) {\n            return this.options.filter(option => option.toString().toLowerCase().includes(filterValue));\n        }\n    }\n\n    checkForDisable(event) {\n        let isChanged = false;\n        if (this.textAutofillControl.value && this.textAutofillControl.value !== '') {\n            this.disableFilterButton = false;\n        }\n        if (!event || event.length === 0) {\n            this.deletePPId = true;\n            delete this.selectedFilter['ccasIds'];\n            this.valueTextAutofill = '';\n            isChanged = true;\n        }\n        if (isChanged) {\n            this.filterChange.emit(this.selectedFilter);\n        }\n    }\n\n    updateRowStatus() {\n        if (this.tableRows && this.tableRows.length) {\n            this.tableRows.map((node) => {\n                node.checked = this.isCheckedAll;\n                if (typeof node.alertSeverity === 'undefined') {\n                    node.alertSeverity = 'NONE';\n                }\n            });\n        }\n    }\n\n    setRowHeaders() {\n        this.rowHeader = [];\n        this.tableHeaders.map((item) => {\n            if (item.title) {\n                if (this.rowHeader.indexOf(item.title) === -1) {\n                    this.rowHeader.push(item.title);\n                }\n\n            }\n            if (item.sortFirst) {\n                this.sortObj = {\n                    active: item.title,\n                    sortField: item.title,\n                    sortOrder: item.sortOrder || 'asc'\n                };\n            }\n            if (item.permission === undefined || item.permission === null) {\n                item.permission = true;\n            }\n        });\n    }\n\n    setSelectedFilters() {\n        this.filterOptions.map((filter) => {\n            if (filter.selectedOptions.length && !this.clearFilterFlag) {\n                this.selectedFilter[filter.column] = filter.selectedOptions;\n                this.disableFilterButton = false;\n                if (filter.column === 'minStartTime' && !this.minStartTime) {\n                    this.minStartTime = new Date(filter.selectedOptions);\n                }\n                if (!this.deletePPId && filter.column.toLowerCase() === 'ccasids') {\n                    this.valueTextAutofill = filter.selectedOptions;\n                }\n            }\n        });\n        this.filterOptions = JSON.parse(JSON.stringify(this.filterOptions));\n        if (this.filterOptions && this.filterOptions.length > 0) {\n            if (this.filterOptions.find(o => o.column.toLowerCase() === 'ccasids')) {\n                this.options = this.filterOptions.find(o => o.column.toLowerCase() === 'ccasids').options;\n                this.valueTextAutofill = this.filterOptions.find(ob => ob.column=='ccasIds').selectedOptions\n            }\n        }\n    }\n\n    checkAllRows(): void {\n        const freezedRows = this.tableRows.filter(elm => {\n            return ( elm['isDisable'] && elm['isDisable'] === true );\n        });\n        if (freezedRows.length === this.tableRows.length) {\n            return;\n        } else {\n            this.isCheckedAll = !this.isCheckedAll;\n            this.bulkUpdateActive = this.isCheckedAll;\n            this.tableRows.map((node) => {\n                node.checked = this.isCheckedAll;\n            });\n            this.checkAll.emit(this.tableRows);\n            this.checkBoxAllEvent.emit(this.isCheckedAll);\n        }\n    }\n\n    bulkCheckBoxClickEvt(e): boolean {\n        const freezedRows = this.tableRows.filter(elm => {\n            return ( elm['isDisable'] && elm['isDisable'] === true );\n        });\n        if (freezedRows.length === this.tableRows.length) {\n            this.unCheckAllRows();\n            e.preventDefault();\n            return false;\n        }\n        /* else {this.checkAllRows();}*/\n    }\n\n    unCheckAllRows(): void {\n        this.isCheckedAll = false;\n        this.bulkUpdateActive = this.isCheckedAll;\n        this.tableRows.map((node) => {\n            node.checked = this.isCheckedAll;\n        });\n        this.checkBoxAllEvent.emit(this.isCheckedAll);\n    }\n\n    updateEventObj(obj) {\n        if (obj && obj.isDisable === true) {\n            return;\n        } else {\n            this.node.emit(obj);\n        }\n    }\n\n    sortData(obj) {\n        this.resetValues();\n        this.editableColumnWidth = false;\n        if (obj.active && obj.direction) {\n            this.sortObj = obj;\n            this.sortObj.sortOrder = obj.direction;\n            this.sortObj.sortField = obj.active;\n        }\n        this.sort.emit(obj);\n    }\n\n    updateFilter(obj) {\n        this.disableFilterButton = false;\n        this.selectedFilter[obj.columnName] = obj.selectedOption;\n        this.filterChange.emit(this.selectedFilter);\n    }\n\n    applyFilter() {\n        this.loading = true;\n        this.clearFilterFlag = false;\n        // this.disableFilterButton = true;\n        const obj = {\n            selectedFilter: this.selectedFilter,\n            state: 'apply'\n        };\n        if (this.fromToFilter.length) {\n            if (this.fromToFilter[0] && this.fromToFilter[0] !== null) {\n                obj.selectedFilter['fromDate'] = new Date(this.fromToFilter[0]).toISOString();\n            }\n            if (this.fromToFilter[1] && this.fromToFilter[1] !== null) {\n                obj.selectedFilter['toDate'] = new Date(this.fromToFilter[1]).toISOString();\n            }\n        }\n        /*From Time Filter*/\n        if (this.fromTime && this.fromTime !== null) {\n            this.fromTimeArr = new Date(this.fromTime).toTimeString().split(':');\n            obj.selectedFilter['minStartTime'] = this.fromTimeArr[0] + ':' + this.fromTimeArr[1];\n        }\n        /*To Time Filter*/\n        if (this.toTime && this.toTime !== null) {\n            this.toTimeArr = new Date(this.toTime).toTimeString().split(':');\n            obj.selectedFilter['maxStartTime'] = this.toTimeArr[0] + ':' + this.toTimeArr[1];\n        }\n        if (this.promoFromDate && this.promoFromDate !== null) {\n            obj.selectedFilter['fromDate'] = new Date(this.promoFromDate).toISOString();\n        }\n\n        if (this.promoToDate && this.promoToDate !== null) {\n            obj.selectedFilter['toDate'] = new Date(this.promoToDate).toISOString();\n        }\n\n        if (this.valueTextAutofill && this.valueTextAutofill !== null) {\n            obj.selectedFilter['ccasIds'] = this.valueTextAutofill;\n        }\n\n        if (this.minStartTime && this.minStartTime !== null) {\n            obj.selectedFilter['minStartTime'] = this.timeForLocalGamingDay(this.minStartTime).toISOString();\n        }\n        this.filter.emit(obj);\n    }\n\n    timeForLocalGamingDay(time): Date {\n        let localGamingDay;\n        if (this.gamingDay) {\n            localGamingDay = this.gamingDay.toString();\n        }\n\n        const gamingDayAry = localGamingDay.split('-');\n        return new Date(Number(gamingDayAry[0]), Number(gamingDayAry[1]) - 1, Number(gamingDayAry[2]),\n            time.getHours(), time.getMinutes());\n    }\n\n    clearFilter() {\n        this.clearFilterFlag = true;\n        this.loading = true;\n        this.noDataAvailable = false;\n        this.disableFilterButton = true;\n        this.fromToFilter = [];\n        this.selectedFilter = {};\n        this.filter.emit({\n            selectedFilter: [],\n            state: 'clear'\n        });\n        // @ts-ignore\n        this.promoFromDate = '';\n        // @ts-ignore\n        this.promoToDate = '';\n        // @ts-ignore\n        this.valueTextAutofill = '';\n        // @ts-ignore\n        this.minStartTime = '';\n        // @ts-ignore\n        this.fromTime = '';\n        // @ts-ignore\n        this.toTime = '';\n        requestAnimationFrame(() => {\n            this.filterComponents.forEach(filterComponent => {\n                filterComponent.options = filterComponent.filterConfigOption.selectedOptions;\n            });\n        });\n    }\n\n    updatePagination(obj) {\n        this.inputStart = obj.start;\n        this.inputCurrentPage = obj.currentPage;\n        this.loading = true;\n        this.inputLimit = obj.limit;\n        this.perPageLimit = obj.limit;\n        this.unCheckAllRows();\n        this.pagination.emit(obj);\n    }\n\n    bulkStatusUpdate(status) {\n        const obj = {obj: [], status: status, type: 'bulk-update'};\n        this.tableRows.forEach((item) => {\n            if (item.checked) {\n                obj.obj.push(item);\n            }\n        });\n        this.unCheckAllRows();\n        this.node.emit(obj);\n    }\n\n    updateCheckedStatus(isDisable, _index, elem) {\n        if (isDisable) {\n            return;\n        }\n        requestAnimationFrame(() => {\n            if (!elem.checked) {\n                elem.checked = true;\n                this.bulkUpdateActive = true;\n                this.isCheckedAll = true;\n                for (let i = 0; i < this.tableRows.length; i++) {\n                    if (!this.tableRows[i].checked) {\n                        this.isCheckedAll = false;\n                        break;\n                    }\n                }\n            } else {\n                this.isCheckedAll = false;\n                elem.checked = false;\n                this.bulkUpdateActive = false;\n                for (let i = 0; i < this.tableRows.length; i++) {\n                    if (this.tableRows[i].checked) {\n                        this.bulkUpdateActive = true;\n                        break;\n                    }\n                }\n            }\n            if (!elem['index']) {\n                elem['index'] = _index;\n            }\n            this.checkBoxEvent.emit(elem);\n        });\n    }\n\n    cancelUpdate(elem): void {\n        if (elem.hasOwnProperty('isEdited')) {\n            delete elem.isEdited;\n        }\n        this.resetValues();\n    }\n\n    resetValues() {\n        this.headerSelected = '';\n        this.isDblClicked = false;\n        this.indexDblClicked = -1;\n        this.editedCol = '';\n        this.editableColumnWidth = !this.editableColumnWidth;\n    }\n\n    getLabel(oldName, value) {\n        this.changedLabel = this.trimWhiteSpace(value);\n    }\n\n    labelDblClicked(isDisable, index, element, header, col?: string) {\n        const headerType = header.type;\n        if (isDisable) {\n            return false;\n        }\n        if (this.editedCol && this.indexDblClicked) {\n            const colAlreadyEdited = this.tableRows[this.indexDblClicked];\n            if (colAlreadyEdited.hasOwnProperty('isEdited')) {\n                delete colAlreadyEdited.isEdited;\n            }\n        }\n        this.headerSelected = headerType;\n        this.isDblClicked = true;\n        this.indexDblClicked = index;\n        this.editedCol = col;\n        element.isEdited = true;\n        this.editableColumnWidth = !this.editableColumnWidth;\n        if (col === 'shortName') {\n            window.setTimeout(() => {\n                this.input01.nativeElement.focus();\n            });\n        } else if (col === 'label') {\n            window.setTimeout(() => {\n                this.input02.nativeElement.focus();\n            });\n        } else if (header.validation) {\n            window.setTimeout(() => {\n                this.input04.nativeElement.focus();\n            });\n        } else {\n            window.setTimeout(() => {\n                this.input03.nativeElement.focus();\n            });\n        }\n    }\n\n    updateLabel(elem, col?: string) {\n        this.cancelUpdate(elem);\n        if (col === 'name' || col === 'shortName' || col === 'host' || col === 'label') {\n            if (this.changedLabel !== '') {\n                this.updateEventObj({\n                    type: 'changeLabel', obj: {\n                        changedLabel: this.changedLabel,\n                        elem: elem,\n                        column: col\n                    }\n                });\n            } else {\n                this.throwValueError(col);\n            }\n        } else {\n            this.updateEventObj({\n                type: 'changeLabel', obj: {\n                    changedLabel: this.changedLabel,\n                    elem: elem,\n                    column: col\n                }\n            });\n        }\n    }\n\n    throwValueError(col) {\n        if (col === 'name' || col === 'shortName' || col === 'host' || col === 'label') {\n            this.snackBar.open(this.translate.instant('INPUT_CANNOT_BE_BLANK'), '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__info'\n            });\n        }\n    }\n\n    setPath(colValue) {\n        const path = colValue.replace('[', '').replace(']', '');\n        const apath = path.split(',');\n        let absolutePath = '';\n        for (let i = apath.length - 1; i >= 0; i--) {\n            absolutePath = absolutePath + '/' + apath[i];\n        }\n        return absolutePath;\n    }\n\n    getText(value) {\n        let textValue;\n        if (typeof value === 'undefined' || value === '') {\n            textValue = '--';\n        } else {\n            textValue = value;\n        }\n        return textValue;\n    }\n\n    isUndefinedValue(value) {\n        return typeof value === 'undefined';\n    }\n\n    trimWhiteSpace(x): string {\n        return x.replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    numberFormatterRequired(col): boolean {\n        let needsFormatter = false;\n        if (col === 'chipsetId' || col === 'casinoSiteId' || col === 'gamingCompanyId') {\n        } else {\n            needsFormatter = true;\n        }\n        return needsFormatter;\n    }\n\n    validateInputs(event, field) {\n        switch (field) {\n            case 'fromTime':\n                this.toMinTime = new Date(this.fromTime);\n                this.toMinTime.setTime(this.toMinTime.getTime() + 60 * 1000);\n                this.toMaxTime = new Date();\n                this.toMaxTime.setHours(24, 0, 0, 0);\n                this.toTime = this.fromTime;\n                break;\n        }\n    }\n\n    /* Helper function(s) */\n    isArrayEmpty(_array) {\n        let retVal = true;\n        if (Array.isArray(_array) && typeof _array !== 'undefined'\n            && _array !== null && _array.length !== null && _array.length > 0) {\n            retVal = false;\n        }\n        return retVal;\n    }\n\n    getRoundedNum(value) {\n        const reqValue = parseFloat(value);\n        return Math.round(reqValue);\n    }\n\n    concatEmpId(headerRowElem, empCode) {\n        let retval = headerRowElem;\n        if (this.isUndefinedValue(empCode)) {\n            retval = headerRowElem;\n        } else {\n            retval = headerRowElem + ' (' + empCode + ')';\n        }\n        return retval;\n    }\n\n    /* Check for userId: 1  firstName: \"PP\"  lastName: \"Master\"  userName: \"ppmaster\"  employeeNumber: \"0\"*/\n    isPPMasterRow(ELEM) {\n        if (ELEM) {\n            return (ELEM.employeeNumber === '0' && equalIgnoreCase(ELEM.userName, 'ppmaster', true, true) );\n        } else {\n            return false;\n        }\n    }\n\n    getCustomTranslatedText(text: string, separator) {\n        let temp;\n        if (!text) {\n            return '';\n        }\n        if (text.indexOf(separator) !== -1) {\n            temp = text.split(separator);\n        } else {\n            return this.translate.instant(text.toUpperCase());\n        }\n        if (temp) {\n            for (let i = 0; i < temp.length; i++) {\n                temp[i] = this.translate.instant(temp[i]);\n            }\n        }\n        return temp ? temp.join(separator) : '';\n    }\n\n    loadDefaultImage(event) {\n        event.target.src = '/assets/images/player.png';\n    }\n\n    restrictNumberField(_evt, maxLen?, val?) {\n        return (WDTSUtility.validateNumberField(_evt, undefined, _evt.currentTarget.value));\n    }\n\n    validateInputsTime() {\n        if (this.domdateTime4 && this.domdateTime4.nativeElement.value.indexOf('24:') != -1) {\n            this.domdateTime4.nativeElement.value = this.domdateTime4.nativeElement.value.replace('24:', '00:');\n        }\n    }\n\n    ngAfterViewChecked() {\n        if (this.domdateTime4 && this.domdateTime4.nativeElement.value.indexOf('24:') != -1) {\n            this.domdateTime4.nativeElement.value = this.domdateTime4.nativeElement.value.replace('24:', '00:');\n        }\n    }\n\n    getAnonymousTranslatedVal() {\n        return this.translate.instant('ANONYMOUS');\n    }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {TableFiltersInterface} from '../interface/table-filters.interface';\n\n@Injectable()\nexport class AppTablesService {\n    reqObj = {\n        observe: 'response',\n        params: {\n            start: 1,\n            limit: 10\n        }\n    };\n\n    initPagination = new EventEmitter();\n\n    filterConfigOptions: Array<TableFiltersInterface> = [];\n\n    clearPreFilters() {\n        for (const key in this.reqObj.params) {\n            if (this.reqObj.params.hasOwnProperty(key) &&\n                ['sortOrder', 'sortField', 'start', 'limit', 'reqFilter'].indexOf(key) === -1) {\n                delete this.reqObj.params[key];\n            }\n        }\n    }\n\n    clearFilter() {\n        this.clearPreFilters();\n        return this.filterConfigOptions.map((config) => {\n            config.selectedOptions = [];\n            return config;\n        });\n    }\n\n    setFilterOptions(options) {\n        for (const key in options) {\n            if (options.hasOwnProperty(key)) {\n                this.filterConfigOptions = this.filterConfigOptions.map((config) => {\n                    if (config.column === key) {\n                        config.selectedOptions = [...options[key]];\n                    }\n                    return config;\n                });\n                this.reqObj.params[key] = options[key] instanceof Array ? options[key].join(',') : options[key];\n            }\n        }\n        this.clearEmptyParams();\n    }\n\n    clearEmptyParams() {\n        for (const key in this.reqObj.params) {\n            if (this.reqObj.params.hasOwnProperty(key) &&\n                ['sortOrder', 'sortField', 'start', 'limit', 'reqFilter'].indexOf(key) === -1 &&\n                !this.reqObj.params[key].length) {\n                delete this.reqObj.params[key];\n            }\n        }\n    }\n\n    updateFilter(obj) {\n        switch (obj.state) {\n            case 'apply':\n                this.setFilterOptions(obj.selectedFilter);\n                break;\n            case 'clear':\n                this.clearFilter();\n                break;\n        }\n        this.initPagination.next();\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output} from '@angular/core';\nimport {AppTablesService} from '../app-tables/app-tables.service';\nimport {UtilityService} from '../services/utility.service';\n\n@Component({\n    selector: 'app-pagination',\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() perPageOption: Array<number>;\n    @Input() totalRecord: number;\n    @Input() inputStart: number;\n    @Input() inputCurrentPage: number;\n    @Input() inputLimit: number;\n    @Input() isTableGrid ?= false;\n    @Output() EMIT_PAGINATION = new EventEmitter<any>();\n\n    start = 1;\n    limit = 10;\n    currentPage = 1;\n    totalPage = 1;\n    paginationSubscriber;\n\n    constructor(\n        private tableService: AppTablesService,\n        private utilityService: UtilityService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.start =  (this.inputStart) ? this.inputStart : this.start;\n        this.currentPage = (this.inputCurrentPage) ? this.inputCurrentPage : this.currentPage;\n        this.limit = this.inputLimit ? this.inputLimit : this.isTableGrid ? 5 : 10;\n        this.utilityService.updatePageNumbers.subscribe(() => {\n            this.firstPage();\n        });\n        this.handleSubscription();\n    }\n\n    ngOnChanges() {\n        this.limit = this.inputLimit ? this.inputLimit : this.isTableGrid ? 5 : this.limit;\n        this.totalPage = Math.ceil(this.totalRecord / this.limit) || 1;\n    }\n\n    handleSubscription() {\n        this.paginationSubscriber = this.tableService.initPagination\n            .subscribe(() => {\n                this.firstPage();\n            });\n    }\n\n    nextPage(): void {\n        this.start = this.start + this.limit;\n        this.currentPage = this.currentPage + 1;\n        this.emitPagination();\n    }\n\n    previousPage(): void {\n        this.start = this.start - this.limit;\n        this.currentPage = this.currentPage - 1;\n        this.emitPagination();\n    }\n\n    firstPage(): void {\n        this.start = 1;\n        this.currentPage = 1;\n        this.emitPagination();\n    }\n\n    lastPage(): void {\n        this.start = (Math.ceil(this.totalRecord / this.limit) - 1) * this.limit + 1;\n        this.currentPage = Math.ceil(this.totalRecord / this.limit);\n        this.emitPagination();\n    }\n\n    changePageLimit(limit): void {\n        this.limit = limit;\n        this.currentPage = 1;\n        this.start = 1;\n        this.totalPage = Math.ceil(this.totalRecord / this.limit);\n        this.emitPagination();\n    }\n\n    goToAnyPage(event, currntPage): void {\n\n\n        if (event.type === 'keydown' && event.keyCode === 13) {\n            if (this.currentPage > this.totalPage) {\n                this.start = (this.totalPage - 1) * this.limit + 1;\n                this.currentPage = this.totalPage;\n                this.emitPagination();\n            } else {\n                if (currntPage > 0) {\n                    this.start = (currntPage - 1) * this.limit + 1;\n                    this.currentPage = parseInt(currntPage, 10);\n                } else {\n                    this.start = 1;\n                    this.currentPage = 1;\n                }\n                this.emitPagination();\n            }\n        } else if (event.type === 'blur') {\n            if (this.currentPage > this.totalPage) {\n                this.start = (this.totalPage - 1) * this.limit + 1;\n                this.currentPage = this.totalPage;\n                this.emitPagination();\n            } else {\n                if (currntPage > 0) {\n                    this.start = (currntPage - 1) * this.limit + 1;\n                    this.currentPage = parseInt(currntPage, 10);\n                } else {\n                    this.start = 1;\n                    this.currentPage = 1;\n                }\n                this.emitPagination();\n            }\n        }\n    }\n\n    emitPagination(): void {\n        const paginationObj = {start: this.start, limit: this.limit, currentPage: this.currentPage};\n        this.EMIT_PAGINATION.emit(paginationObj);\n    }\n\n    ngOnDestroy(): void {\n        this.paginationSubscriber.unsubscribe();\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {AppTablesComponent} from './app-tables.component';\nimport {MaterialComponentModule} from '../material-component/material-component.module';\nimport {CommonModule} from '@angular/common';\nimport {CommonTranslationModule} from '../common-translation/common-translation.module';\nimport {FilterComponent} from '../filter/filter.component';\nimport {PaginationComponent} from '../pagination/pagination.component';\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from 'ng-pick-datetime';\nimport {AppTablesService} from './app-tables.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport {WdtsSpecialCharDirective} from '../directives/wdts-special-char.directive';\nimport {WdtsSpecialCharPipe} from '../pipes/wdts-special-char.pipe';\nimport {AmountFormatPipe} from \"../pipes/amount-format.pipe\";\n\n@NgModule({\n    imports: [\n        MaterialComponentModule,\n        CommonModule,\n        CommonTranslationModule,\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule,\n        MatProgressSpinnerModule,\n        MatSortModule\n    ],\n    declarations: [\n        AppTablesComponent,\n        FilterComponent,\n        PaginationComponent\n    ],\n    exports: [\n        AppTablesComponent,\n        FilterComponent,\n        PaginationComponent\n    ],\n    providers: [AppTablesService]\n})\nexport class AppTablesModule {\n\n}\n","/*\n * Topology Drag-Drop Item database, it can build a tree structured Json object.\n * Each node in Json object represents a drag drop item or a category(different item may be nested).\n * If a node is a category(different item may be nested), it has children items and new items\n * can be added under the category(different item may be nested).\n */\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n/*\n * Node for drag drop item\n */\nexport class DragDropItemNode {\n    children: DragDropItemNode[];\n    item: string;\n    dataSourceName: string;\n    nodeId: number;\n    parentName: string;\n}\n\n/* Flat drag drop item node with expandable and level information */\nexport class DragDropItemFlatNode {\n    item: string;\n    level: number;\n    expandable: boolean;\n    dataSourceName: string;\n    nodeId: number;\n    parentName: string;\n}\n\nconst ASSIGNEDDATA = new Map();\nASSIGNEDDATA.set(3, 4);\n\n@Injectable()\nexport class TreeDragDropItemDataBase {\n    dataChangeAssigned = new BehaviorSubject<DragDropItemNode[]>([]);\n    dataChangeUnassigned = new BehaviorSubject<DragDropItemNode[]>([]);\n    dataChangeAG = new BehaviorSubject<DragDropItemNode[]>([]);\n    dataChangeVG = new BehaviorSubject<DragDropItemNode[]>([]);\n    data(node: DragDropItemNode): DragDropItemNode[] {\n        // console.log('data::', node.dataSourceName);\n        if (node.dataSourceName === 'assignednode') {\n            return this.dataChangeAssigned.value;\n        } else if (node.dataSourceName === 'unassignednode') {\n            return this.dataChangeUnassigned.value;\n        } else if ( node.dataSourceName === 'accessgroup') {\n            return this.dataChangeAG.value;\n        } else if ( node.dataSourceName === 'virtualgroup') {\n            return this.dataChangeVG.value;\n        }\n    }\n\n    /**\n     * if tree.expandAll called and get an erro of dataNodes we need to set\n        this.treeControl.dataNodes = data; in all four group.\n     * @param data\n     * @param node\n     */\n    dispatchNextData(data: DragDropItemNode[], node: DragDropItemNode) {\n        // console.log('dispatchNextData::', data, node.dataSourceName);\n        if ( node.dataSourceName) {\n            if (node.dataSourceName === 'assignednode') {\n                this.dataChangeAssigned.next(data);\n            } else if (node.dataSourceName === 'unassignednode') {\n                this.dataChangeUnassigned.next(data);\n            } else if ( node.dataSourceName === 'accessgroup') {\n                this.dataChangeAG.next(data);\n            } else if ( node.dataSourceName === 'virtualgroup') {\n                this.dataChangeVG.next(data);\n            }\n        }\n    }\n\n    constructor() {\n        this.initialize();\n    }\n\n    initialize() {\n        // Build the tree nodes from Json object. The result is a list of `DragDropItemNode` with nested\n        //     file node as children.\n        const dataAssigned = this.buildFileTree(ASSIGNEDDATA, 0, 'assignednode');\n        this.dataChangeAssigned.next(dataAssigned);\n\n    }\n\n    /*\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `DragDropItemNode`.\n     */\n    buildFileTree(obj: object, level: number, dataSourceName: string): DragDropItemNode[] {\n        return Object.keys(obj).reduce<DragDropItemNode[]>((accumulator, key) => {\n            const value = obj[key];\n            const node = new DragDropItemNode();\n            node.item = key;\n            node.dataSourceName = dataSourceName;\n            if (value != null) {\n                if (typeof value === 'object') {\n                    node.children = this.buildFileTree(value, level + 1, node.dataSourceName);\n                } else {\n                    node.item = value;\n                }\n            }\n\n            return accumulator.concat(node);\n        }, []);\n    }\n\n    /* Add an item to drag drop list */\n    insertItem(parent: DragDropItemNode, name: string): DragDropItemNode {\n        if (!parent.children) {\n            parent.children = [];\n        }\n        const newItem = { item: name, dataSourceName: parent.dataSourceName } as DragDropItemNode;\n        parent.children.push(newItem);\n        this.dispatchNextData(this.data(newItem), newItem);\n        return newItem;\n    }\n\n    insertItemAbove(node: DragDropItemNode, name: string): DragDropItemNode {\n        const parentNode = this.getParentFromNodes(node);\n        const newItem = { item: name, dataSourceName: node.dataSourceName } as DragDropItemNode;\n        if (parentNode != null) {\n            parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n        } else {\n            this.data(node).splice(this.data(node).indexOf(node), 0, newItem);\n        }\n        this.dispatchNextData(this.data(newItem), newItem);\n        return newItem;\n    }\n\n    insertItemBelow(node: DragDropItemNode, name: string): DragDropItemNode {\n        const parentNode = this.getParentFromNodes(node);\n        const newItem = { item: name, dataSourceName: node.dataSourceName } as DragDropItemNode;\n        if (parentNode != null) {\n            parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n        } else {\n            this.data(node).splice(this.data(node).indexOf(node) + 1, 0, newItem);\n        }\n        this.dispatchNextData(this.data(newItem), newItem);\n        return newItem;\n    }\n\n    getParentFromNodes(node: DragDropItemNode): DragDropItemNode {\n        for (let i = 0; i < this.data(node).length; ++i) {\n            const currentRoot = this.data(node)[i];\n            const parent = this.getParent(currentRoot, node);\n            if (parent != null) {\n                return parent;\n            }\n        }\n        return null;\n    }\n\n    getParent(currentRoot: DragDropItemNode, node: DragDropItemNode): DragDropItemNode {\n        if (currentRoot.children && currentRoot.children.length > 0) {\n            for (let i = 0; i < currentRoot.children.length; ++i) {\n                const child = currentRoot.children[i];\n                if (child === node) {\n                    return currentRoot;\n                } else if (child.children && child.children.length > 0) {\n                    const parent = this.getParent(child, node);\n                    if (parent != null) {\n                        return parent;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    updateItem(node: DragDropItemNode, name: string) {\n        node.item = name;\n        node.dataSourceName = node.dataSourceName\n        this.dispatchNextData(this.data(node), node);\n    }\n\n    deleteItem(node: DragDropItemNode) {\n        this.deleteNode(this.data(node), node);\n        this.dispatchNextData(this.data(node), node);\n    }\n\n    copyPasteItem(from: DragDropItemNode, to: DragDropItemNode): DragDropItemNode {\n        // console.log('in copyPasteItem to is', to, 'from is', from);\n        const newItem = this.insertItem(to, from.item);\n        if (from.children) {\n            from.children.forEach(child => {\n                this.copyPasteItem(child, newItem);\n            });\n        }\n        return newItem;\n    }\n\n    copyPasteItemAbove(from: DragDropItemNode, to: DragDropItemNode): DragDropItemNode {\n        // console.log('in copyPasteItemAbove to is', to, 'from is', from);\n        const newItem = this.insertItemAbove(to, from.item);\n        if (from.children) {\n            from.children.forEach(child => {\n                this.copyPasteItem(child, newItem);\n            });\n        }\n        return newItem;\n    }\n\n    copyPasteItemBelow(from: DragDropItemNode, to: DragDropItemNode): DragDropItemNode {\n        // console.log('in copyPasteItemBelow to is', to, 'from is', from);\n        const newItem = this.insertItemBelow(to, from.item);\n        if (from.children) {\n            from.children.forEach(child => {\n                this.copyPasteItem(child, newItem);\n            });\n        }\n        return newItem;\n    }\n\n    deleteNode(nodes: DragDropItemNode[], nodeToDelete: DragDropItemNode) {\n        const index = nodes.indexOf(nodeToDelete, 0);\n        if (index > -1) {\n            nodes.splice(index, 1);\n        } else {\n            nodes.forEach(node => {\n                if (node.children && node.children.length > 0) {\n                    this.deleteNode(node.children, nodeToDelete);\n                }\n            });\n        }\n    }\n}","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html',\n  styleUrls: ['./confirm-delete.component.scss']\n})\nexport class ConfirmDeleteComponent implements OnInit {\n  public nodeToDelete;\n  constructor(\n        public dialogRef: MatDialog,\n        @Inject(MAT_DIALOG_DATA) public data,\n        public translate: TranslateService) {\n        this.nodeToDelete = this.data.nodeToDelete;\n  }\n\n  ngOnInit() {\n  }\n\n  closeDialogBox(): void {\n      this.dialogRef.closeAll();\n  }\n}\n","import {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {urls} from '../constants/urls';\nimport {HttpParams} from '@angular/common/http';\nimport { ITopologyNodes, TopologytreeService} from '../services/topologytree.service';\nimport {DragDropItemFlatNode, DragDropItemNode, TreeDragDropItemDataBase} from './topology-dragdrop-database';\nimport {TopologyService} from '../services/topology.service';\nimport {CageService} from '../services/cage.service';\nimport {CasinomanagerService} from '../services/casinomanager.service';\nimport {Router} from '@angular/router';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {dialogSize} from '../constants/constants';\nimport {ConfirmDeleteComponent} from './confirm-delete/confirm-delete.component';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n\n@Component({\n    selector: 'app-toplogy-tree-dragdrop',\n    templateUrl: './topology-tree-drag-drop.component.html',\n    styleUrls: ['./topology-tree-drag-drop.component.scss'],\n    providers: [TreeDragDropItemDataBase]\n})\nexport class TopologyTreeDragDropComponent implements OnInit, OnDestroy, AfterViewInit {\n    /* Map from flat node to nested node. This helps us finding the nested node to be modified */\n    flatNodeMap = new Map<DragDropItemFlatNode, DragDropItemNode>();\n    /* Map from nested node to flattened node. This helps us to keep the same object for selection */\n    nestedNodeMap = new Map<DragDropItemNode, DragDropItemFlatNode>();\n    treeControl: FlatTreeControl<DragDropItemFlatNode>;\n    treeFlattener: MatTreeFlattener<DragDropItemNode, DragDropItemFlatNode>;\n    /* Drag and drop */\n    dragNode: any;\n    dragNodeExpandOverWaitTimeMs = 300;\n    dragNodeExpandOverNode: any;\n    dragNodeExpandOverTime: number;\n    dragNodeExpandOverArea: string;\n    @ViewChild('emptyItem') emptyItem: ElementRef;\n    @Input() arrTrees: Array<any>;\n    topologyTreeConfig = urls.topologyTree;\n    assignedDataSource: MatTreeFlatDataSource<DragDropItemNode, DragDropItemFlatNode>;\n    unassignedDataSource: MatTreeFlatDataSource<DragDropItemNode, DragDropItemFlatNode>;\n    accessGroupDataSource: MatTreeFlatDataSource<DragDropItemNode, DragDropItemFlatNode>;\n    virtualGroupDataSource: MatTreeFlatDataSource<DragDropItemNode, DragDropItemFlatNode>;\n    arrNestedDataSource = [];\n    accessGroupNodesLength: number;\n    assingedDataNodes: any;\n    nodeNames: any;\n    searchText: string;\n    nodeUpdated;\n    isEditable = false;\n    nodeToEdit: string;\n    changedName: string;\n    currentClickedNode: any;\n    isGroupNameInvalid = false;\n    selectedNode: string;\n    // permissionArray;\n    // isSuperuser = false;\n    @Output() addNode = new EventEmitter();\n    @Input() permissionToAccess = false;\n    @Input() permissionToEditAG;\n\n\n\n    constructor(\n        private database: TreeDragDropItemDataBase,\n        private _router: Router,\n        private _topologyTreeService: TopologytreeService,\n        private _topologyService: TopologyService,\n        private _cageService: CageService,\n        private _casinoManagerService: CasinomanagerService,\n        public snackBar: MatSnackBar,\n        public dialog: MatDialog,\n        public fb: FormBuilder,\n        private jwtHelper: JwtHelperService,\n        private translate: TranslateService) {\n        this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl<DragDropItemFlatNode>(this.getLevel, this.isExpandable);\n        this.handleSubscribers();\n        this.addFormValidations();\n    }\n    public accessGroupForm = this.fb.group({\n    });\n    public accessGroupEditForm = this.fb.group({\n    });\n\n    ngAfterViewInit() {\n        this.treeControl.expandAll();\n    }\n\n    addFormValidations() {\n       this.accessGroupForm.addControl('groupName', new FormControl('', [Validators.required, Validators.maxLength(20)]));\n       this.accessGroupEditForm.addControl('groupParentName', new FormControl('', [Validators.required, Validators.maxLength(20)]));\n    }\n\n\n\n    ngOnInit() {\n        this.onitFunction();\n        this.treeControl.expandAll();\n    }\n    onitFunction() {\n        this._topologyService.nodeUpdated.subscribe((data) => {\n            if (data.msg === 'updateChangeLabel') {\n                this.updateTopologyNodes(data.res[0]);\n                this.updateNodeNames(data.res[0]);\n                this._getAssignedNodes();\n            }\n        });\n        if (!this._topologyService.topologyNodes) {\n            this.assignTreeObject();\n            this._setUnassignedNodes();\n            this._setAccessGroupNodes();\n            this._getAssignedNodes();\n            this._createDataSources();\n            this.databaseSubscriber();\n        } else {\n            this.assignTreeObject();\n            this.setAssignedNodes(this._topologyService.topologyNodes);\n            this.createAccessGroupNodes(this._topologyService.accessGroupNodes);\n            this.database.dataChangeUnassigned.next(this._topologyService.unAssignedNodes);\n            this.nodeNames = this._topologyService.topologyNodeNames;\n            this.databaseSubscriber();\n            this._createDataSources();\n        }\n    }\n\n    handleSubscribers() {\n        this.nodeUpdated = this._topologyService.nodeUpdated\n            .subscribe((res) => {\n                if (res.msg === 'createNode') {\n                    // this._topologyService.fetchTopologyData();\n                    // this._topologyService.initialized.subscribe((rs) => {\n                    //     this.onitFunction();\n                    // });\n                    this.addNodeToTopology(res);\n                    // this.currentClickedNode.node.item  = JSON.stringify(this.currentClickedNode.node.item);\n                    this.handleClick(this.currentClickedNode.node, this.currentClickedNode.nodeDetails);\n                }\n                if (res.msg === 'createAccessGroup') {\n                    this.addAccessGroupToTopology(res.res);\n                }\n\n            });\n    }\n    addAccessGroupToTopology(res) {\n         this._topologyService.accessGroupNodes.push(res[0]);\n        this.createAccessGroupNodes(this._topologyService.accessGroupNodes);\n    }\n    addNodeToTopology(newNode) {\n        if (!this._topologyService.topologyNodes[newNode.res[0].parentNodeId]) {\n            this._topologyService.topologyNodes[newNode.clickNode.nodeId] = newNode.res;\n            }\n        // this._topologyService.topologyNodes[newNode.res[0].parentNodeId].push(newNode.res[0]);\n        if (!this._topologyService.topologyNodeNames[newNode.res[0].nodeId]) {\n            this._topologyService.topologyNodeNames[newNode.res[0].nodeId] = newNode.res[0];\n        }\n        if (!this._topologyService.topologyNodeNames[newNode.res[0].parentNodeId].children) {\n            this._topologyService.topologyNodeNames[newNode.res[0].parentNodeId].children = [];\n        }\n        this._topologyService.topologyNodeNames[newNode.res[0].parentNodeId].children.push(newNode.res[0]);\n        const assignData = this._topologyService.topologyNodes;\n        this._topologyService.topologyNodeNames = this._topologyService.createNodeNamesObject(this._topologyService.topologyNodes);\n        this._topologyService.siteChildren = this._topologyService.getSiteChildren(this._topologyService.topologyNodeNames);\n        this.setAssignedNodes(assignData);\n        this.nodeNames = this._topologyService.topologyNodeNames;\n        this.databaseSubscriber();\n        this._createDataSources();\n        // this._getAssignedNodes();\n    }\n    updateEventObj(obj) {\n        this.addNode.emit(obj);\n    }\n\n    private assignTreeObject() {\n        this.assignedDataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.unassignedDataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.accessGroupDataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.virtualGroupDataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    }\n\n    private databaseSubscriber() {\n        this.database.dataChangeAssigned.subscribe(data => {\n            this.assignedDataSource.data = [];\n            this.assignedDataSource.data = data;\n            this.treeControl.expandAll();\n        });\n        this.database.dataChangeUnassigned.subscribe(data => {\n            this.unassignedDataSource.data = [];\n            this.unassignedDataSource.data = data;\n            this.treeControl.expandAll();\n        });\n        this.database.dataChangeAG.subscribe(data => {\n            this.accessGroupDataSource.data = [];\n            this.accessGroupDataSource.data = data;\n            this.treeControl.expandAll();\n        });\n        this.database.dataChangeAG.subscribe(data => {\n            this.virtualGroupDataSource.data = data;\n            this.treeControl.expandAll();\n        });\n    }\n\n    /*\n     * this function create data source for different group of nodes.\n     */\n    private _createDataSources() {\n        this.arrNestedDataSource['assignednode'] = this.assignedDataSource;\n        this.arrNestedDataSource['unassignednode'] = this.unassignedDataSource;\n        this.arrNestedDataSource['accessgroup'] = this.accessGroupDataSource;\n        this.arrNestedDataSource['virtualgroup'] = this.virtualGroupDataSource;\n    }\n\n    /*\n     * this function set unassigned data and create the tree for unassigned nodes.\n     */\n    private _setUnassignedNodes() {\n        const unassignedItemsArr = [];\n        if (!this._topologyService.unAssignedNodes) {\n            this._topologyTreeService.getTopologyNodeUnassigned(this.topologyTreeConfig.unassignedNondeUrl).subscribe(\n                (unassignedresponse) => {\n                    const childNodes = [];\n                    if (unassignedresponse.length > 0) {\n                        const params = new HttpParams().set('parentId', unassignedresponse[0].nodeId);\n                        this._topologyTreeService.getTopologyNodeByNodeId\n                        (this.topologyTreeConfig.topologyNodesUrls, params).subscribe((response) => {\n                            for (const item of response) {\n                                unassignedItemsArr.push(item);\n                                childNodes.push(item.name);\n                            }\n                            this._topologyService.unassignedNodesArr = unassignedItemsArr;\n                            const dataUnassigned = this.database.buildFileTree(childNodes, 0, 'unassignednode');\n                            this._topologyService.unAssignedNodes = dataUnassigned;\n                            this.database.dataChangeUnassigned.next(dataUnassigned);\n                        });\n                    }\n                }\n            );\n        } else {\n            this.database.dataChangeUnassigned.next(this._topologyService.unAssignedNodes);\n        }\n    }\n\n    /*\n     * this function set Access group data and create the tree for accessgroup nodes.\n     */\n    private _setAccessGroupNodes() {\n        if (!this._topologyService.accessGroupNodes) {\n            this._topologyService.initialized.subscribe((value) => {\n                if (value === 'nodesInitialized') {\n                    const agresponse = this._topologyService.accessGroupNodes;\n                    this.createAccessGroupNodes(agresponse);\n                }\n            });\n        } else {\n            this.createAccessGroupNodes(this._topologyService.accessGroupNodes);\n        }\n    }\n\n    private createAccessGroupNodes(agresponse) {\n        const topologyIds = new Map<string, string[]>();\n        this.accessGroupNodesLength = agresponse.length;\n        for (const ag of agresponse) {\n            if (ag.topologyNodeIds.length > 0) {\n                const childArr = [];\n                for (let i = 0, iLen = ag.topologyNodeIds.length; i < iLen; i++) {\n                    const childId = ag.topologyNodeIds[i];\n                    const childNode = this._topologyService.topologyNodeNames[childId];\n                    if (childNode) {\n                        childArr.push(childNode.name);\n                    }\n                }\n                topologyIds[ag.groupName] = childArr;\n            } else {\n                topologyIds[ag.groupName] = [];\n            }\n        }\n        const dataAG = this.database.buildFileTree(topologyIds, 0, 'accessgroup');\n        this.database.dataChangeAG.next(dataAG);\n    }\n\n    /*\n     * this funciton get the response from rest api for assigned nodes.\n     */\n    private updateTopologyNodes(node) {\n        for (const obj in this._topologyService.topologyNodes) {\n            if (this._topologyService.topologyNodes.hasOwnProperty(obj)) {\n                const topologyData = this._topologyService.topologyNodes;\n                if (topologyData[obj].length > 0) {\n                    for (let i = 0, len = this._topologyService.topologyNodes[obj].length; i < len; i++) {\n                        if (topologyData[obj].nodeId === node.nodeId) {\n                            topologyData[obj].name = node.name;\n                            topologyData[obj].shortName = node.shortName;\n                            topologyData[obj].description = node.description;\n                            if (node.type === 1000) {\n                                topologyData[obj].host = node.host;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private updateNodeNames(node) {\n        for (const key in this._topologyService.topologyNodeNames) {\n            if (parseInt(key, 10) === node.nodeId) {\n                this._topologyService.topologyNodeNames[key].name = node.name;\n                this._topologyService.topologyNodeNames[key].shortName = node.shortName;\n                this._topologyService.topologyNodeNames[key].description = node.description;\n                if (node.type === 1000) {\n                    this._topologyService.topologyNodeNames[key].host = node.host;\n                }\n            }\n        }\n    }\n\n    private _getAssignedNodes(isForSearch?: boolean, newData?: any) {\n        if (isForSearch) {\n            this.setAssignedNodes(newData, true);\n        } else {\n            this._topologyService.initialized.subscribe((value) => {\n                if (value === 'nodesInitialized') {\n                    this.nodeNames = this._topologyService.topologyNodeNames;\n                    this.setAssignedNodes(this._topologyService.topologyNodes);\n                }\n            });\n        }\n    }\n\n    private setAssignedNodes(assigndata, isForSearch?: boolean) {\n        const assignedNodesKeys = Object.keys(assigndata);\n        let treeData;\n        if (isForSearch && assignedNodesKeys.length > 0) {\n            const firstKey = Object.keys(assigndata)[0];\n            treeData = this._getflatDataToNested(assigndata, parseInt(firstKey, 10));\n            this.setTreeData(treeData, assigndata);\n        } else if (isForSearch && assignedNodesKeys.length === 0) {\n            treeData = {};\n            this.setTreeData(treeData, assigndata);\n        } else {\n            treeData = this._getflatDataToNested(assigndata);\n            this.setTreeData(treeData, assigndata);\n        }\n    }\n\n    private setTreeData(treeData, assigndata) {\n        const topologyParentAssignedGroup = new Map<string, string[]>();\n        for (let i = 0; i < treeData.length; i++) {\n            topologyParentAssignedGroup[treeData[i].nodeId] = this._getAssignedNestedNodes(treeData[i].children);\n        }\n        const dataAssignedNodes = this.database.buildFileTree(topologyParentAssignedGroup, 0, 'assignednode');\n        this.database.dataChangeAssigned.next(dataAssignedNodes);\n        this.assingedDataNodes = assigndata;\n    }\n\n    /*\n     * this function return array of nested item.\n     * param arr\n     * private\n     */\n    private _getAssignedNestedNodes(arr: ITopologyNodes []): Array<any> {\n        const arrNodes = [];\n        if (arr) {\n            for (let i = 0; i < arr.length; i++) {\n                if (arr[i] && arr[i].children && arr[i].children.length > 0) {\n                    arrNodes[arr[i]['nodeId']] = this._getAssignedNestedNodes(arr[i].children);\n                } else {\n                    arrNodes.push(arr[i]['nodeId']);\n                }\n            }\n        }\n        return arrNodes;\n    }\n\n    /*\n     * this function build the nested objects from flat object.\n     * param arr\n     * param parentid\n     */\n    private _getflatDataToNested(arr: Array<any>, parentId?: number) {\n        let output = [];\n        const nodeIdsArr = Object.keys(arr);\n        const len = nodeIdsArr.length;\n        const lastKey = parseInt(nodeIdsArr[len - 1], 10);\n        if (!parentId) {\n            output.push(arr[0][0]);\n            output = this.setParentChildren(output, arr, nodeIdsArr);\n        } else {\n            const nodesDetail = this._topologyService.topologyNodeNames;\n            output.push(nodesDetail[parentId]);\n            delete output[0].children;\n            output[0].children = arr[parentId];\n        }\n        if (output[0].children && (output[0].children).length > 0) {\n            this.setChildrenOfChildren(output[0], nodeIdsArr, arr, lastKey);\n        }\n        return output;\n    }\n\n    private setChildrenOfChildren(nodeObj, nodeIdsArr, arr, lastKey) {  // recursive function for fetching children of children\n        for (const i in nodeObj.children) {\n            if (nodeObj.children.hasOwnProperty(i) && !(nodeObj.children[i] > lastKey) &&\n                this.checkIfChildren(nodeIdsArr, nodeObj.children[i].nodeId)) {\n                nodeObj.children[i].children = arr[nodeObj.children[i].nodeId];\n                this.setChildrenOfChildren(nodeObj.children[i], nodeIdsArr, arr, lastKey);\n            }\n        }\n    }\n\n    private setParentChildren(output, arr, nodeIdsArr) {  // set children of parent\n        if (this.checkIfChildren(nodeIdsArr, output[0].nodeId)) {\n            output[0].children = arr[output[0].nodeId];\n        }\n        return output;\n    }\n\n    private checkIfChildren(nodesArr, nodeId) {  // check if node has children\n        return (nodesArr.indexOf(nodeId.toString()) > -1);\n    }\n\n\n    getLevel = (node: DragDropItemFlatNode) => node.level;\n\n    isExpandable = (node: DragDropItemFlatNode) => node.expandable;\n\n    getChildren = (node: DragDropItemNode): DragDropItemNode[] => node.children;\n\n    hasChild = (_: number, _nodeData: DragDropItemFlatNode) => _nodeData.expandable;\n\n    hasNoContent = (_: number, _nodeData: DragDropItemFlatNode) => _nodeData.item === '';\n\n    /*\n     * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n     */\n    transformer = (node: DragDropItemNode, level: number) => {\n        if (node.dataSourceName === 'accessgroup' && node.children && node.children.length > 0) {\n            for (let i = 0, iLen = node.children.length; i < iLen; i++) {\n                node.children[i].parentName = node.item;\n            }\n        }\n        const existingNode = this.nestedNodeMap.get(node);\n        const flatNode = existingNode && existingNode.item === node.item\n            ? existingNode\n            : new DragDropItemFlatNode();\n        flatNode.item = node.item;\n        flatNode.level = level;\n        flatNode.expandable = (node.children && node.children.length > 0);\n        flatNode.dataSourceName = node.dataSourceName;\n        if (flatNode.dataSourceName === 'accessgroup' && flatNode.level === 1) {\n            flatNode.parentName = node.parentName;\n        }\n        this.flatNodeMap.set(flatNode, node);\n        this.nestedNodeMap.set(node, flatNode);\n        return flatNode;\n    };\n\n    handleDragStart(event, node) {\n        if (!this.permissionToAccess) {\n            return false;\n        }\n        event.dataTransfer.setData('text/plan', node.item);\n        this.emptyItem.nativeElement.text = node.item;\n        event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n        this.dragNode = node;\n        this.treeControl.collapse(node);\n    }\n\n    handleDragOver(event, node) {\n        event.preventDefault();\n        // Handle node expand\n        if (node === this.dragNodeExpandOverNode) {\n            if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n                if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n                    this.treeControl.expand(node);\n                }\n            }\n        } else {\n            this.dragNodeExpandOverNode = node;\n            this.dragNodeExpandOverTime = new Date().getTime();\n        }\n\n        // Handle drag area\n        const percentageX = event.offsetX / event.target.clientWidth;\n        const percentageY = event.offsetY / event.target.clientHeight;\n        if (percentageY < 0.25) {\n            this.dragNodeExpandOverArea = 'above';\n        } else if (percentageY > 0.75) {\n            this.dragNodeExpandOverArea = 'below';\n        } else {\n            this.dragNodeExpandOverArea = 'center';\n        }\n    }\n\n    // handleDrop: called when a node is dropped , this is called when node of any type is dropped\n    handleDrop(event, node) {\n        if (!this.permissionToAccess) {\n            return false;\n        }\n        const draggedNodeId = parseInt(this.flatNodeMap.get(this.dragNode).item, 10);\n        const nodeDetail = this._topologyService.topologyNodeNames[draggedNodeId];\n        if (this.dragNode.dataSourceName === 'assignednode' && this.flatNodeMap.get(node).dataSourceName === 'assignednode') {\n            if (nodeDetail && nodeDetail.hasOwnProperty('parentNodeId')) {\n                if (nodeDetail.hasOwnProperty('type') && nodeDetail.type === 1200) {\n                    const dragNodeObject = this.dragNode;\n                    this._cageService.getLocalGamingDay(draggedNodeId).subscribe( (res) => {\n                        if (res !== null && res.hasOwnProperty('successObj')) {\n                            const localGamingDay = res.successObj;\n                            if (localGamingDay) {\n                                this._casinoManagerService.getTopologyStatistics(localGamingDay, draggedNodeId, 1, {})\n                                    .subscribe((response) => {\n                                    if (response !== null) {\n                                        let openTables;\n                                        if (response.hasOwnProperty('data') && response.data[0].hasOwnProperty('stats')) {\n                                           openTables = response.data[0].stats[0].split('/');\n                                        }\n                                        if (openTables[0] != null && parseInt(openTables[0], 10) === 1) {\n                                            this.snackBar.open(this.translate.instant\n                                            ('application.app.CONFIGURATION_LABELS.cannot_move_open_table'), '', {\n                                                duration: 3000,\n                                                horizontalPosition: 'right',\n                                                panelClass: 'snack__warn'\n                                            });\n                                        } else if (openTables[0] != null && parseInt(openTables[0], 10) === 0) {\n                                            this.dragNode = dragNodeObject;\n                                            event.preventDefault();\n                                            this.dragAssignedToAssigned(node, draggedNodeId, nodeDetail);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                } else {\n                    event.preventDefault();\n                    this.dragAssignedToAssigned(node, draggedNodeId, nodeDetail);\n                }\n            } else {\n                this.snackBar.open(this.translate.instant\n                ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.CANNOT_ADD_ROOT_LOCATION'), '', {\n                    duration: 3000,\n                    horizontalPosition: 'right',\n                    panelClass: 'snack__warn'\n                });\n            }\n        } else if (this.dragNode.dataSourceName === 'assignednode' && this.flatNodeMap.get(node).dataSourceName === 'accessgroup') {\n            if (!this.isTerminal(draggedNodeId)) {\n                if (!this.nodeAlreadyExists(draggedNodeId, node)) {\n                    event.preventDefault();\n                    this.dragToAccessGroup(node, draggedNodeId);\n                } else {\n                    this.snackBar.open(this.translate.instant\n                    ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.LOCATION_ALREADY_EXISTS'), '', {\n                        duration: 3000,\n                        horizontalPosition: 'right',\n                        panelClass: 'snack__warn'\n                    });\n                }\n            } else {\n                this.snackBar.open(this.translate.instant\n                ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.CANNOT_ADD_TERMN'), '', {\n                    duration: 3000,\n                    horizontalPosition: 'right',\n                    panelClass: 'snack__warn'\n                });\n            }\n        } else if (this.dragNode.dataSourceName === 'unassignednode' && this.flatNodeMap.get(node).dataSourceName === 'assignednode') {\n            event.preventDefault();\n            this.dragUnassignedNode(node);\n        }\n        this.handleDragEnd(event);\n    }\n\n    // handleDragEnd: reset all the variables used for handling drag and drop\n    handleDragEnd(event) {\n        this.dragNode = null;\n        this.dragNodeExpandOverNode = null;\n        this.dragNodeExpandOverTime = 0;\n    }\n\n    // dragToAccessGroup: saves the dragged assigned node to the access group nodes tree structure\n    dragToAccessGroup(node, draggedNodeId) {\n        if (node !== this.dragNode && !this.isTerminal(draggedNodeId)) {\n            const siteChildren = this._topologyService.getSiteChildren(this._topologyService.topologyNodeNames);\n            const parentNode = this.flatNodeMap.get(node);\n            for (let i = 0, iLen = this._topologyService.accessGroupNodes.length; i < iLen; i++) {\n                const accessNode =  this._topologyService.accessGroupNodes[i];\n                if (accessNode.groupName === this.flatNodeMap.get(node).item) {\n                    this.dragNodeToAccess(siteChildren, accessNode, draggedNodeId, parentNode);\n                }\n            }\n        }\n    }\n\n    // dragNodeToAccess: called inside dragToAccessGroup\n    dragNodeToAccess(siteChildren, accessNode, draggedNodeId, parentNode) {\n        for (const obj in siteChildren) {\n            if (siteChildren.hasOwnProperty(obj) && siteChildren[obj].id === accessNode.topologyId) {\n                const children = siteChildren[obj].children;\n                // const children = this.refineSiteChildren(siteChildren[obj].children, accessNode.topologyId, draggedNodeId);\n                if (children.indexOf(draggedNodeId) > -1) {\n                    if (this.dragNodeExpandOverArea === 'below' || this.dragNodeExpandOverArea === 'center') {\n                        for (let j = 0, jLen = this._topologyService.accessGroupNodes.length; j < jLen; j++) {\n                            if (this._topologyService.accessGroupNodes[j].groupName === parentNode.item) {\n                                const agNode = this._topologyService.accessGroupNodes[j];\n                                const idArr = this._topologyService.accessGroupNodes[j].topologyNodeIds;\n                                idArr.push(this.dragNode.item);\n                                const keysArr = [];\n                                for (let a = 0 , aLen = idArr.length; a < aLen; a++) {\n                                    keysArr.push(parseInt(idArr[a], 10));\n                                }\n                                const accessObj = {\n                                    groupName: parentNode.item,\n                                    groupType: agNode.groupType,\n                                    topologyGroupId: agNode.topologyGroupId,\n                                    topologyId: agNode.topologyId,\n                                    topologyNodeIds: keysArr,\n                                    userId: agNode.userId\n                                };\n                                this._topologyService.updateAccessGroupNode(agNode.topologyGroupId, accessObj)\n                                    .subscribe( (res) => {\n                                        if (res[0] && res[0].code === 20001) {\n                                            this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                                                duration: 3000,\n                                                horizontalPosition: 'right',\n                                                panelClass: 'snack__error'\n                                            });\n                                            return;\n                                        }\n                                        for (let b = 0, bLen = this._topologyService.accessGroupNodes.length;\n                                             b < bLen; b++) {\n                                            if (this._topologyService.\n                                                accessGroupNodes[b].groupName === parentNode.item) {\n                                                this._topologyService.\n                                                    accessGroupNodes[j].topologyNodeIds = keysArr;\n                                                break;\n                                            }\n                                        }\n                                        this.updateAccessGroup();\n                                        this.snackBar.open(this.translate.instant\n                                            ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.SUCCESSFULLY_DROPPED'),\n                                            '', {\n                                                duration: 3000,\n                                                horizontalPosition: 'right',\n                                                panelClass: 'snack__success'\n                                            });\n                                    });\n                            }\n                        }\n                    }\n                } else if (accessNode.topologyId === draggedNodeId) {\n                    if (this.dragNodeExpandOverArea === 'below' || this.dragNodeExpandOverArea === 'center') {\n                        for (let j = 0, jLen = this._topologyService.accessGroupNodes.length; j < jLen; j++) {\n                            if (this._topologyService.accessGroupNodes[j].groupName === parentNode.item) {\n                                const agNode = this._topologyService.accessGroupNodes[j];\n                                const idArr = this._topologyService.accessGroupNodes[j].topologyNodeIds;\n                                idArr.push(this.dragNode.item);\n                                const keysArr = [];\n                                for (let a = 0 , aLen = idArr.length; a < aLen; a++) {\n                                    keysArr.push(parseInt(idArr[a], 10));\n                                }\n                                const accessObj = {\n                                    groupName: parentNode.item,\n                                    groupType: agNode.groupType,\n                                    topologyGroupId: agNode.topologyGroupId,\n                                    topologyId: agNode.topologyId,\n                                    topologyNodeIds: keysArr,\n                                    userId: agNode.userId\n                                };\n                                this._topologyService.updateAccessGroupNode(agNode.topologyGroupId, accessObj)\n                                    .subscribe( (res) => {\n                                        if (res[0] && res[0].code === 20001) {\n                                            this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                                                duration: 3000,\n                                                horizontalPosition: 'right',\n                                                panelClass: 'snack__error'\n                                            });\n                                            return;\n                                        }\n                                        for (let b = 0, bLen = this._topologyService.accessGroupNodes.length;\n                                             b < bLen; b++) {\n                                            if (this._topologyService.\n                                                accessGroupNodes[b].groupName === parentNode.item) {\n                                                this._topologyService.\n                                                    accessGroupNodes[j].topologyNodeIds = keysArr;\n                                                break;\n                                            }\n                                        }\n                                        this.updateAccessGroup();\n                                        this.snackBar.open(this.translate.instant\n                                            ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.SUCCESSFULLY_DROPPED'),\n                                            '', {\n                                                duration: 3000,\n                                                horizontalPosition: 'right',\n                                                panelClass: 'snack__success'\n                                            });\n                                    });\n                            }\n                        }\n                    }\n                } else {\n                    this.snackBar.open(this.translate.instant\n                    ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.CANNOT_ADD'), '', {\n                        duration: 3000,\n                        horizontalPosition: 'right',\n                        panelClass: 'snack__warn'\n                    });\n                }\n            }\n        }\n    }\n\n    // dragAssignedToAssigned: saves the dragged assigned node to the assigned nodes tree structure\n    dragAssignedToAssigned(node, draggedNodeId, nodeDetail) {\n        if (node !== this.dragNode) {\n            const prevParentId = nodeDetail.parentNodeId;\n            let childNodeId, parentNodeId, childTypeId, parentTypeId, isActualChild;\n            childNodeId = parseInt(this.flatNodeMap.get(this.dragNode).item, 10);\n            parentNodeId = parseInt(this.flatNodeMap.get(node).item, 10);\n            let parentChildren;\n            if (parentNodeId && this._topologyService.topologyNodeNames[parentNodeId]) {\n                parentChildren =  this._topologyService.topologyNodeNames[parentNodeId].children;\n            }\n            childTypeId = this._topologyService.topologyNodeNames[childNodeId].type;\n            parentTypeId = this._topologyService.topologyNodeNames[parentNodeId].type;\n            if (parentChildren && parentChildren.length > 0) {\n                for (let i = 0 , iLen = parentChildren.length; i < iLen; i++) {\n                    if (parentChildren[i].nodeId === childNodeId) {\n                        isActualChild = true;\n                        break;\n                    } else {\n                        isActualChild = false;\n                    }\n                }\n            }\n            let allChildren;\n            if (this._topologyService.topologyTypes && parentTypeId && this._topologyService.topologyTypes.get(parentTypeId)) {\n                allChildren = this._topologyService.topologyTypes.get(parentTypeId).childTypeIds;\n            }\n            if ((this.dragNodeExpandOverArea === 'below' || this.dragNodeExpandOverArea === 'center') && !isActualChild) {\n                this.dragNodeToAssigned(allChildren, childTypeId, parentNodeId, childNodeId, nodeDetail, prevParentId);\n            }\n        }\n    }\n\n    // dragNodeToAssigned: called inside dragAssignedToAssigned\n    dragNodeToAssigned(allChildren, childTypeId, parentNodeId, childNodeId, nodeDetail, prevParentId) {\n        if (allChildren && allChildren.length > 0 && allChildren.indexOf(childTypeId) > -1) {\n            const objToDrag = {\n                description: nodeDetail.description,\n                nodeId: childNodeId,\n                parentNodeId: parentNodeId,\n                type: childTypeId\n            };\n            this._topologyService.updateTopologyNode(childNodeId, objToDrag).subscribe( (res) => {\n                if (res) {\n                    if (res[0] && res[0].code === 20001) {\n                        this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__error'\n                        });\n                        return;\n                    }\n                    const response = res;\n                    this.addToTopologyNodesArr(response, prevParentId);\n                    this.updateAssignedNodes();\n                    this.snackBar.open(this.translate.instant\n                        ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.SUCCESSFULLY_DROPPED'),\n                        '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__success'\n                        });\n                    this.handleClick(this.currentClickedNode.node, this.currentClickedNode.nodeDetails);\n                }\n            });\n        } else {\n            const parentName = this._topologyService.topologyNodeNames[parentNodeId].name;\n            const childName = this._topologyService.topologyNodeNames[childNodeId].name;\n            const label = this.translate.instant('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.CANNOT_ADD')\n                + '  ' + childName + '  ' +\n                this.translate.instant('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.AS_CHILD') + ' ' + parentName;\n            this.snackBar.open(label, '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__warn'\n            });\n        }\n    }\n\n    // dragUnassignedNode: saves the dragged unassigned node to the assigned nodes tree structure\n    dragUnassignedNode(node) {\n        let parentNodeId, parentTypeId, allTypeChildren, unassignedNodeId, unassignedNodeType, unassignedNodeName, unassignedNodeDesc;\n        parentNodeId = parseInt(this.flatNodeMap.get(node).item, 10);\n        parentTypeId = this._topologyService.topologyNodeNames[parentNodeId].type;\n        for (let i = 0, iLen = this._topologyService.unassignedNodesArr.length; i < iLen; i++) {\n            if (this.dragNode.item === this._topologyService.unassignedNodesArr[i].name) {\n                unassignedNodeId = this._topologyService.unassignedNodesArr[i].nodeId;\n                unassignedNodeType = this._topologyService.unassignedNodesArr[i].type;\n                unassignedNodeName = this._topologyService.unassignedNodesArr[i].name;\n                unassignedNodeDesc = this._topologyService.unassignedNodesArr[i].description;\n            }\n        }\n        if (this._topologyService.topologyTypes && parentTypeId && this._topologyService.topologyTypes.get(parentTypeId)) {\n            allTypeChildren = this._topologyService.topologyTypes.get(parentTypeId).childTypeIds;\n        }\n        if ((this.dragNodeExpandOverArea === 'below' || this.dragNodeExpandOverArea === 'center')) {\n           this.dragUnassignedToAssigned(allTypeChildren, unassignedNodeType, unassignedNodeDesc,\n               unassignedNodeId, parentNodeId, unassignedNodeName);\n        }\n    }\n\n    // dragUnassignedToAssigned: called inside dragUnassignedNode\n    dragUnassignedToAssigned(allTypeChildren, unassignedNodeType, unassignedNodeDesc, unassignedNodeId, parentNodeId, unassignedNodeName) {\n        if (allTypeChildren && allTypeChildren.length > 0 && allTypeChildren.indexOf(unassignedNodeType) > -1) {\n            const nodeToDrag = {\n                description: unassignedNodeDesc,\n                nodeId: unassignedNodeId,\n                parentNodeId: parentNodeId,\n                type: unassignedNodeType\n            };\n            this._topologyService.updateTopologyNode(unassignedNodeId, nodeToDrag).subscribe( (res) => {\n                if (res) {\n                    if (res[0] && res[0].code === 20001) {\n                        this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__error'\n                        });\n                        return;\n                    }\n                    const responseArr = res;\n                    for (let j = 0, jLen = this._topologyService.unassignedNodesArr.length; j < jLen; j++) {\n                        if (this._topologyService.unassignedNodesArr[j] &&\n                            unassignedNodeId === this._topologyService.unassignedNodesArr[j].nodeId) {\n                            this._topologyService.unassignedNodesArr.splice(j, 1);\n                        }\n                    }\n                    this.updateUnassignedItems();\n                    this.addToTopologyNodesArr(responseArr);\n                    this.snackBar.open(this.translate.instant\n                        ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.SUCCESSFULLY_DROPPED'),\n                        '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__success'\n                        });\n                    if (this.currentClickedNode) {\n                        this.handleClick(this.currentClickedNode.node, this.currentClickedNode.nodeDetails);\n                    }\n                }\n            });\n        } else {\n            const parentName = this._topologyService.topologyNodeNames[parentNodeId].name;\n            const label = this.translate.instant('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.CANNOT_ADD')\n                + '  ' + unassignedNodeName + '  ' +\n                this.translate.instant('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.AS_CHILD') + ' ' + parentName;\n            this.snackBar.open(label, '', {\n                duration: 3000,\n                horizontalPosition: 'right',\n                panelClass: 'snack__warn'\n            });\n        }\n    }\n\n    // handleClick: called when a node is clicked within the topology tree of assigned nodes type\n    handleClick(node, nodeData?: string) {\n        if (nodeData){\n            if (nodeData['type'] === 1200){\n                this.openTableProperties(nodeData);\n                return;\n            }\n        }\n        if (node === 'areas') {\n            this._topologyService.areasLabelClicked.next();\n        } else {\n            this.currentClickedNode = {node: node , nodeDetails: nodeData};\n            const typeVal = nodeData['type'];\n            if (typeVal !== 1000) {\n                const objToSend = {\n                    nodeClicked: node,\n                    topologyData: this._topologyService.topologyNodes,\n                    nodeDetails: this._topologyService.topologyNodeNames\n                };\n                this.selectedNode = node.item;\n                this._topologyService.nodeClicked.next(objToSend);\n            } else if (typeVal === 1000) {\n                this._topologyService.terminalClicked.next();\n            }\n        }\n    }\n\n    // checkSearchText: checks whether the searched text is available or not\n    checkSearchText(event) {\n        const searchText = event.target.value;\n        this.searchText = searchText;\n        const assignedKeys = [];\n        for (const key in this._topologyService.topologyNodeNames) {\n            if (this._topologyService.topologyNodeNames.hasOwnProperty(key)) {\n                const node = this._topologyService.topologyNodeNames[key];\n                const str = node.name.toLowerCase();\n                if (str.indexOf(searchText.toLowerCase()) > -1) {\n                    assignedKeys.push(parseInt(key, 10));\n                }\n            }\n        }\n        if (assignedKeys.length > 0) {\n            this.filterAssignedNodes(assignedKeys);\n        }\n    }\n\n    // filterAssignedNodes: searches the text entered only within the assigned nodes\n    filterAssignedNodes(keysArr) {\n        const nodesData = this._topologyService.topologyNodes;\n        let filteredAssignedNodes = {};\n        for (const key in nodesData) {\n            if (nodesData.hasOwnProperty(key) && nodesData[key].length > 0) {\n                for (let j = 0, jLen = nodesData[key].length; j < jLen; j++) {\n                    const reqNodeId = nodesData[key][j].nodeId;\n                    if (keysArr.indexOf(reqNodeId) > -1) {\n                        filteredAssignedNodes[key] = nodesData[key];\n                    }\n                }\n            }\n        }\n        filteredAssignedNodes = this.rectifyFilteredObject(filteredAssignedNodes, keysArr);\n        this._getAssignedNodes(true, filteredAssignedNodes);\n    }\n\n    // rectifyFilteredObject: returns only the searched nodes\n    rectifyFilteredObject(obj, keys) {\n        const data = obj;\n        for (const val in data) {\n            if (data.hasOwnProperty(val) && data[val].length > 0) {\n                const tempArr = [];\n                for (let i = 0, iLen = data[val].length; i < iLen; i++) {\n                    if (keys.indexOf(data[val][i].nodeId) > -1) {\n                        tempArr.push(data[val][i]);\n                        if (data[val][i].children && data[val][i].children.length > 0) {\n                            const arr = [];\n                            for (let j = 0, jLen = data[val][i].children.length; j < jLen; j++) {\n                                const child = data[val][i].children[j];\n                                if (keys.indexOf(child.nodeId) > -1) {\n                                    arr.push(child);\n                                }\n                            }\n                            data[val][i].children = arr;\n                        }\n                    }\n                }\n                data[val] = tempArr;\n            }\n        }\n        return data;\n    }\n\n    // cancelSearch: reset all the variables when the search is cancelled\n    cancelSearch() {\n        this.searchText = '';\n        const assignData = this._topologyService.topologyNodes;\n        this.setAssignedNodes(assignData);\n    }\n\n    // openTableProperties: opens the table properties screen of the table clicked from the topology tree\n    openTableProperties(clickedTable) {\n        const tableId = clickedTable.nodeId;\n        this._router.navigate(['/configuration/table-properties/' + tableId]);\n    }\n\n    ngOnDestroy() {\n        this.nodeUpdated.unsubscribe();\n    }\n\n    // delete the selected node of the access group nodes\n    deleteAccessGroup(node) {\n        const nodeNames = this._topologyService.topologyNodeNames;\n        const accessNodes = this._topologyService.accessGroupNodes;\n        if (node.level === 0) {\n          this.isActiveAccessGroup(node, nodeNames, accessNodes);\n        } else if (node.level === 1) {\n           if (!this.isLastChild(node, nodeNames, accessNodes)) {\n               this.removeAccessGroupChild(node, accessNodes, nodeNames);\n           } else {\n              this.isChildOfActiveAG(node, nodeNames, accessNodes);\n           }\n        }\n    }\n\n    isLastChild(node, nodeNames, accessNodes) {\n       let arrLength;\n        for (const i in nodeNames) {\n            if (nodeNames.hasOwnProperty(i) && nodeNames[i].name === node.item) {\n                for (let j = 0, jLen = accessNodes.length; j < jLen; j++) {\n                    const index = accessNodes[j].topologyNodeIds.indexOf(nodeNames[i].nodeId);\n                    if (index > -1) {\n                        arrLength = accessNodes[j].topologyNodeIds.length;\n                    }\n                }\n            }\n        }\n        return arrLength === 1;\n    }\n\n    isChildOfActiveAG(node, nodeNames, accessNodes) {\n       let accessGroupId, response;\n       for (const i in nodeNames) {\n            if (nodeNames.hasOwnProperty(i) && nodeNames[i].name === node.item) {\n                for (let j = 0, jLen = accessNodes.length; j < jLen; j++) {\n                    const index = accessNodes[j].topologyNodeIds.indexOf(nodeNames[i].nodeId);\n                    if (index > -1) {\n                       accessGroupId = accessNodes[j].topologyGroupId;\n                    }\n                }\n            }\n       }\n        this._topologyService.getAccessGroupUsers(accessGroupId, {}).subscribe((res) => {\n            if (res) {\n                response = res;\n                if (response.totalRecordsReturned > 0) {\n                    this.openConfirmDeleteBox(node, accessNodes, nodeNames);\n                } else {\n                    this.removeAccessGroupChild(node, accessNodes, nodeNames);\n                }\n            }\n        });\n    }\n\n    // removeAccessGroup : deletes the access group node\n    removeAccessGroup(node, accessNodes) {\n        for (let a = 0, aLen = accessNodes.length; a < aLen; a++) {\n            if (node.item === accessNodes[a].groupName) {\n                const objToDelete = {\n                    groupName: accessNodes[a].groupName,\n                    groupType: accessNodes[a].groupType,\n                    topologyGroupId: accessNodes[a].topologyGroupId,\n                    topologyId: accessNodes[a].topologyId,\n                    topologyNodeIds: accessNodes[a].topologyNodeIds,\n                    userId: accessNodes[a].userId\n                };\n                this._topologyService.deleteAccessGroupNode(accessNodes[a].topologyGroupId, objToDelete).subscribe( (res) => {\n                    if (res && res[0] && res[0].code === 20001) {\n                        this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__error'\n                        });\n                        return;\n                    }\n                    for (let b = 0, bLen = this._topologyService.accessGroupNodes.length; b < bLen; b++) {\n                        if (this._topologyService.accessGroupNodes[b].groupName === objToDelete.groupName) {\n                            this._topologyService.accessGroupNodes.splice(b, 1);\n                            break;\n                        }\n                    }\n                    this.snackBar.open(this.translate.instant\n                        ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.AG_REMOVED'),\n                        '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__success'\n                        });\n                    this.updateAccessGroup();\n                });\n            }\n        }\n    }\n\n    // removeAccessGroupChild : deletes the access group child node\n    removeAccessGroupChild(node, accessNodes, nodeNames) {\n        for (const i in nodeNames) {\n            if (nodeNames.hasOwnProperty(i) && nodeNames[i].name === node.item) {\n                for (let j = 0, jLen = accessNodes.length; j < jLen; j++) {\n                    if (accessNodes[j].groupName === node.parentName) {\n                        const index = accessNodes[j].topologyNodeIds.indexOf(nodeNames[i].nodeId);\n                        if ( index > -1) {\n                            const idArr = accessNodes[j].topologyNodeIds;\n                            idArr.splice(index, 1);\n                            const accessNodeObj = {\n                                groupName: accessNodes[j].groupName,\n                                groupType: accessNodes[j].groupType,\n                                topologyGroupId: accessNodes[j].topologyGroupId,\n                                topologyId: accessNodes[j].topologyId,\n                                topologyNodeIds: idArr,\n                                userId: accessNodes[j].userId\n                            };\n                            this._topologyService.updateAccessGroupNode(accessNodes[j].topologyGroupId, accessNodeObj).subscribe( (res) => {\n                                if (res[0] && res[0].code === 20001) {\n                                    this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                                        duration: 3000,\n                                        horizontalPosition: 'right',\n                                        panelClass: 'snack__error'\n                                    });\n                                    return;\n                                }\n                                for (let c = 0, cLen = this._topologyService.accessGroupNodes.length; c < cLen; c++) {\n                                    if (this._topologyService.accessGroupNodes[c].groupName === accessNodeObj.groupName) {\n                                        this._topologyService.accessGroupNodes[c].topologyNodeIds = idArr;\n                                    }\n                                }\n                                this.snackBar.open(this.translate.instant\n                                    ('application.app.CONFIGURATION_LABELS.CHIPSETS.MESSAGE.LOCATION_REMOVED'),\n                                    '', {\n                                        duration: 3000,\n                                        horizontalPosition: 'right',\n                                        panelClass: 'snack__success'\n                                    });\n                                this.updateAccessGroup();\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    isActiveAccessGroup(node, nodeNames, accessNodes) {\n        let responseData;\n        for (let a = 0, aLen = accessNodes.length; a < aLen; a++) {\n            if (node.item === accessNodes[a].groupName) {\n                const topologyGroupId = accessNodes[a].topologyGroupId;\n                this._topologyService.getAccessGroupUsers(topologyGroupId, {}).subscribe((res) => {\n                    if (res) {\n                        if (res[0] && res[0].code === 20001) {\n                            this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                                duration: 3000,\n                                horizontalPosition: 'right',\n                                panelClass: 'snack__error'\n                            });\n                            return;\n                        }\n                       responseData = res;\n                       if (responseData.totalRecordsReturned > 0) {\n                           this.openConfirmDeleteBox(node, accessNodes, nodeNames);\n                       } else {\n                           this.removeAccessGroup(node, accessNodes);\n                       }\n                    }\n                });\n            }\n        }\n    }\n\n    // editAccessGroupName : called when access group node name is changed\n    editAccessGroupName(node) {\n        this.isEditable = true;\n        this.nodeToEdit = node.item;\n        this.accessGroupForm.value.groupName = '';\n        this.accessGroupEditForm.value.groupParentName = '';\n    }\n\n    // getNodeName : saves the new name of the node to changedName variable\n    getNodeName(value) {\n        this.changedName = value;\n    }\n\n    // updateAccessGroup: updates the tree structure of access group nodes\n    updateAccessGroup() {\n        this.createAccessGroupNodes(this._topologyService.accessGroupNodes);\n        this.databaseSubscriber();\n        this._createDataSources();\n    }\n\n    // updateUnassignedItems : updates the tree structure of unassigned nodes available\n    updateUnassignedItems() {\n        const childNodes = [];\n        for (const item of this._topologyService.unassignedNodesArr) {\n            childNodes.push(item.name);\n        }\n        const dataUnassigned = this.database.buildFileTree(childNodes, 0, 'unassignednode');\n        this._topologyService.unAssignedNodes = dataUnassigned;\n        this.database.dataChangeUnassigned.next(dataUnassigned);\n    }\n\n    // updateAssignedNodes : updates the tree structure of assigned nodes\n    updateAssignedNodes() {\n        this.setAssignedNodes(this._topologyService.topologyNodes);\n        this._topologyService.topologyNodeNames = this._topologyService.createNodeNamesObject(this._topologyService.topologyNodes);\n        this._topologyService.siteChildren = this._topologyService.getSiteChildren(this._topologyService.topologyNodeNames);\n        this._topologyService.nodeDragged.next();\n        this.databaseSubscriber();\n        this._createDataSources();\n    }\n\n    // updateNodeName : updates the name of access group node\n    updateNodeName(node, formName) {\n        let newValue;\n        if (formName === 'accessGroupForm') {\n            newValue = this.accessGroupForm.value.groupName;\n        } else {\n            newValue = this.accessGroupEditForm.value.groupParentName;\n        }\n        if (newValue && newValue !== this.nodeToEdit) {\n            const accessNodes = this._topologyService.accessGroupNodes;\n            let prevName;\n            for (let a = 0, aLen = accessNodes.length; a < aLen; a++) {\n                if (node.item === accessNodes[a].groupName) {\n                    prevName = node.item;\n                    const accessObj = {\n                        groupName: newValue,\n                        groupType: accessNodes[a].groupType,\n                        topologyGroupId: accessNodes[a].topologyGroupId,\n                        topologyId: accessNodes[a].topologyId,\n                        topologyNodeIds: accessNodes[a].topologyNodeIds,\n                        userId: accessNodes[a].userId\n                    };\n                    this._topologyService.updateAccessGroupNode(accessNodes[a].topologyGroupId, accessObj).subscribe( (res) => {\n                        if (res[0] && res[0].code === 20001) {\n                            this.snackBar.open('Error Occurred. Pls try again later.', '', {\n                                duration: 3000,\n                                horizontalPosition: 'right',\n                                panelClass: 'snack__error'\n                            });\n                            return;\n                        }\n                        for (let b = 0, bLen = this._topologyService.accessGroupNodes.length; b < bLen; b++) {\n                            if (this._topologyService.accessGroupNodes[b].groupName === prevName) {\n                                this._topologyService.accessGroupNodes[b].groupName = newValue;\n                                break;\n                            }\n                        }\n                        this.updateAccessGroup();\n                        this.snackBar.open(this.translate.instant('application.app.common.labels.NAME_UPDATED'), '', {\n                            duration: 3000,\n                            horizontalPosition: 'right',\n                            panelClass: 'snack__success'\n                        });\n                    });\n                }\n            }\n        }\n        this.clearNodeName();\n    }\n\n    isDuplicateName(formName) {\n        let value;\n        if (formName === 'accessGroupEditForm') {\n           value = this.accessGroupEditForm.value.groupParentName;\n        } else {\n           value = this.accessGroupForm.value.groupName;\n        }\n        let isRedundant = false;\n        const accessGroups = this._topologyService.accessGroupNodes;\n        for (let i =0, iLen = accessGroups.length; i < iLen; i++) {\n            if (accessGroups[i].groupName === value && value !== this.nodeToEdit) {\n                isRedundant = true;\n            }\n        }\n        return isRedundant;\n    }\n\n    validateGroupName: ErrorStateMatcher = {\n        isErrorState: (control: FormControl) => {\n            this.isGroupNameInvalid = this.isDuplicateName('accessGroupForm');\n            return this.isGroupNameInvalid;\n        }\n    };\n\n    validateAccessGroupName: ErrorStateMatcher = {\n        isErrorState: (control: FormControl) => {\n            this.isGroupNameInvalid = this.isDuplicateName('accessGroupEditForm');\n            return this.isGroupNameInvalid;\n        }\n    };\n\n    // clearNodeName : reset the variables changes while editing the access group name\n    clearNodeName() {\n        this.isEditable = false;\n        this.nodeToEdit = '';\n        /*this.accessGroupForm.value.groupName = '';\n        this.accessGroupEditForm.value.groupParentName = '';*/\n        this.accessGroupForm = this.fb.group({\n        });\n        this.accessGroupEditForm = this.fb.group({\n        });\n        this.addFormValidations();\n    }\n    valChangeFunction(evt, gName, fName) {\n        const valObj = {};\n        valObj[fName] = evt;\n        this[gName].patchValue(valObj, {onlySelf: true});\n    }\n\n    // addToTopologyNodesArr :  adds the dragged assigned node to the topology tree of assigned nodes\n    addToTopologyNodesArr(res, prevParentId?: number) {\n       const draggedNode = res[0].nodeId;\n       const newParentId = res[0].parentNodeId;\n       const nodeKeys = Object.keys(this._topologyService.topologyNodes);\n       const parentIdString = newParentId.toString();\n       if (nodeKeys.indexOf(parentIdString) > -1) {\n           this._topologyService.topologyNodes[newParentId].push(res[0]);\n       } else {\n           this._topologyService.topologyNodes[newParentId] = res;\n       }\n       this._topologyService.topologyNodeNames[draggedNode] = res[0];\n       if (prevParentId) {\n           this.deleteFromTopologyNodesArr(prevParentId, res);\n       }\n       this._topologyService.siteChildren = this._topologyService.getSiteChildren(this._topologyService.topologyNodeNames);\n       this.setAssignedNodes(this._topologyService.topologyNodes);\n    }\n\n    // deleteFromTopologyNodesArr : updates the topology nodes data\n    deleteFromTopologyNodesArr(prevParentId, res) {\n       const node = res[0];\n       const newArr = this._topologyService.topologyNodes[prevParentId];\n       if (newArr.length === 1) {\n           for (let i = 0, iLen = newArr.length; i < iLen; i++) {\n               if (node.nodeId === newArr[i].nodeId) {\n                   newArr.splice(i, 1);\n                   break;\n               }\n           }\n           if (newArr.length === 0) {\n               delete this._topologyService.topologyNodes[prevParentId];\n           }\n       } else if (newArr.length > 1) {\n           for (let i = 0, iLen = newArr.length; i < iLen; i++) {\n               if (node.nodeId === newArr[i].nodeId) {\n                   newArr.splice(i, 1);\n                   break;\n               }\n           }\n           this._topologyService.topologyNodes[prevParentId] = newArr;\n       }\n    }\n\n    isTerminal(draggedNodeId) {\n        let isNodeATerminal = false;\n        for (const nodeObj in this._topologyService.topologyNodeNames) {\n            if (this._topologyService.topologyNodeNames.hasOwnProperty(nodeObj) && parseInt(nodeObj, 10) === draggedNodeId) {\n                if (this._topologyService.topologyNodeNames[nodeObj].type === 1000) {\n                    isNodeATerminal = true;\n                }\n            }\n        }\n        return isNodeATerminal;\n    }\n\n    nodeAlreadyExists(draggedNodeId, node) {\n        let isNodePresent = false;\n        for (let i = 0, iLen = this._topologyService.accessGroupNodes.length; i < iLen; i++) {\n            const accessNode =  this._topologyService.accessGroupNodes[i];\n            if (accessNode.groupName === this.flatNodeMap.get(node).item) {\n                if (accessNode.topologyNodeIds.indexOf(draggedNodeId) > -1) {\n                   isNodePresent = true;\n                }\n            }\n        }\n        return isNodePresent;\n    }\n\n    openConfirmDeleteBox(node, accessNodes, nodeNames): void {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent, {\n            width: dialogSize.small,\n            data: {nodeToDelete: node}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result === true) {\n                if (node.level === 0) {\n                    this.removeAccessGroup(node, accessNodes);\n                } else if (node.level === 1) {\n                    this.removeAccessGroupChild(node, accessNodes, nodeNames);\n                }\n            }\n        });\n    }\n\n    isTerminalOfPit(node): boolean {\n        const parentID = this.nodeNames[node.item].parentNodeId;\n        const parentType = this.nodeNames[parentID].type;\n        return parentType === 1200;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TopologytreeService} from '../services/topologytree.service';\nimport {MaterialComponentModule} from '../material-component/material-component.module';\nimport {CommonModule} from '@angular/common';\nimport {TopologyTreeDragDropComponent} from './topology-tree-drag-drop.component';\nimport {CommonTranslationModule} from '../common-translation/common-translation.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\nimport {AppTablesModule} from '../app-tables/app-tables.module';\n\n/**\n * this module provide the topology tree component, service etc.. as you will add later like Pipe, Filters etc...\n * exported into the CommonUILib Module.\n */\n@NgModule({\n    imports: [MaterialComponentModule, CommonModule, CommonTranslationModule, MatInputModule, AppTablesModule],\n    declarations: [TopologyTreeDragDropComponent, ConfirmDeleteComponent],\n    exports: [TopologyTreeDragDropComponent],\n    providers: [TopologytreeService],\n    entryComponents: [ConfirmDeleteComponent]\n})\nexport class TopologyTreeModule {\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {urls} from '../constants/urls';\nimport {Observable, of} from 'rxjs';\nimport {BuyInTransactionInterface} from '../interface/cage.interface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionsService {\n    gamingDay = ''\n  constructor(private http: HttpClient) { }\n\n  getBuyInData(): Observable<BuyInTransactionInterface[]> {\n\n    const url = `${urls.cage.buyInTransaction + '?gamingDay=' + urls.cage.gamingDay + '&txnTypes=BUYIN&topologyIds=1009&start=1&limit=1000'}`;\n      //console.log('localgamingdays:::', url);\n    return this.http.get<BuyInTransactionInterface[]>(url);\n  }\n    getCreditData(): Observable<HttpResponse<Object>> {\n        const url = `${urls.cage.buyInTransaction + '?gamingDay=' + urls.cage.gamingDay + '&txnTypes=CREDIT&topologyIds=1009&start=1&limit=1000'}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    getFillData(): Observable<HttpResponse<Object>> {\n        const url = `${urls.cage.buyInTransaction + '?gamingDay=' + urls.cage.gamingDay + '&txnTypes=FILL&topologyIds=1009&start=1&limit=1000'}`;\n        return this.http.get<HttpResponse<Object>>(url);\n    }\n    getChipTrayScanData(): Observable<HttpResponse<Object>> {\n            const url = `${urls.cage.chipTrayScan + '1001' + '?gamingDay=' + urls.cage.gamingDay + '&reqFilter=1'}`;\n            return this.http.get<HttpResponse<Object>>(url);\n        }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T> (operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // TODO: better job of transforming error for user consumption\n            console.log(`${operation} failed: ${error.message}`);\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-footer-nav',\n  templateUrl: './footer-nav.component.html',\n  styleUrls: ['./footer-nav.component.scss']\n})\nexport class FooterNavComponent implements OnInit {\n    @Input() objFooterNavData;\n    @Input() objTabsNameToDisplay;\n    @Input() translateLabel: string\n    constructor(public translate: TranslateService) { }\n\n  ngOnInit() {\n    //console.log('FooterNavComponent:::', this.objFooterNavData);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'minussigntoparenthesis'\n})\nexport class MinusSignToParenthesisPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        return value.charAt(0) === '-' ?\n            '(' + value.substring(1, value.length) + ')' :\n            value;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterNavComponent } from './footer-nav.component';\nimport {MaterialComponentModule} from '../material-component/material-component.module';\nimport {MinusSignToParenthesisPipe} from '../pipes/minussigntoparenthesis.pipe';\nimport {CommonTranslationModule} from '../common-translation/common-translation.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialComponentModule,\n    CommonTranslationModule\n  ],\n  declarations: [FooterNavComponent, MinusSignToParenthesisPipe],\n  exports: [FooterNavComponent, MinusSignToParenthesisPipe]\n})\nexport class FooterNavModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {urls} from '../constants/urls';\nimport {TopologyStatisticsTabularView} from '../interface/topology-types.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableDashboardService {\n\n  constructor(private http: HttpClient) {\n  }\n    getPlayers(options: {}): Observable<HttpResponse<Object>> {\n      // const url = 'http://172.31.2.102:8080/api/table/v1/players';\n        const url = urls.table.playerSearch;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getBetsUsingUuid(options: {}): Observable<HttpResponse<Object>> {\n        const url = urls.game.bets;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getPlayerById(playerId, options: {}): Observable<HttpResponse<Object>> {\n        const url = urls.table.playerSearch + '/' + playerId;\n        return this.http.get<HttpResponse<Object>>(url, options);\n    }\n    getSessionDetailBySessionID(sessionId , options: {}): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.sessions + '?&sessionId=' + sessionId;\n        return this.http.post<HttpResponse<Object>>(finalUrl , options) ;\n    }\n    getSessionDetailSessionsByIds(sessionIdAry , options: {}): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.sessionsByIds + '?sessionIds=' + sessionIdAry + '&identifier=2';\n        return this.http.post<HttpResponse<Object>>(finalUrl , options) ;\n    }\n    updatePlayer(reqObj , options: {}): Observable<HttpResponse<Object>> {\n      const finalUrl = urls.casinoMgr.updatePlayer + '?&UpdatedPlayerId=' + reqObj.UpdatedPlayerId +\n          '&gamingDay=' + reqObj.gamingDay + '&topologyId=' + reqObj.topologyId\n          + ' &userId=1&updateTime= ' + reqObj.updateTime + '&sessionIds=' + reqObj.sessionIds\n          + '&identifier=2&ircNumbers=' + reqObj.ircNumbers;\n        return this.http.post<HttpResponse<Object>>(finalUrl, options) ;\n    }\n    updateIrcNumber(body): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.updateIrcNumber;\n        return this.http.post<HttpResponse<Object>>(finalUrl , body) ;\n    }\n    updateNotes(body): Observable<HttpResponse<Object>> {\n        const finalUrl = urls.game.sessionNote;\n        return this.http.post<HttpResponse<Object>>(finalUrl , body) ;\n    }\n    updateManualRating(body, sessionId): Observable<HttpResponse<Object>> {\n       // const finalUrl = 'http://172.31.2.102:8080/api/game/v1/manualRatings' + sessionId;\n        const finalUrl = urls.game.manualRatings + '/' + sessionId;\n        return this.http.post<HttpResponse<Object>>(finalUrl , body) ;\n    }\n    createManualRating(body): Observable<HttpResponse<Object>> {\n      //  const finalUrl = 'http://172.31.2.102:8080/api/game/v1/manualRatings';\n        const finalUrl = urls.game.manualRatings;\n        return this.http.post<HttpResponse<Object>>(finalUrl , body) ;\n    }\n}\n","/*\n * Public API Surface of common-ui-lib\n */\n\nexport * from './constants/url.common.constants';\nexport * from './constants/url-alert.constants';\nexport * from './constants/url-authentication.constants';\nexport * from './constants/url-configuration.constants';\nexport * from './constants/url-casinomanager.constants';\nexport * from './constants/urls';\nexport * from './constants/constants';\nexport * from './constants/url-players.constant';\nexport * from './filter/filter.component';\nexport * from './app-switcher/app-switcher.component';\nexport * from './app-switcher/app-menu.component';\nexport * from './app-switcher/app-list.component';\nexport * from './breadcrumb/breadcrumb.component';\nexport * from './services/alert.service';\nexport * from './services/utility.service';\nexport * from './sorting/sorting.service';\nexport * from './interface/alert.interface';\nexport * from './interface/link.interface';\nexport * from './interface/table-headers.interface';\nexport * from './interface/table-filters.interface';\nexport * from './services/user.service';\nexport * from './services/Authentication/auth.guard';\nexport * from './services/Authentication/auth.service';\nexport * from './services/Authentication/decoded-token.service';\nexport * from './services/Authentication/jwt-interceptor.service';\nexport * from './services/Authentication/token-handling.service';\nexport * from './services/topology.service';\nexport * from './services/cage.service';\nexport * from './common-translation/common-translation.module';\nexport * from './common-translation/common-translation.service';\nexport * from './header/top-nav-bar/top-nav-bar.component';\nexport * from './player-search/player-search.component';\nexport * from './header/subnav-bar/subnav-bar.component';\nexport * from './header/subnav-data-bar/subnav-data-bar.component';\nexport * from './material-component/material-component.module';\nexport * from './common-ui-lib.module';\nexport * from './web-sockets/ws-alert.config';\nexport * from './services/promotion.service';\nexport * from './interface/promotion.interface';\nexport * from './interface/cage.interface';\nexport * from './services/chip.service';\nexport * from './services/configuration.service';\nexport * from './chip-icons/chip-icons.component';\nexport * from './app-tables/app-tables.module';\nexport * from './app-tables/app-tables.component';\nexport * from './app-tables/app-tables.service';\nexport * from './filter/filter.component';\nexport * from './pagination/pagination.component';\nexport * from './topology-tree-drag-drop/topology-tree.module';\nexport * from './roll-time/app-roll-time.module';\nexport * from './roll-time/roll-time.component';\nexport * from './roll-time/roll-time-diaglog/roll-time-dialog.component';\nexport * from './interface/topology-types.interface';\nexport * from './interface/topology-property.interface';\nexport * from './header/winner-eligible-sessions/winner-eligible-sessions.component';\nexport * from './services/casinomanager.service';\nexport * from './access-denied/access-denied.component';\nexport * from './services/transactions.service';\nexport * from './footer/footer-nav.module';\nexport * from './app-add-node-topology/app-add-node-topology.component';\nexport * from './services/logout-utility.service';\nexport * from './interface/user-detail.interface';\nexport * from './services/top-nav-bar.service';\nexport * from './buy-ins/buy-ins.component';\nexport * from './opener-closer/opener-closer.component';\nexport * from './fill-credit/fill-credit.component';\nexport * from './pipes/minussigntoparenthesis.pipe';\nexport * from './game-history/game-history.component';\nexport * from './services/table-dashboard.service';\nexport * from './interface/table-expandable-row.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ActionMenuComponent as ɵs} from './action-menu/action-menu.component';\nexport {AppTabBarComponent as ɵt} from './app-tab-bar/app-tab-bar.component';\nexport {ChipsetPanelComponent as ɵu} from './chipset-panel/chipset-panel.component';\nexport {cage as ɵe} from './constants/url-cage.constants';\nexport {chipSet as ɵb} from './constants/url-chipset.constants';\nexport {device as ɵi} from './constants/url-device.constants';\nexport {game as ɵh} from './constants/url-game.constants';\nexport {promotion as ɵg} from './constants/url-promotion.constants';\nexport {roles as ɵc} from './constants/url-roles.constants';\nexport {table as ɵj} from './constants/url-table.constants';\nexport {topology as ɵd} from './constants/url-topology.constants';\nexport {topologyTree as ɵf} from './constants/url-topologytree.constants';\nexport {user as ɵa} from './constants/url-user.constants';\nexport {WdtsSpecialCharDirective as ɵp} from './directives/wdts-special-char.directive';\nexport {FooterNavComponent as ɵz} from './footer/footer-nav.component';\nexport {LoaderComponent as ɵr} from './loader/loader.component';\nexport {AmountFormatPipe as ɵn} from './pipes/amount-format.pipe';\nexport {RoundUpPipe as ɵo} from './pipes/round-up.pipe';\nexport {WdtsSpecialCharPipe as ɵm} from './pipes/wdts-special-char.pipe';\nexport {CurrentTopologyService as ɵq} from './services/current-topology.service';\nexport {TableUIService as ɵl} from './services/table-ui.service';\nexport {TopologytreeService as ɵk} from './services/topologytree.service';\nexport {ConfirmDeleteComponent as ɵy} from './topology-tree-drag-drop/confirm-delete/confirm-delete.component';\nexport {TreeDragDropItemDataBase as ɵx} from './topology-tree-drag-drop/topology-dragdrop-database';\nexport {TopologyTreeDragDropComponent as ɵw} from './topology-tree-drag-drop/topology-tree-drag-drop.component';\nexport {configRxLogoutStompConfig as ɵv} from './web-sockets/ws-auth.config';"],"names":["basePath","baseUrl","version","tokenGetter"],"mappings":"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"}