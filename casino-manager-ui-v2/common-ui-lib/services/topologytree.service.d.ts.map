{"version":3,"file":"topologytree.service.d.ts","sources":["topologytree.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nexport interface ITopologyNodes {\n    meta: {\n        href: string;\n        mediaType: string;\n    };\n    nodeId: string;\n    name: string;\n    shortName: string;\n    type: number;\n    description: string;\n    deleted: boolean;\n    retired: boolean;\n    parentNodeId: number;\n    parentNodeHref: string;\n    path: string;\n    childNodesHrefs: Array<any>;\n    createdDtm: string;\n    updatedDtm: string;\n    status: string;\n    children: Array<any>;\n}\n/**\n * AVG:(Access or Virtual Group) nodes, this interface has common properties for access and virtual group.\n */\nexport interface ITopologyAVGNodes {\n    createdDtm: string;\n    groupName: string;\n    groupType: string;\n    meta: {\n        href: string;\n        mediaType: string;\n    };\n    topologyGroupId: number;\n    topologyId: number;\n    topologyNodeIds: Array<any>;\n    updatedDtm: string;\n    userId: number;\n}\n/**\n * if you need to provide it at global level do not specify the module here just write the 'root', this is restricted to module if you\n * want to use the service need to import TopologyTreeModule.\n */\nexport declare class TopologytreeService {\n    private _http;\n    constructor(_http: HttpClient);\n    getTopologyNodes(url: any): Observable<ITopologyNodes[]>;\n    getTopologyTypes(url: any): Observable<ITopologyNodes[]>;\n    getTopologyNodeByNodeId(url: any, params?: HttpParams): Observable<ITopologyNodes[]>;\n    getAccessOrVirtualGroupNodes(url: any, params?: HttpParams): Observable<ITopologyAVGNodes[]>;\n    getTopologyNodeUnassigned(url: any): Observable<ITopologyNodes[]>;\n}\n"]}