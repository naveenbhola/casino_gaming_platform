{"version":3,"file":"configuration.service.d.ts","sources":["configuration.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SystemProperty } from '../interface/configuration.interface';\nexport declare class ConfigurationService {\n    private http;\n    constructor(http: HttpClient);\n    getLimits(options: {}): Observable<HttpResponse<Object>>;\n    getInActiveLimits(options: {}): Observable<HttpResponse<Object>>;\n    getConfigurationProperties(options: {}, type: any): Observable<HttpResponse<Object>>;\n    getConfigurationPropertyValues(options: {}, topologyId: any): Observable<HttpResponse<Object>>;\n    saveConfigurationproperties(options: {}): Observable<HttpResponse<Object>>;\n    getSystemData(): Observable<SystemProperty[]>;\n    getConfigurations(topologyId: any): Observable<HttpResponse<Object>>;\n    isGlobalAnonymousHostEnabled(): Observable<HttpResponse<Object>>;\n    checkGlobalCbpt(): Observable<HttpResponse<Object>>;\n    checkFctxnEnabled(): Observable<HttpResponse<Object>>;\n    getHostcallTemplate(): Observable<HttpResponse<Object>>;\n    getHostcallDataOnTopology(topologyId: any): Observable<HttpResponse<Object>>;\n    postHostcallDataOnTopology(data: any): Observable<HttpResponse<Object>>;\n    putHostcallData(data: any, id: any): Observable<HttpResponse<Object>>;\n    isPlayerAdustmentEnabled(): Observable<HttpResponse<Object>>;\n    getPlayerRankingList(): Observable<HttpResponse<Object>>;\n    getPlayerAdjustment(topologyId: any, propertyId: any): Observable<HttpResponse<Object>>;\n    postPlayerAdjustment(topologyId: any, propertyId: any, objData: any): Observable<HttpResponse<Object>>;\n    updatePlayerAdjustment(topologyId: any, propertyId: any, objData: any): Observable<HttpResponse<Object>>;\n    putPlayerAdjustment(configId: any, propertyId: any, objData: any): Observable<HttpResponse<Object>>;\n}\n"]}