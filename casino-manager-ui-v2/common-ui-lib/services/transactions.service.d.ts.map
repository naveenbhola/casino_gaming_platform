{"version":3,"file":"transactions.service.d.ts","sources":["transactions.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BuyInTransactionInterface } from '../interface/cage.interface';\nexport declare class TransactionsService {\n    private http;\n    gamingDay: string;\n    constructor(http: HttpClient);\n    getBuyInData(): Observable<BuyInTransactionInterface[]>;\n    getCreditData(): Observable<HttpResponse<Object>>;\n    getFillData(): Observable<HttpResponse<Object>>;\n    getChipTrayScanData(): Observable<HttpResponse<Object>>;\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError;\n}\n"]}