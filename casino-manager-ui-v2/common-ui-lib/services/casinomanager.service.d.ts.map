{"version":3,"file":"casinomanager.service.d.ts","sources":["casinomanager.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { TopologyStatisticsTabularView, TopologyStatistics, TopologyStatisticsGridView } from '../interface/topology-types.interface';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { OpenerCloserInterface } from '../interface/casino-manager.interface';\nexport declare class CasinomanagerService {\n    private http;\n    constructor(http: HttpClient);\n    getTopologyStatisticsTabularView(options: {}): Observable<TopologyStatisticsTabularView>;\n    getTopologyStatsTabularView(options: {}): Observable<TopologyStatisticsTabularView>;\n    getTopologyStatisticsGridView(options: {}): Observable<TopologyStatisticsGridView>;\n    getTopologyStatsByTableType(options: {}, url: any): Observable<TopologyStatisticsTabularView>;\n    getTopologyStatistics(gamingDay: any, topologyIds: any, viewId: any, options: {}): Observable<TopologyStatistics>;\n    getTopologyStatisticsForVirtualGroup(gamingDay: any, topologyGroupId: any, viewId: any, options: {}): Observable<TopologyStatistics>;\n    getTopLosingCasino(gamingDay: any, topologyId: any): Observable<HttpResponse<Object>>;\n    getTopWinningCasino(gamingDay: any, topologyId: any): Observable<HttpResponse<Object>>;\n    getTopLosingPlayersVirtualGroup(gamingDay: any, topologyId: any): Observable<HttpResponse<Object>>;\n    getTopWinningPlayersVirtualGroup(gamingDay: any, topologyId: any): Observable<HttpResponse<Object>>;\n    getPlayerStatistics(options: {}): Observable<TopologyStatisticsTabularView>;\n    getPaginatedOpenerCloser(options: {}): Observable<OpenerCloserInterface>;\n    getPaginatedSearchManualRatings(url: any, options: {}): Observable<HttpResponse<Object>>;\n    getpaginatedSessions(payload: any, options: {}): Observable<HttpResponse<Object>>;\n    getpaginatedGames(options: {}): Observable<HttpResponse<Object>>;\n    getFilterForTable(options: {}): Observable<HttpResponse<Object>>;\n    getFilterForPlayer(options: {}): Observable<HttpResponse<Object>>;\n    getActivePlayer(options: {}): Observable<HttpResponse<Object>>;\n    getUserSearch(options: {}): Observable<HttpResponse<Object>>;\n}\n"]}