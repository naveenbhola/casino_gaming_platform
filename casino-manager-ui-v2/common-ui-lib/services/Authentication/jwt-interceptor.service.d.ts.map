{"version":3,"file":"jwt-interceptor.service.d.ts","sources":["jwt-interceptor.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { DecodedTokenService } from './decoded-token.service';\nimport { AuthService } from './auth.service';\nimport { LogoutUtilityService } from '../logout-utility.service';\nimport { NGXLogger } from 'ngx-logger';\n/**\n * This service performs the following tasks:\n * 1> Add jwt Token to every call\n * 2> refreshes token if it's about to expire\n */\nexport declare class JwtInterceptorService implements HttpInterceptor {\n    private jwtHelper;\n    private decodedTokenService;\n    private authService;\n    private logoutUtilityService;\n    private logger;\n    jwtTokenFromUrl: string;\n    constructor(jwtHelper: JwtHelperService, decodedTokenService: DecodedTokenService, authService: AuthService, logoutUtilityService: LogoutUtilityService, logger: NGXLogger);\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    interceptHeader(req: any, next: any, jwtToken: any): any;\n}\n"]}