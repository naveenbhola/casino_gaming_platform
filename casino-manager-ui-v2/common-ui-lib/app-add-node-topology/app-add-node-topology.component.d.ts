import { EventEmitter, OnInit } from '@angular/core';
import { ErrorStateMatcher } from '@angular/material/core';
import { MatDialog } from '@angular/material/dialog';
import { MatSnackBar } from '@angular/material/snack-bar';
import { FormBuilder, FormControl } from '@angular/forms';
import { TranslateService } from '@ngx-translate/core';
import { TopologyService } from '../services/topology.service';
import * as ɵngcc0 from '@angular/core';
export declare class AppAddNodeTopologyComponent implements OnInit {
    dialogRef: MatDialog;
    data: any;
    _topologyService: TopologyService;
    fb: FormBuilder;
    snackBar: MatSnackBar;
    translate: TranslateService;
    optionArr: any[];
    typeVal: any;
    longName: any;
    shortName: any;
    description: any;
    host: any;
    min: number;
    max: number;
    isHost: boolean;
    loader: boolean;
    addedNodeEvent: EventEmitter<any>;
    siteTopologyCode: any;
    sitesFromTopology: any[];
    companyLevelCode: any;
    isAccessGroup: boolean;
    isAGNameInvalid: boolean;
    isShortNameInvalid: boolean;
    isLongNameInvalid: boolean;
    savedAccessGroup: string;
    savedLocation: any;
    constructor(dialogRef: MatDialog, data: any, _topologyService: TopologyService, fb: FormBuilder, snackBar: MatSnackBar, translate: TranslateService);
    limitForm: import("@angular/forms").FormGroup;
    validateShortName: ErrorStateMatcher;
    validateName: ErrorStateMatcher;
    validateAccessGroupName: ErrorStateMatcher;
    valChangeFunction(evt: any, fName: any): void;
    addValidations(): void;
    noWhitespace(control: FormControl): {
        whitespace: boolean;
    };
    showHost(opt: any): void;
    ngOnInit(): void;
    createDataForDropdownForAccessGroup(topologyTypes: any): void;
    createDataForDropdownForAssingedNode(types: any): void;
    createAccessGroup(): void;
    createAssingedNode(): void;
    createNode(): void;
    closeDialogBox(): void;
    isDuplicate(field: any, value: any): boolean;
    isSaveDisabled(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AppAddNodeTopologyComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AppAddNodeTopologyComponent, "app-app-add-node-topology", never, {}, { "addedNodeEvent": "addedNodeEvent"; }, never, never>;
}

//# sourceMappingURL=app-add-node-topology.component.d.ts.map